Imports pfcls
'Imports Autodesk.AutoCAD.Interop
'Imports Autodesk.AutoCAD.Interop.Common
Imports System.Math
Imports MySql.Data.MySqlClient
Imports System.IO
Imports System.Runtime.InteropServices
Imports System
Imports System.Diagnostics
Imports System.Configuration
Imports Excel = Microsoft.Office.Interop.Excel

Public Class Rotor
    Dim AC As IpfcAsyncConnection = Nothing
    Dim CcAC As New CCpfcAsyncConnection
    Dim iparamValue As IpfcParamValue
    Dim iParameterOwner As IpfcParameterOwner
    Dim iParameter As IpfcParameter
    Dim window As IpfcWindow
    Dim session As IpfcSession
    Dim smodel, smodel_1, smodel_2, smodel_3, smodel_4, smodel_5, smodel_6, smodel_7, smodel_8, smodel_9, smodel_10， md, md1, md2, md3, md4, md5, md6, md7, md8, md9, solidDesc As IpfcModelDescriptor
    Dim drw, model, models_1, m, m1, m2, m3, m4, m5, m6, m7, m8, m9, solid As IpfcModel
    Dim asm As IpfcAssembly
    Dim models As IpfcModels
    Dim drawing, drawing1 As IpfcDrawing
    Dim drwFormat As IpfcDrawingFormat
    Dim assembly, assembly_1 As IpfcAssembly
    Dim part, ComponentModel, componentModel_1, componentModel_2, componentModel_3, componentModel_4, componentModel_5, componentModel_6, componentModel_7, componentModel_8, componentModel_9, part1, part2, part3, part4, part5, part6, s, s1, s2, s3, s4, s5, s6, s7, s8, s9 As IpfcSolid
    Dim asmcomp, asmcomp_1, asmcomp_2, asmcomp_3, asmcomp_4, asmcomp_5, asmcomp_6, asmcomp_7, asmcomp_8, asmcomp_9 As IpfcComponentFeat
    Dim constraints, constraints1 As IpfcComponentConstraints
    Dim detailNoteInstructions As IpfcDetailNoteInstructions
    Dim detailNoteItem As IpfcDetailNoteItem
    Dim asmItem_1, asmItem_2, asmItem_3, asmItem_4, asmItem_5, cellnote, DimItem, Dim_pre1, Dim_pre2, Dim_pre3,
        compItem_1, compItem_2, compItem_3, compItem_4, compItem_5, compItem_6, compItem_7, compItem_8,
    note_Item_1, note_Item_2, note_Item_3, note_Item_4, note_Item_5, note_Item_6,
    note_Item_7, note_Item_8, note_Item_9, note_Item_10, note_Item_11, note_Item_12 As IpfcModelItem
    Dim feats， modelItems As IpfcModelItems
    Dim ids, idz， idx, ida, idb, idc As Cintseq
    Dim ComponentPath, paths, path1, path2, path3, path4, path5, path6, path7, sp1, cpa, sp2, sp3， pa As IpfcComponentPath
    Dim seBuffer, compSelect_1, compSelect_2, compSelect_3， compSelect_4, compSelect_5， compSelect_6, compSelect_7, compSelect_8, compSelect_10, compSelect_11 As IpfcSelection
    Dim constraint， constraint1, constraint2, constraint3 As IpfcComponentConstraint
    Dim matrix, matrix_1, matrix_2, matrix_3 As New CpfcMatrix3D
    Dim transform3D_1, transform3D_2 As IpfcTransform3D
    Dim M3d As IpfcMatrix3D
    Dim outline As IpfcOutline3D
    Dim p3d As IpfcPoint3D
    Dim viewer As IpfcViewOwner
    Dim excludes As IpfcModelItemTypes
    Dim Scale As Double
    Dim se As IpfcSession
    Dim row, col As Integer
    Dim view2D As IpfcView2D = Nothing
    Dim name_view As IpfcView
    Dim instrs, instrs_1, instrs_2 As IpfcGeneralViewCreateInstructions
    Dim drawingOptions As New CpfcDrawingCreateOptions
    Dim viewdisplay As IpfcViewDisplay
    Dim view2Ds As IpfcView2Ds
    Dim i As Integer
    Dim viewName As String
    Dim displayStyle As String
    Dim sheetNo As Integer
    Dim mysqlcon As MySqlConnection
    Dim mysqlcom As MySqlCommand
    Dim dr, dr3, dr2, dr4, dr5, dr6， read As MySqlDataReader
    Dim feat As IpfcFeature
    Dim features As IpfcFeatures
    Dim selBuffer As IpfcSelectionBuffer
    Dim DeleteOperation As IpfcDeleteOperation
    Dim FeatureOperations As New CpfcFeatureOperations
    Dim regenInstructions As IpfcRegenInstructions
    Dim r1, t, f1 As Double
    Dim B, T1, T2 As Double
    Dim View_creo As IpfcView

    Dim texts, name, column, axisName(), DatumName(), Strs(), StringValue As String
    Dim DetailSymbolInstItem As IpfcDetailSymbolInstItem
    Dim detailItem， detailItem10， detailItem11 As IpfcDetailItem
    Dim detailVariantTexts， detailVariantTexts10， detailVariantTexts11 As IpfcDetailVariantTexts
    Dim detailVariantText， detailVariantText10， detailVariantText11 As IpfcDetailVariantText
    Dim symItem， symItem10， symItem11 As IpfcDetailSymbolInstItem
    Dim symInstructions, detailSymbolDefInstructions， detailSymbolDefInstructions10， detailSymbolDefInstructions11 As IpfcDetailSymbolInstInstructions


    ' 数据库
    Dim Dmysqlcon, connect1, connect2, connect3, connect4 As MySqlConnection
    Dim Dmysqlcom, cursor1, cursor2, cursor3, cursor4 As MySqlCommand
    Public read1, read2, read3, Dread, Dread1, Dread2 As MySqlDataReader
    Dim fff As MySqlParameter
    Dim ffff As MySqlParameterCollection
    Dim database_name1, database_name2, database_name3, database_name4, database_name5,
            table_name1, table_name2, table_name3, table_name4, table_name5,
            updata1, updata2, updata3,
            updata4, updata5, updata6, updata7, updata8, updata9, updata10, updata11, updata12, updata13,
            updata14, updata15, updata16, updata17, updata18, sheet_size As String
    Dim values1, values2, values3, values4, values5 As Object()



    Dim view, view_1, view_2 As IpfcView

    Dim BaDimensions As IpfcBaseDimensions
    Dim BaDimension, BaDimension_1, BaDimension_2 As IpfcBaseDimension
    Dim Dimension, Dimension1, Dimension2, Dimension3, Dimension4, Dimension5, Dimension6, Dimension7, Dimension8, Dimension9 As IpfcDimension

    Dim Dimension2D As IpfcDimension2D
    Dim DiTolerance As IpfcDimTolerance
    Dim limits_S, limitsS As IpfcDimTolSymmetric '设置不显示后面数字
    Dim limits_P, limitsPM As IpfcDimTolPlusMinus '设置显示后面数字
    Dim limitstab As IpfcDimTolISODIN
    Dim TolTableType As EpfcToleranceTableType
    Dim detailText As IpfcDetailText
    Dim detailTexts As CpfcDetailTexts
    Dim textLine As IpfcDetailTextLine
    Dim textLines As CpfcDetailTextLines
    Dim noteInstructions As IpfcDetailNoteInstructions
    Dim note As IpfcDetailNoteItem
    Dim position As IpfcFreeAttachment
    Dim allAttachments As IpfcDetailLeaders = Nothing
    Dim leader As IpfcParametricAttachment = Nothing
    Dim attachments As CpfcAttachments
    Dim varText As IpfcDetailVariantText
    Dim symbolDefinition As IpfcDetailSymbolDefItem
    Dim symbolDefAttachment As IpfcSymbolDefAttachment = Nothing

    Dim FamMember As IpfcFamilyMember
    Dim FamMemberCols As IpfcFamilyTableColumns
    Dim FamMemberRows As IpfcFamilyTableRows
    Dim transform3D As IpfcTransform3D

    Dim mouse As IpfcMouseStatus

    Dim DraDimShowInstructions As IpfcDrawingDimensionShowInstructions
    Dim ComDimShowInstructions As IpfcComponentDimensionShowInstructions
    Dim DimShowInstructions As IpfcDimensionShowInstructions


    Dim TablesInfo As String = ""
    Dim tableOwner As IpfcTableOwner
    Dim tables As IpfcTables
    Dim table As IpfcTable
    Dim tablecell As IpfcTableCell
    Dim GetTableInfo As String = ""

    Dim ColSymbols, FamRow, codes, code_news, conNames, materials, partTypes, numbers, sin_weights, con_weights, remarks, boms, wgs, bzs, mxs, zzs, tjys, tms, sources, importances, sheet_sizes， own_asm, own_asm_numbers， ballmarks, contents As New ArrayList()
    Dim codes_wg, codes_wg_new, conNames_wg, own_asm_wg, numbers_wg, partTypes_wg, materials_wg, sin_weights_wg, sheet_sizes_wg, importances_wg, remarks_wg, sources_wg, own_asm_numbers_wg As New ArrayList()
    Dim codes_bz, codes_bz_new, conNames_bz, own_asm_bz, numbers_bz, partTypes_bz, materials_bz, sin_weights_bz, sheet_sizes_bz, importances_bz, remarks_bz, sources_bz, own_asm_numbers_bz As New ArrayList()
    Dim codes_zz, codes_zz_new, conNames_zz, own_asm_zz, numbers_zz, partTypes_zz, materials_zz, sin_weights_zz, sheet_sizes_zz, importances_zz, remarks_zz, sources_zz, own_asm_numbers_zz, code_news_zz As New ArrayList()
    Dim codes_mx, codes_mx_new, codes_mx_new2, conNames_mx, own_asm_mx, numbers_mx, partTypes_mx, materials_mx, sin_weights_mx, sheet_sizes_mx, importances_mx, remarks_mx, sources_mx, own_asm_numbers_mx, code_news_mx, con_weights_mx As New ArrayList()
    Dim codes_tjy, codes_tjy_new, conNames_tjy, own_asm_tjy, numbers_tjy, partTypes_tjy, materials_tjy, sin_weights_tjy, sheet_sizes_tjy, importances_tjy, remarks_tjy, sources_tjy, own_asm_numbers_tjy, code_news_tjy, con_weights_tjy As New ArrayList()
    Dim codes_tm, codes_tm_new, conNames_tm, own_asm_tm, numbers_tm, partTypes_tm, materials_tm, sin_weights_tm, sheet_sizes_tm, importances_tm, remarks_tm, sources_tm, own_asm_numbers_tm, code_news_tm As New ArrayList()
    Dim DimensValue, DimensValue1, DimensValue2, DimensValue3, DimensValue4, DimensValue5, DimensValue6, DimensValue7, DimensValue8, DimensValue9,
        DimensValue10, DimensValue11, DimensValue12, DimensValue13, DimensValue14, num(), number(), aa(), a()， T3, T4, T5, T6, T7, T8, T9, c_id1 As Double
    Dim gsvalue As String
    ' Auto CAD
    'Dim Acadapp As AcadApplication
    ''Dim Acadapp As AcadApplication
    'Dim Document As AcadDocument
    'Dim sset As AcadSelectionSet
    'Dim textobj As AcadText
    ''Dim textobj As AcadText
    'Dim z As Integer
    'Dim objEntity As AcadEntity
    'Dim lineobj1, lineobj2, lineobj3, lineobj4, lineobj5, lineobj6, lineobj7, lineobj8, lineobj9, lineobj10, lineobj11, lineobj12, lineobj13, lineobj14, lineobj15, lineobj16 As AcadLine
    'Dim objLayer As AcadLayer
    'Dim textpoint(0 To 2) As Double
    'Dim strartpoint1(0 To 2), strartpoint2(0 To 2), strartpoint3(0 To 2), strartpoint4(0 To 2), strartpoint5(0 To 2), strartpoint6(0 To 2)， strartpoint7(0 To 2), strartpoint8(0 To 2), space, Low_Polar_distance, q As Double
    'Dim endpoint1(0 To 2), endpoint2(0 To 2), endpoint3(0 To 2), endpoint4(0 To 2), endpoint5(0 To 2), endpoint6(0 To 2), endpoint7(0 To 2), endpoint8(0 To 2), throw_parameter As Double
    'Dim color As AcadAcCmColor
    'Dim Polar_distance, slot_No, up_down_distance, up_down_number, a_x_distance, a_x_number， last_x_number, T_phases As Integer
    'Dim ItemString As String()










    'Public Function CreateSSet(Document As AcadDocument, ByVal SSetName As String) As AcadSelectionSet
    '    Dim SSet As AcadSelectionSet
    '    For i = 0 To Document.SelectionSets.Count - 1
    '        SSet = Document.SelectionSets.Item(i)
    '        If StrComp(SSet.Name, SSetName, vbTextCompare) = 0 Then
    '            SSet.Delete()
    '            Exit For
    '        End If
    '    Next
    '    CreateSSet = Document.SelectionSets.Add(SSetName)
    'End Function
    'Public Sub 初始线圈()
    '    ' 建立线 第1根
    '    lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 185), 点(40, 220)) ' 竖上线
    '    '第2根
    '    lineobj2 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 175), 点(40, 140)) ' 竖下线
    '    '第3根  
    '    lineobj3 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 220), 点(40 + 1 / 6 * space + 0.5 * space * read("Polar_distance"), 240)) ' 斜上线
    '    '第4根
    '    lineobj4 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 140), 点(40 + 1 / 6 * space + 0.5 * space * read("Polar_distance"), 120)) ' 斜下线
    '    '切换图层
    '    objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '    Acadapp.ActiveDocument.ActiveLayer = objLayer
    '    '第5根
    '    lineobj5 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space + space * read("Polar_distance"), 185), 点(40 + 1 / 3 * space + space * read("Polar_distance"), 220)) ' 竖上线
    '    '第6根
    '    lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space + space * read("Polar_distance"), 175), 点(40 + 1 / 3 * space + space * read("Polar_distance"), 140)) ' 竖下线
    '    '第7根
    '    lineobj7 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space + space * read("Polar_distance"), 220), 点(40 + 1 / 6 * space + 0.5 * space * read("Polar_distance"), 240)) ' 斜上线
    '    '第8根
    '    lineobj8 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space + space * read("Polar_distance"), 140), 点(40 + 1 / 6 * space + 0.5 * space * read("Polar_distance"), 120)) ' 斜下线
    '    Threading.Thread.Sleep(1000)
    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    For i = 0 To 7
    '        If i > 3 Then
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(0)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            If i = 4 Or i = 5 Then
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2 * read("slot_number") - 1, 1, 1, space, 1)
    '            Else
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2 * read("slot_number"), 1, 1, space, 1)
    '            End If
    '        Else
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, read("Polar_distance"), 1, 1, -space, 1)
    '            objEntity.ArrayRectangular(1, 2 * read("slot_number") - read("Polar_distance"), 1, 1, space, 1)
    '        End If
    '    Next
    'End Sub
    'Public Sub 单双初始线圈()
    '    ' 建立线 第1根
    '    lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 185), 点(40, 220)) ' 竖上线
    '    '第2根
    '    lineobj2 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40, 175), 点(40, 140)) ' 竖下线
    '    '切换图层
    '    objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '    Acadapp.ActiveDocument.ActiveLayer = objLayer
    '    '第3根  
    '    lineobj3 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space, 185), 点(40 + 1 / 3 * space, 220)) ' 竖上线
    '    '第4根
    '    lineobj4 = Acadapp.ActiveDocument.ModelSpace.AddLine(点(40 + 1 / 3 * space, 175), 点(40 + 1 / 3 * space, 140)) ' 竖下线
    '    Threading.Thread.Sleep(1000)
    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    For i = 0 To 3
    '        If i > 1 Then
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(0)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, 2 * read("slot_number"), 1, 1, space, 1)
    '        Else
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, 2 * read("slot_number"), 1, 1, space, 1)
    '        End If
    '    Next
    'End Sub
    'Public Function 点(x#, y#, Optional z# = 0) As Double()
    '    Dim point(2) As Double
    '    point(0) = x : point(1) = y : point(2) = z
    '    Return point
    'End Function
    'Public Function 槽点(point_typ$, slot_No%, y#, Optional z# = 0) As Double()
    '    Dim point(2) As Double
    '    If point_typ = "上区点" Then
    '        point(0) = 40 + space * (slot_No - 1) : point(1) = y : point(2) = z
    '    ElseIf point_typ = "下区点" Then
    '        point(0) = 40 + 1 / 3 * space + space * (slot_No - 1) : point(1) = y : point(2) = z
    '    End If
    '    Return point
    'End Function
    'Public Function 线_阵列_颜色(p1 As Double(), p2 As Double(), colors#, lineobj1_Array As Boolean, Optional number% = 0, Optional number_space# = 0) As AcadLine
    '    If lineobj1_Array = True Then
    '        lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(p1, p2)
    '        lineobj1.color = colors
    '        lineobj1.ArrayRectangular(1, number, 1, 1, space * number_space#, 1)
    '    Else
    '        lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(p1, p2)
    '        lineobj1.color = colors
    '    End If
    '    Return lineobj1
    'End Function
    'Public Sub 绕线(number%, m#, colors#)
    '    For i = 1 To q - 1
    '        线_阵列_颜色(槽点("上区点", i + 1 + number, 140), 槽点("上区点", i + 1 + number, m - (i - 1) * 3),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", i + read("Polar_distance") + number, m - (i - 1) * 3), 槽点("下区点", i + read("Polar_distance") + number, 140),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("上区点", i + 1 + number, m - (i - 1) * 3), 槽点("下区点", i + read("Polar_distance") + number, m - (i - 1) * 3),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '    Next
    '    For z = 1 To q - 1
    '        线_阵列_颜色(槽点("上区点", a_x_distance + z + number, 140), 槽点("上区点", a_x_distance + z + number, m - z * 4),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", a_x_distance + read("Polar_distance") + z + 1 + number, m - z * 4), 槽点("下区点", a_x_distance + read("Polar_distance") + z + 1 + number, 140),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("上区点", a_x_distance + z + number, m - z * 4), 槽点("下区点", a_x_distance + read("Polar_distance") + z + 1 + number, m - z * 4),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '    Next
    '    If read("parallel_paths") = read("pole_number") Then
    '        线_阵列_颜色(槽点("上区点", 1 + number, 140), 槽点("上区点", 1 + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter)
    '        线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, 140), 槽点("下区点", q + read("Polar_distance") + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("上区点", last_x_number + number, 140), 槽点("上区点", last_x_number + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", up_down_number + number, 140), 槽点("下区点", up_down_number + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线

    '        线_阵列_颜色(点(40 + 1 / 3 * space + space * (q + read("Polar_distance") - 1.5 + number), 65), 点(40 + 1 / 3 * space + space * (q + read("Polar_distance") - 0.5 + number), 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(点(40 + space * (last_x_number - 1.5 + number), 65), 点(40 + space * (last_x_number - 0.5 + number), 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线         
    '    ElseIf read("parallel_paths") = read("pole_number") / 2 Then
    '        线_阵列_颜色(槽点("上区点", 1 + number, 140), 槽点("上区点", 1 + number, 65),
    '                        colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter)
    '        线_阵列_颜色(槽点("上区点", last_x_number + number, 140), 槽点("上区点", last_x_number + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(点(40 + space * (last_x_number - 1.5 + number), 65), 点(40 + space * (last_x_number - 0.5 + number), 65),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线   

    '        线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, 140), 槽点("下区点", q + read("Polar_distance") + number, m),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", up_down_number + number, m), 槽点("下区点", up_down_number + number, 140),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, m), 槽点("下区点", up_down_number + number, m),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '    ElseIf read("parallel_paths") = 2 Then
    '        If 0.5 * read("pole_number") Mod 2 = 0 Then
    '            线_阵列_颜色(槽点("上区点", last_x_number + number, 140), 槽点("上区点", last_x_number + number, m - z * 4),
    '                   colors#, True, read("pole_number") / 4 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("上区点", T_phases + 1 + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, 140),
    '                        colors#, True, read("pole_number") / 4 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("上区点", last_x_number + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, m - z * 4),
    '                        colors#, True, read("pole_number") / 4 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            Threading.Thread.Sleep(1000)
    '            sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '            sset.Select(AcSelect.acSelectionSetAll)
    '            For i = 0 To (read("pole_number") / 4 - 1) * 3 - 1
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2, 1, 1, space * 0.5 * read("pole_number") * (read("slot_number") / read("pole_number")), 1)
    '            Next

    '            线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, 140), 槽点("下区点", q + read("Polar_distance") + number, m),
    '                        colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("下区点", up_down_number + number, m), 槽点("下区点", up_down_number + number, 140),
    '                        colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, m), 槽点("下区点", up_down_number + number, m),
    '                        colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线

    '            线_阵列_颜色(槽点("上区点", 1 + number, 140), 槽点("上区点", 1 + number, 65), colors#, False)
    '            线_阵列_颜色(槽点("上区点", read("slot_number") / 2 - read("Polar_distance") + number, 140), 槽点("上区点", read("slot_number") / 2 - read("Polar_distance") + number, 65), colors#, False) '竖线
    '            线_阵列_颜色(点(40 + space * (read("slot_number") / 2 - read("Polar_distance") - 1.5 + number), 65), 点(40 + space * (read("slot_number") / 2 - read("Polar_distance") - 0.5 + number), 65), colors#, False) '竖线

    '            线_阵列_颜色(槽点("上区点", read("slot_number") / 2 + 1 + number, 140), 槽点("上区点", read("slot_number") / 2 + 1 + number, 65), colors#, False) '竖线
    '            线_阵列_颜色(槽点("上区点", read("slot_number") - read("Polar_distance") + number, 140), 槽点("上区点", read("slot_number") - read("Polar_distance") + number, 65), colors#, False)
    '            线_阵列_颜色(点(40 + space * (read("slot_number") - read("Polar_distance") - 1.5 + number), 65), 点(40 + space * (read("slot_number") - read("Polar_distance") - 0.5 + number), 65), colors#, False)
    '        Else
    '            线_阵列_颜色(槽点("上区点", last_x_number + number, 140), 槽点("上区点", last_x_number + number, m - z * 4),
    '                                       colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("上区点", T_phases + 1 + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, 140),
    '                        colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("上区点", last_x_number + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, m - z * 4),
    '                        colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线

    '            线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, 140), 槽点("下区点", q + read("Polar_distance") + number, m),
    '                        colors#, True, (read("pole_number") / 2 - 1) / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("下区点", up_down_number + number, m), 槽点("下区点", up_down_number + number, 140),
    '                        colors#, True, (read("pole_number") / 2 - 1) / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, m), 槽点("下区点", up_down_number + number, m),
    '                        colors#, True, (read("pole_number") / 2 - 1) / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '            Threading.Thread.Sleep(1000)
    '            sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '            sset.Select(AcSelect.acSelectionSetAll)
    '            For i = 0 To ((read("pole_number") / 2 - 1) / 2) * 3 - 1
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2, 1, 1, space * (0.5 * read("pole_number") + 1) * (read("slot_number") / read("pole_number")), 1)
    '            Next

    '            线_阵列_颜色(槽点("上区点", 1 + number, 140), 槽点("上区点", 1 + number, 65), colors#, False)
    '            线_阵列_颜色(槽点("下区点", (read("pole_number") / 2 - 1) * (read("Polar_distance") / throw_parameter) + (read("Polar_distance") + q) + number, 140), 槽点("下区点", (read("pole_number") / 2 - 1) * (read("Polar_distance") / throw_parameter) + (read("Polar_distance") + q) + number, 65), colors#, False) '竖线
    '            线_阵列_颜色(点(40 + 1 / 3 * space + space * ((read("pole_number") / 2 - 1) * (read("Polar_distance") / throw_parameter) + (read("Polar_distance") + q) - 1.5 + number), 65), 点(40 + 1 / 3 * space + space * ((read("pole_number") / 2 - 1) * (read("Polar_distance") / throw_parameter) + (read("Polar_distance") + q) - 0.5 + number), 65), colors#, False) '竖线

    '            线_阵列_颜色(槽点("下区点", 0.5 * read("pole_number") * (read("Polar_distance") / throw_parameter) + read("Polar_distance") + 1 + number, 140), 槽点("下区点", 0.5 * read("pole_number") * (read("Polar_distance") / throw_parameter) + read("Polar_distance") + 1 + number, 65), colors#, False) '竖线
    '            线_阵列_颜色(槽点("上区点", (read("pole_number") - 1) * (read("Polar_distance") / throw_parameter) + q + number, 140), 槽点("上区点", (read("pole_number") - 1) * (read("Polar_distance") / throw_parameter) + q + number, 65), colors#, False)
    '            线_阵列_颜色(点(40 + space * ((read("pole_number") - 1) * (read("Polar_distance") / throw_parameter) + q - 1.5 + number), 65), 点(40 + space * ((read("pole_number") - 1) * (read("Polar_distance") / throw_parameter) + q - 0.5 + number), 65), colors#, False)
    '        End If
    '    ElseIf read("parallel_paths") = 1 Then
    '        线_阵列_颜色(槽点("上区点", last_x_number + number, 140), 槽点("上区点", last_x_number + number, m - z * 4),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("上区点", T_phases + 1 + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, 140),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("上区点", last_x_number + number, m - z * 4), 槽点("上区点", T_phases + 1 + number, m - z * 4),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * read("Polar_distance") / throw_parameter) '竖线

    '        线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, 140), 槽点("下区点", q + read("Polar_distance") + number, m),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", up_down_number + number, m), 槽点("下区点", up_down_number + number, 140),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线
    '        线_阵列_颜色(槽点("下区点", q + read("Polar_distance") + number, m), 槽点("下区点", up_down_number + number, m),
    '                    colors#, True, read("pole_number") / 2, 2 * read("Polar_distance") / throw_parameter) '竖线

    '        线_阵列_颜色(槽点("上区点", 1 + number, 140), 槽点("上区点", 1 + number, 65), colors#, False)
    '        线_阵列_颜色(槽点("上区点", T_phases * (read("pole_number") / 2 - 1) + last_x_number + number, 140), 槽点("上区点", T_phases * (read("pole_number") / 2 - 1) + last_x_number + number, 65), colors#, False)
    '        线_阵列_颜色(点(40 + space * (T_phases * (read("pole_number") / 2 - 1) + last_x_number - 1.5 + number), 65), 点(40 + space * (T_phases * (read("pole_number") / 2 - 1) + last_x_number - 0.5 + number), 65), colors#, False)
    '    End If
    'End Sub
    'Public Sub 单双绕线(number%, m#, n#, colors#)
    '    Dim z As Double
    '    Polar_distance = ItemString(3) + 1
    '    For i = 1 To q
    '        lineobj2 = 线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 140), 槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 120 + 3 * i - m),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        If i > 1 Then
    '            线_阵列_颜色(lineobj3.StartPoint, lineobj2.EndPoint, colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        End If
    '        lineobj3 = 线_阵列_颜色(槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 120 + 3 * i - m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 140),
    '                      colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 120 + 3 * i - m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 120 + 3 * i - m),
    '                        colors#, True, read("pole_number"), ItemString(3) + 1) '竖线

    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 220), 槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 240 - 3 * i + m),
    '                        colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 240 - 3 * i + m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 220),
    '                      colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 240 - 3 * i + m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 240 - 3 * i + m),
    '                      colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '    Next

    '    If read("parallel_paths") = read("pole_number") Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 65),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) - 0.5 + number, 65), 槽点("下区点", ItemString(ItemString.Length - 3) + 0.5 + number, 65),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线

    '    ElseIf read("parallel_paths") = read("pole_number") / 2 Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(2) + 1 - 1 + number, 65), 槽点("上区点", ItemString(2) + 1 + 1 + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * (ItemString(3) + 1)) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number"), ItemString(3) + 1) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", 2 * (ItemString(ItemString.Length - 3)) + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number") / 2, 2 * (ItemString(3) + 1)) '竖线

    '    ElseIf read("parallel_paths") = 2 Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                            colors#, True, 2, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", 0.5 * read("pole_number") * （read("Polar_distance") + 1） + number, 140), 槽点("下区点", 0.5 * read("pole_number") * （read("Polar_distance") + 1） + number, 65),
    '                        colors#, True, 2, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", 0.5 * read("pole_number") * （read("Polar_distance") + 1） - 0.5 + number, 65), 槽点("下区点", 0.5 * read("pole_number") * （read("Polar_distance") + 1） + 0.5 + number, 65),
    '                        colors#, True, 2, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 120 + 4 - m - n),
    '                       colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 120 + 4 - m - n),
    '                       colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线

    '        线_阵列_颜色(槽点("上区点", ItemString(2) + number, 140), 槽点("上区点", ItemString(2) + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(2) + 1 + ItemString(3) + number, 140), 槽点("上区点", ItemString(2) + 1 + ItemString(3) + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(2) + number, 120 + 4 - m - 1.5 * n), 槽点("上区点", ItemString(2) + 1 + ItemString(3) + number, 120 + 4 - m - 1.5 * n),
    '                   colors#, True, read("pole_number") / 2 - 1, 0.5 * read("pole_number") * (ItemString(3) + 1)) '竖线

    '    ElseIf read("parallel_paths") = 1 Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, 2, (read("pole_number") - 1) * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + (read("pole_number") - 1) * (ItemString(3) + 1) - 1 + number, 65), 槽点("上区点", ItemString(1) + (read("pole_number") - 1) * (ItemString(3) + 1) + 1 + number, 65),
    '                    colors#, False, 2, (read("pole_number") - 1) * (ItemString(3) + 1)) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                         colors#, True, read("pole_number") / 2, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 120 + 4 - m - n),
    '                       colors#, True, read("pole_number") / 2, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + 1 + ItemString(3) + number, 120 + 4 - m - n),
    '                       colors#, True, read("pole_number") / 2, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线

    '        线_阵列_颜色(槽点("上区点", ItemString(2) + 1 + number, 140), 槽点("上区点", ItemString(2) + 1 + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 1, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(2) + 1 + 1 + ItemString(3) + number, 140), 槽点("上区点", ItemString(2) + 1 + 1 + ItemString(3) + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 1, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(2) + 1 + number, 120 + 4 - m - 1.5 * n), 槽点("上区点", ItemString(2) + 1 + 1 + ItemString(3) + number, 120 + 4 - m - 1.5 * n),
    '                   colors#, True, read("pole_number") / 2 - 1, 1 / 3 * read("pole_number") * (ItemString(3) + 1)) '竖线
    '    End If



    'End Sub
    'Public Sub 同心双层绕组(number%, m#, n#, colors#)
    '    Dim z As Double
    '    Polar_distance = read("slot_number") / read("pole_number")
    '    For i = 1 To q
    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 140), 槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 120 + 3 * i - m),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        lineobj2 = 线_阵列_颜色(槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 120 + 3 * i - m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 140),
    '                      colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        If i > 1 Then
    '            线_阵列_颜色(lineobj3.StartPoint, lineobj2.StartPoint, colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        End If
    '        lineobj3 = lineobj2
    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 120 + 3 * i - m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 120 + 3 * i - m),
    '                        colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线

    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 220), 槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 240 - 3 * i + m),
    '                        colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 240 - 3 * i + m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 220),
    '                      colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1 + (i - 1) * 5) + number, 240 - 3 * i + m), 槽点("下区点", ItemString(2 + (i - 1) * 5) + number, 240 - 3 * i + m),
    '                      colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '    Next

    '    If read("parallel_paths") = read("pole_number") Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 65),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) - 1 + number, 65), 槽点("下区点", ItemString(ItemString.Length - 3) + 1 + number, 65),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线

    '    ElseIf read("parallel_paths") = read("pole_number") / 2 Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        线_阵列_颜色(槽点("上区点", read("slot_number") / read("pole_number") + 1 - 1 + number, 65), 槽点("上区点", read("slot_number") / read("pole_number") + 1 + 1 + number, 65),
    '                    colors#, True, read("pole_number") / 2, 2 * (read("slot_number") / read("pole_number"))) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number"), read("slot_number") / read("pole_number")) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number") / 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '    ElseIf read("parallel_paths") = 2 Then '极数/2是单数还是双数
    '        If 0.5 * read("pole_number") Mod 2 = 0 Then
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + number, 140), 槽点("上区点", ItemString(1) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) - 1 + number, 65), 槽点("上区点", ItemString(1) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + 1 + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线

    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线

    '            线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                        colors#, True, read("pole_number") / 2 - 3, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                        colors#, True, read("pole_number") / 2 - 3, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 3, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            Threading.Thread.Sleep(1000)
    '            sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '            sset.Select(AcSelect.acSelectionSetAll)
    '            For i = 0 To 3 * read("pole_number") / 2 - 1
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2, 1, 1, space * 0.5 * read("pole_number") * (read("slot_number") / read("pole_number")), 1)
    '            Next
    '        Else
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) - 1 + number, 65), 槽点("下区点", ItemString(ItemString.Length - 3) + (0.5 * read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + 1 + number, 65),
    '                        colors#, False, 2, 0.5 * read("pole_number") * (read("slot_number") / read("pole_number"))) '竖线

    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线

    '            线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                        colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                       colors#, True, read("pole_number") / 2 - 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '            Threading.Thread.Sleep(1000)
    '            sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '            sset.Select(AcSelect.acSelectionSetAll)
    '            For i = 0 To 3 * read("pole_number") / 2 - 1
    '                objEntity = sset.Item(i)
    '                objEntity.ArrayRectangular(1, 2, 1, 1, space * 0.5 * read("pole_number") * (read("slot_number") / read("pole_number")), 1)
    '            Next
    '        End If
    '    ElseIf read("parallel_paths") = 1 Then
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + number, 140), 槽点("上区点", ItemString(1) + number, 65),
    '                    colors#, True, 2, (read("pole_number") - 1) * (read("slot_number") / read("pole_number"))) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + (read("pole_number") - 1) * (read("slot_number") / read("pole_number")) - 1 + number, 65), 槽点("上区点", ItemString(1) + (read("pole_number") - 1) * (read("slot_number") / read("pole_number")) + 1 + number, 65),
    '                    colors#, False, 2, (read("pole_number") - 1) * (read("slot_number") / read("pole_number"))) '竖线

    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number") / 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 140), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number") / 2, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '        线_阵列_颜色(槽点("下区点", ItemString(ItemString.Length - 3) + number, 120 + 4 - m - n), 槽点("下区点", ItemString(ItemString.Length - 3) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - n),
    '                    colors#, True, read("pole_number") / 2, 2 * (read("slot_number") / read("pole_number"))) '竖线

    '        线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 140), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '        线_阵列_颜色(槽点("上区点", ItemString(1) + read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n), 槽点("上区点", ItemString(1) + 2 * read("slot_number") / read("pole_number") + number, 120 + 4 - m - 1.5 * n),
    '                    colors#, True, read("pole_number") / 2 - 1, 2 * (read("slot_number") / read("pole_number"))) '竖线
    '    End If
    'End Sub


    ''循环代码
    ''a.mysql_new("localhost", "creo", "winding_downline", 1)
    ''q = a.read("slot_number") / (a.read("phases") * a.read("pole_number"))
    ''gap = q * a.read("phases")
    ''For i = 1 To a.read("phases")
    ''                a.单项碟式绕组下线图(a.read("slot_number"), q * (i - 1) * 2, a.read("Polar_distance"), q, gap, a.read("parallel_paths"), a.read("pole_number"), i) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    ''            Next
    ''For i = 1 To a.read("phases")
    ''                a.单项同心式双层绕组下线图(a.read("slot_number"), q, gap, a.read("parallel_paths"), a.read("pole_number")) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    ''            Next
    ''For j = 1 To a.read("phases")
    ''                a.单项同心式单双层绕组下线图("localhost", "creo", "winding_downline", 1, j)
    ''            Next


    'Public Sub 单项碟式绕组下线图(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#, a#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数  a
    '    Acadapp = CreateObject("AutoCAD.Application.17")
    '    Threading.Thread.Sleep(3000)
    '    ‘’'msgbox(0)
    '    Acadapp.Visible = True

    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    'Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)

    '    '建标识
    '    Dim timer As Double = 0
    '    For i = 1 To Slots + intercept '（3）相数初始槽 '24槽数 '4截距
    '        Dim textpoint(0 To 2) As Double
    '        textpoint(0) = (40 + (i - 1) * (375 / (Slots + intercept))) : textpoint(1) = 180 : textpoint(2) = 0
    '        If i + Initial_slot - 1 < Slots Then
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText((i + Initial_slot).ToString, textpoint, 3)
    '        Else
    '            timer = timer + 1
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(timer.ToString, textpoint, 3)
    '        End If
    '        Threading.Thread.Sleep(1000)
    '    Next
    '    '建立线
    '    Dim strartpoint1(0 To 2), strartpoint2(0 To 2), strartpoint3(0 To 2), strartpoint4(0 To 2), strartpoint5(0 To 2), strartpoint6(0 To 2)， strartpoint7(0 To 2), strartpoint8(0 To 2) As Double
    '    Dim endpoint1(0 To 2), endpoint2(0 To 2), endpoint3(0 To 2), endpoint4(0 To 2), endpoint5(0 To 2), endpoint6(0 To 2), endpoint7(0 To 2), endpoint8(0 To 2) As Double
    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    '    '第1根’（3-1）相数初始槽
    '    strartpoint1(0) = (40) : strartpoint1(1) = 185 : strartpoint1(2) = 0 '+ (375 / (Slots + intercept)) * (Initial_slot# - 1)
    '    endpoint1(0) = (40) : endpoint1(1) = 220 : endpoint1(2) = 0
    '    lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '    Threading.Thread.Sleep(1000)
    '    '第2根
    '    strartpoint2(0) = (40) : strartpoint2(1) = 175 : strartpoint2(2) = 0
    '    endpoint2(0) = (40) : endpoint2(1) = 140 : endpoint2(2) = 0
    '    lineobj2 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)
    '    Threading.Thread.Sleep(1000)
    '    '第3根
    '    strartpoint3(0) = (40) : strartpoint3(1) = 220 : strartpoint3(2) = 0
    '    endpoint3(0) = ((40) + (375 / (Slots + intercept)) * (intercept / 2)) : endpoint3(1) = 240 : endpoint3(2) = 0
    '    lineobj3 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint3, endpoint3)
    '    Threading.Thread.Sleep(1000)
    '    '第4根
    '    strartpoint4(0) = (40) : strartpoint4(1) = 140 : strartpoint4(2) = 0
    '    endpoint4(0) = ((40) + (375 / (Slots + intercept)) * (intercept / 2)) : endpoint4(1) = 120 : endpoint4(2) = 0
    '    lineobj4 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '    Threading.Thread.Sleep(1000)
    '    '切换图层
    '    objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '    Acadapp.ActiveDocument.ActiveLayer = objLayer
    '    '第5根
    '    strartpoint1(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : strartpoint1(1) = 185 : strartpoint1(2) = 0
    '    endpoint1(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : endpoint1(1) = 220 : endpoint1(2) = 0
    '    lineobj5 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '    Threading.Thread.Sleep(1000)
    '    '第6根
    '    strartpoint2(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : strartpoint2(1) = 175 : strartpoint2(2) = 0
    '    endpoint2(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : endpoint2(1) = 140 : endpoint2(2) = 0
    '    lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)
    '    Threading.Thread.Sleep(1000)
    '    '第7根
    '    strartpoint3(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : strartpoint3(1) = 220 : strartpoint3(2) = 0
    '    endpoint3(0) = ((40) + (375 / (Slots + intercept)) * (intercept / 2)) : endpoint3(1) = 240 : endpoint3(2) = 0
    '    lineobj7 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint3, endpoint3)
    '    Threading.Thread.Sleep(1000)
    '    '第8根
    '    strartpoint4(0) = ((42.5) + (375 / (Slots + intercept)) * (intercept)) : strartpoint4(1) = 140 : strartpoint4(2) = 0
    '    endpoint4(0) = ((40) + (375 / (Slots + intercept)) * (intercept / 2)) : endpoint4(1) = 120 : endpoint4(2) = 0
    '    lineobj8 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '    Threading.Thread.Sleep(1000)

    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    For i = 0 To 7
    '        If i > 3 Then
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(0)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, q, 1, 1, (375 / (Slots + intercept)), 1)
    '        Else
    '            objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '            Acadapp.ActiveDocument.ActiveLayer = objLayer
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, q, 1, 1, (375 / (Slots + intercept)), 1) '(375 / (Slots + intercept)) 24槽数，4截距‘3每极每相槽数

    '        End If

    '    Next
    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数

    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    For i = 0 To (8) * q - 1 ' '3*3-1'3每极每相槽数
    '        objEntity = sset.Item(i)
    '        objEntity.ArrayRectangular(1, 2, 1, 1, (375 / (Slots + intercept)) * gap, 1) '3每极每相槽数 *8间距’4极数
    '    Next

    '    endpoint4(0) = lineobj2.EndPoint(0) : endpoint4(1) = lineobj2.EndPoint(1) - (70 + 5 * (a - 1)) : endpoint4(2) = 0
    '    lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(lineobj2.EndPoint, endpoint4)
    '    Threading.Thread.Sleep(1000)

    '    strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) : strartpoint4(1) = lineobj6.EndPoint(1) : strartpoint4(2) = 0 '3每极每相槽数
    '    endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) : endpoint4(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint4(2) = 0
    '    lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '    Threading.Thread.Sleep(1000)

    '    strartpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) : endpoint4(1) = lineobj2.EndPoint(1) : endpoint4(2) = 0 '*8间距 '3每极每相槽数
    '    endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) : endpoint4(1) = lineobj2.EndPoint(1) - (70 + 5 * (a - 1)) : endpoint4(2) = 0 '*8间距 '3每极每相槽数
    '    lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '    Threading.Thread.Sleep(1000)

    '    strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) : strartpoint4(1) = lineobj6.EndPoint(1) : strartpoint4(2) = 0 '3每极每相槽数
    '    endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) : endpoint4(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint4(2) = 0
    '    lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '    Threading.Thread.Sleep(1000)
    '    For i = 1 To q - 1
    '        strartpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * i : strartpoint4(1) = lineobj2.EndPoint(1) : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * i : endpoint4(1) = lineobj2.EndPoint(1) - （(25 + 5 * (a - 1)) + 5 * i） : endpoint4(2) = 0
    '        lineobj10 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * （i - 1） : strartpoint4(1) = lineobj6.EndPoint(1) : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * （i - 1） : endpoint4(1) = lineobj6.EndPoint(1) - （(25 + 5 * (a - 1)) + 5 * i） : endpoint4(2) = 0

    '        lineobj11 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        lineobj12 = Acadapp.ActiveDocument.ModelSpace.AddLine(lineobj10.EndPoint, lineobj11.EndPoint)
    '        Threading.Thread.Sleep(1000)

    '    Next
    '    '2
    '    For i = 1 To q - 1
    '        '8
    '        strartpoint4(0) = lineobj2.EndPoint(0) + ((375 / (Slots + intercept)） * gap) + ((375 / (Slots + intercept)） * （i - 1）) : strartpoint4(1) = lineobj2.EndPoint(1) : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) + ((375 / (Slots + intercept)） * gap) + (375 / (Slots + intercept)） * （i - 1） : endpoint4(1) = lineobj2.EndPoint(1) - （(25 + 5 * (a - 1)) + 5 * i + 1） : endpoint4(2) = 0

    '        lineobj10 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        strartpoint4(0) = lineobj6.EndPoint(0) + ((375 / (Slots + intercept)） * gap) + (375 / (Slots + intercept)） * （i） : strartpoint4(1) = lineobj6.EndPoint(1) : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj6.EndPoint(0) + ((375 / (Slots + intercept)） * gap) + (375 / (Slots + intercept)） * （i） : endpoint4(1) = lineobj6.EndPoint(1) - （(25 + 5 * (a - 1)) + 5 * i + 1） : endpoint4(2) = 0

    '        lineobj11 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        lineobj12 = Acadapp.ActiveDocument.ModelSpace.AddLine(lineobj10.EndPoint, lineobj11.EndPoint)
    '        Threading.Thread.Sleep(1000)

    '    Next

    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    For i = 0 To 8 * q * 2 + 3 * (q - 1) * 2 + 2 * 2 - 1 '8*3-1 ，3截距 '3*3-1'3每极每相槽数
    '        objEntity = sset.Item(i)
    '        objEntity.ArrayRectangular(1, Poles / 2, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1) '3每极每相槽数 *8间距
    '    Next

    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    '    Dim cccc As Double = p '并联支路数
    '    If (Poles / cccc) = 1 Then
    '        strartpoint4(0) = lineobj2.EndPoint(0) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) - 5 : strartpoint4(1) = lineobj6.EndPoint(1) - 65 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) + 5 : endpoint4(1) = lineobj6.EndPoint(1) - 65 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        strartpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) + 5 : strartpoint4(1) = lineobj6.EndPoint(1) - 65 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) - 5 : endpoint4(1) = lineobj6.EndPoint(1) - 65 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)

    '        sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '        sset.Select(AcSelect.acSelectionSetAll)
    '        For i = 0 To 3
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, Poles / 2, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1) '3每极每相槽数 *8间距
    '        Next

    '    ElseIf (Poles / cccc) = 2 Then


    '        endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) : endpoint4(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint4(2) = 0
    '        endpoint5(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) : endpoint5(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint5(2) = 0
    '        lineobj11 = Acadapp.ActiveDocument.ModelSpace.AddLine(endpoint4, endpoint5)
    '        Threading.Thread.Sleep(1000)
    '        lineobj11.ArrayRectangular(1, Poles / 2, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1) '3每极每相槽数 *8间距 '4极数
    '        Threading.Thread.Sleep(1000)

    '        '出线电源线
    '        strartpoint4(0) = lineobj2.EndPoint(0) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)


    '        strartpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0
    '        endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap - 1) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0
    '        lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        Threading.Thread.Sleep(1000)


    '        sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '        sset.Select(AcSelect.acSelectionSetAll)
    '        For i = 0 To 1
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, Poles / 2, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1) '3每极每相槽数 *8间距
    '        Next

    '    ElseIf (Poles / cccc) <> 2 And (Poles / cccc) <> 1 Then
    '        endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q - 1) : endpoint4(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint4(2) = 0
    '        endpoint5(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (gap) : endpoint5(1) = lineobj6.EndPoint(1) - (65 + 5 * (a - 1)) : endpoint5(2) = 0
    '        lineobj11 = Acadapp.ActiveDocument.ModelSpace.AddLine(endpoint4, endpoint5)
    '        Threading.Thread.Sleep(1000)
    '        If (Poles / cccc) Mod 2 = 0 Then
    '            lineobj11.ArrayRectangular(1, Int(Poles / cccc / 2), 1, 1, (375 / (Slots + intercept)) * gap * 2, 1)
    '            Threading.Thread.Sleep(1000)
    '        Else
    '            lineobj11.ArrayRectangular(1, CInt(Poles / cccc / 2) - 1, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1)
    '            Threading.Thread.Sleep(1000)
    '        End If
    '        endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (gap + q - 1) : endpoint4(1) = lineobj2.EndPoint(1) - (70 + 5 * (a - 1)) : endpoint4(2) = 0
    '        endpoint5(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (gap) * 2 : endpoint5(1) = lineobj2.EndPoint(1) - (70 + 5 * (a - 1)) : endpoint5(2) = 0
    '        lineobj11 = Acadapp.ActiveDocument.ModelSpace.AddLine(endpoint4, endpoint5)
    '        If (Poles / cccc) Mod 2 = 0 Then
    '            lineobj11.ArrayRectangular(1, Int(Poles / cccc / 2) - 1, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1)
    '            Threading.Thread.Sleep(1000)
    '        Else
    '            lineobj11.ArrayRectangular(1, CInt(Poles / cccc / 2) - 1, 1, 1, (375 / (Slots + intercept)) * gap * 2, 1)
    '            Threading.Thread.Sleep(1000)
    '        End If
    '        sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '        sset.Select(AcSelect.acSelectionSetAll)
    '        For i = 0 To Poles / cccc - 1
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + intercept)) * gap * Poles / cccc, 1) '3每极每相槽数 *8间距
    '        Next
    '        '出线电源线
    '        'strartpoint4(0) = lineobj2.EndPoint(0) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0
    '        'endpoint4(0) = lineobj2.EndPoint(0) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0
    '        'lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '        'Threading.Thread.Sleep(1000)
    '        If (Poles / cccc) Mod 2 = 0 Then
    '            strartpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap * (Poles / cccc - 1) - 1) + 5 : strartpoint4(1) = lineobj2.EndPoint(1) - 70 : strartpoint4(2) = 0 '*8间距 '3每极每相槽数
    '            endpoint4(0) = lineobj2.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap * (Poles / cccc - 1) - 1) - 5 : endpoint4(1) = lineobj2.EndPoint(1) - 70 : endpoint4(2) = 0 '*8间距 '3每极每相槽数
    '            lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '            Threading.Thread.Sleep(1000)
    '        Else
    '            strartpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap * (Poles / cccc - 1) - 1) + 5 : strartpoint4(1) = lineobj6.EndPoint(1) - 65 : strartpoint4(2) = 0 '3每极每相槽数
    '            endpoint4(0) = lineobj6.EndPoint(0) + (375 / (Slots + intercept)） * (q + gap * (Poles / cccc - 1) - 1) + 5 : endpoint4(1) = lineobj6.EndPoint(1) - 65 : endpoint4(2) = 0
    '            lineobj13 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint4, endpoint4)
    '            Threading.Thread.Sleep(1000)
    '        End If

    '        lineobj13.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + intercept)) * gap * (Poles / cccc), 1) '3每极每相槽数 *8间距

    '    End If
    '    textpoint(0) = 40 : textpoint(1) = 40 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "双层叠绕组,y=" +
    '             "1-" + (1 + gap).ToString + "," +
    '             "2-" + (2 + gap).ToString + "," + Chr(13) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "双层叠绕组,y=" +
    '            "1-" + (1 + gap).ToString + "," +
    '            "2-" + (2 + gap).ToString + "," +
    '            "3-" + (3 + gap).ToString + "," + Chr(13) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "双层叠绕组,y=" +
    '            "1-" + (1 + gap).ToString + "," +
    '            "2-" + (2 + gap).ToString + "," +
    '            "3-" + (3 + gap).ToString + "," +
    '            "4-" + (4 + gap).ToString + "," + Chr(13) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "双层叠绕组,y=" +
    '            "1-" + (1 + gap).ToString + "," +
    '            "2-" + (2 + gap).ToString + "," +
    '            "3-" + (3 + gap).ToString + "," +
    '            "4-" + (4 + gap).ToString + "," +
    '            "5-" + (5 + gap).ToString + "," + Chr(10) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "双层叠绕组,y=" +
    '            "1-" + (1 + gap).ToString + "," +
    '            "2-" + (2 + gap).ToString + "," +
    '            "3-" + (3 + gap).ToString + "," +
    '            "4-" + (4 + gap).ToString + "," +
    '            "5-" + (5 + gap).ToString + "," +
    '            "6-" + (6 + gap).ToString + "," + Chr(10) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "双层叠绕组,y=" +
    '            "1-" + (1 + gap).ToString + "," +
    '            "2-" + (2 + gap).ToString + "," +
    '            "3-" + (3 + gap).ToString + "," +
    '            "4-" + (4 + gap).ToString + "," +
    '            "5-" + (5 + gap).ToString + "," +
    '            "6-" + (6 + gap).ToString + "," +
    '            "7-" + (7 + gap).ToString + "," + Chr(10) +
    '            "并联支路数a1=" + p.ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)
    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '单项绕组下线图，需要循环3次
    'Public Sub 碟式绕组总下线图(localhost$, database$, tabledase$, ID#)
    '    mysql_new_chen(localhost$, database$, tabledase$, ID#)
    '    Acadapp = CreateObject("AutoCAD.Application.R17.0")
    '    Acadapp.Visible = True
    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)
    '    Acadapp.ZoomAll()
    '    'color = Acadapp.GetInterfaceObject("AutoCAD.AcCmColor." + Left(Acadapp.Version, 2))
    '    q = read("slot_number") / (read("phases") * read("pole_number")) ' 有多少个a
    '    'Polar_distance = read("slot_number") / read("pole_number") * read("throw_parameter") ' 节距
    '    throw_parameter = read("pole_number") * read("Polar_distance") / read("slot_number")
    '    up_down_distance = read("Polar_distance") + read("Polar_distance") / throw_parameter ' 上半区a与下半区a的间距
    '    a_x_distance = q * read("phases") ' 上半区a 与x 的间距
    '    up_down_number = read("Polar_distance") + read("Polar_distance") / throw_parameter + 1 ' 下半区第一个 a 的槽号
    '    a_x_number = q * read("phases") + 1 ' 上半区第一个 x 的槽号
    '    last_x_number = a_x_distance + q '上半区第一组 x 最后一个 x 的槽号 
    '    T_phases = 2 * q * read("phases") '相周期个数
    '    space = 360 / (2 * read("slot_number"))
    '    Threading.Thread.Sleep(3000)
    '    '建标识
    '    If read("slot_number") > 50 Then
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '    Else
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '    End If
    '    初始线圈()
    '    绕线(0, 115, 1)
    '    绕线(q * 2, 115 - q * 5, 3)
    '    绕线(q * 4, 115 - q * 5 * 2, 5)
    '    textpoint(0) = 40 : textpoint(1) = 30 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "双层迭绕组,y=" +
    '             "1-" + (1 + read("Polar_distance")).ToString +
    '             "2-" + (2 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "双层迭绕组,y=" +
    '            "1-" + (1 + read("Polar_distance")).ToString +
    '            "2-" + (2 + read("Polar_distance")).ToString +
    '            "3-" + (3 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "双层迭绕组,y=" +
    '            "1-" + (1 + read("Polar_distance")).ToString +
    '            "2-" + (2 + read("Polar_distance")).ToString +
    '            "3-" + (3 + read("Polar_distance")).ToString +
    '            "4-" + (4 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "双层迭绕组,y=" +
    '            "1-" + (1 + read("Polar_distance")).ToString +
    '            "2-" + (2 + read("Polar_distance")).ToString +
    '            "3-" + (3 + read("Polar_distance")).ToString +
    '            "4-" + (4 + read("Polar_distance")).ToString +
    '            "5-" + (5 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "双层迭绕组,y=" +
    '            "1-" + (1 + read("Polar_distance")).ToString +
    '            "2-" + (2 + read("Polar_distance")).ToString +
    '            "3-" + (3 + read("Polar_distance")).ToString +
    '            "4-" + (4 + read("Polar_distance")).ToString +
    '            "5-" + (5 + read("Polar_distance")).ToString +
    '            "6-" + (6 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "双层迭绕组,y=" +
    '                            "1-" + (1 + read("Polar_distance")).ToString +
    '            "2-" + (2 + read("Polar_distance")).ToString +
    '            "3-" + (3 + read("Polar_distance")).ToString +
    '            "4-" + (4 + read("Polar_distance")).ToString +
    '            "5-" + (5 + read("Polar_distance")).ToString +
    '            "6-" + (6 + read("Polar_distance")).ToString +
    '            "7-" + (7 + read("Polar_distance")).ToString +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)
    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '总绕组下线图

    'Public Sub 单项同心式双层绕组下线图(Slots#, q#, gap#， p#, Poles#, istring$) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数  a
    '    '打开cad
    '    Acadapp = CreateObject("AutoCAD.Application.16")
    '    Acadapp.Visible = True
    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)
    '    ItemString = Split(istring, ";")
    '    '建标识
    '    Dim timer As Double = 0
    '    For i = 1 To Slots + ItemString(3) '（3）相数初始槽 '24槽数 '4截距
    '        Dim textpoint(0 To 2) As Double
    '        textpoint(0) = (40 + (i - 1) * (375 / (Slots + ItemString(3)))) : textpoint(1) = 180 : textpoint(2) = 0
    '        If i + ItemString(1) - 1 < Slots + 1 Then
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText((i + ItemString(1) - 1).ToString, textpoint, 3)
    '        Else
    '            timer = timer + 1
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(timer.ToString, textpoint, 3)
    '        End If

    '    Next
    '    '建立线
    '    Dim strartpoint1(0 To 2), strartpoint2(0 To 2), strartpoint3(0 To 2), strartpoint4(0 To 2), strartpoint5(0 To 2), strartpoint6(0 To 2)， strartpoint7(0 To 2), strartpoint8(0 To 2) As Double
    '    Dim endpoint1(0 To 2), endpoint2(0 To 2), endpoint3(0 To 2), endpoint4(0 To 2), endpoint5(0 To 2), endpoint6(0 To 2), endpoint7(0 To 2), endpoint8(0 To 2) As Double
    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数

    '    For i = 0 To q - 1
    '        '第1根’（3-1）相数初始槽
    '        objLayer = Acadapp.ActiveDocument.Layers.Item(0)
    '        Acadapp.ActiveDocument.ActiveLayer = objLayer
    '        strartpoint1(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1 + 5 * i) - 1))) : strartpoint1(1) = 185 : strartpoint1(2) = 0
    '        endpoint1(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1 + 5 * i) - 1))) : endpoint1(1) = 230 - 5 * i : endpoint1(2) = 0
    '        lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)

    '        '第2根
    '        strartpoint2(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1 + 5 * i) - 1))) : strartpoint2(1) = 175 : strartpoint2(2) = 0
    '        endpoint2(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1 + 5 * i) - 1))) : endpoint2(1) = 120 + 5 * i : endpoint2(2) = 0
    '        lineobj2 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)



    '        objLayer = Acadapp.ActiveDocument.Layers.Item(1)
    '        Acadapp.ActiveDocument.ActiveLayer = objLayer
    '        '第5根
    '        strartpoint5(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(2 + 5 * i) - 1)))) : strartpoint5(1) = 185 : strartpoint5(2) = 0
    '        endpoint5(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(2 + 5 * i) - 1)))) : endpoint5(1) = 230 - 5 * i : endpoint5(2) = 0
    '        lineobj5 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint5, endpoint5)

    '        '第6根
    '        strartpoint6(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(2 + 5 * i) - 1)))) : strartpoint6(1) = 175 : strartpoint6(2) = 0
    '        endpoint6(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(2 + 5 * i) - 1)))) : endpoint6(1) = 120 + 5 * i : endpoint6(2) = 0
    '        lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint6, endpoint6)


    '        objLayer = Acadapp.ActiveDocument.Layers.Item(0)
    '        Acadapp.ActiveDocument.ActiveLayer = objLayer
    '        '第3根

    '        lineobj3 = Acadapp.ActiveDocument.ModelSpace.AddLine(endpoint1, endpoint5)



    '        '第4根
    '        lineobj4 = Acadapp.ActiveDocument.ModelSpace.AddLine(endpoint2, endpoint6)

    '    Next
    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    Threading.Thread.Sleep(1000)
    '    For i = 0 To 6 * q - 1
    '        objEntity = sset.Item(i)
    '        objEntity.ArrayRectangular(1, Poles, 1, 1, (375 / (Slots + ItemString(3))) * gap, 1)
    '    Next
    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数


    '    strartpoint1(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1) - 1))) : strartpoint1(1) = 120 : strartpoint1(2) = 0
    '    endpoint1(0) = (40 + (375 / (Slots + ItemString(3))) * ((ItemString(1) - 1))) : endpoint1(1) = strartpoint1(1) - 45 : endpoint1(2) = 0 '+ (375 / (Slots + intercept)) * ((Initial_slot# - 1))
    '    lineobj1 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)

    '    strartpoint2(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(ItemString.Count - 3)) - 1))) : strartpoint2(1) = 120 + 5 * (q - 1) : strartpoint2(2) = 0
    '    endpoint2(0) = ((42.5 + (375 / (Slots + ItemString(3))) * ((ItemString(ItemString.Count - 3)) - 1))) : endpoint2(1) = strartpoint2(1) - 30 : endpoint2(2) = 0
    '    lineobj2 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)

    '    sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '    sset.Select(AcSelect.acSelectionSetAll)
    '    Threading.Thread.Sleep(1000)
    '    For i = 0 To 1
    '        objEntity = sset.Item(i)
    '        objEntity.ArrayRectangular(1, Poles, 1, 1, (375 / (Slots + ItemString(3))) * gap, 1)
    '    Next


    '    For i = 0 To q - 2
    '        strartpoint1(0) = (42.5 + (375 / (Slots + ItemString(3))) * ((q - 1) - i)) : strartpoint1(1) = 120 + 5 * (q - 1 - i) : strartpoint1(2) = 0
    '        endpoint1(0) = (42.5 + (375 / (Slots + ItemString(3))) * ((q - 1) - i)) + 5 : endpoint1(1) = 120 + 5 * (q - 2 - i) : endpoint1(2) = 0
    '        lineobj3 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '        Threading.Thread.Sleep(1000)
    '        lineobj3.ArrayRectangular(1, Poles, 1, 1, (375 / (Slots + ItemString(3))) * gap, 1)

    '    Next


    '    '(Slots#, Initial_slot#, intercept#, q#, gap#， p#, Poles#) '槽数  相数初始槽 截距 每极每相槽数 间距 并联支路数 极数
    '    Dim cccc As Double = p '并联支路数
    '    If (Poles / cccc) = 1 Then


    '        strartpoint2(0) = lineobj2.EndPoint(0) + 5 : strartpoint2(1) = lineobj2.EndPoint(1) : strartpoint2(2) = 0
    '        endpoint2(0) = lineobj2.EndPoint(0) - 5 : endpoint2(1) = lineobj2.EndPoint(1) : endpoint2(2) = 0
    '        lineobj7 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)
    '        lineobj7.ArrayRectangular(1, Poles, 1, 1, (375 / (Slots + ItemString(3))) * gap, 1)
    '    ElseIf (Poles / cccc) = 2 Then


    '        strartpoint2(0) = lineobj2.EndPoint(0) : strartpoint2(1) = lineobj2.EndPoint(1) : strartpoint2(2) = 0
    '        endpoint2(0) = lineobj2.EndPoint(0) + (375 / (Slots + ItemString(3))) * gap : endpoint2(1) = lineobj2.EndPoint(1) : endpoint2(2) = 0
    '        lineobj5 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)
    '        lineobj5.ArrayRectangular(1, (cccc), 1, 1, (375 / (Slots + ItemString(3))) * gap * 2, 1)


    '        strartpoint1(0) = lineobj1.EndPoint(0) + (375 / (Slots + ItemString(3))) * gap + 5 : strartpoint1(1) = lineobj1.EndPoint(1) : strartpoint1(2) = 0
    '        endpoint1(0) = lineobj1.EndPoint(0) + (375 / (Slots + ItemString(3))) * gap - 5 : endpoint1(1) = lineobj1.EndPoint(1) : endpoint1(2) = 0
    '        lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '        lineobj6.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + ItemString(3))) * gap * 2, 1)

    '    ElseIf (Poles / cccc) <> 2 And (Poles / cccc) <> 1 Then

    '        strartpoint1(0) = lineobj1.EndPoint(0) + (375 / (Slots + ItemString(3))) * (gap) : strartpoint1(1) = lineobj1.EndPoint(1) : strartpoint1(2) = 0
    '        endpoint1(0) = lineobj1.EndPoint(0) + (375 / (Slots + ItemString(3))) * (gap * 2) : endpoint1(1) = lineobj1.EndPoint(1) : endpoint1(2) = 0
    '        lineobj4 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)

    '        strartpoint2(0) = lineobj2.EndPoint(0) : strartpoint2(1) = lineobj2.EndPoint(1) : strartpoint2(2) = 0
    '        endpoint2(0) = lineobj2.EndPoint(0) + (375 / (Slots + ItemString(3))) * (gap) : endpoint2(1) = lineobj2.EndPoint(1) : endpoint2(2) = 0
    '        lineobj5 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint2, endpoint2)

    '        lineobj4.ArrayRectangular(1, Int((Poles - 1) / cccc / 2), 1, 1, (375 / (Slots + ItemString(3))) * gap * 2, 1)
    '        lineobj5.ArrayRectangular(1, Int((Poles) / cccc / 2), 1, 1, (375 / (Slots + ItemString(3))) * gap * 2, 1)


    '        sset = CreateSSet(Acadapp.ActiveDocument, "mySelectionSet")
    '        sset.Select(AcSelect.acSelectionSetAll)
    '        Threading.Thread.Sleep(1000)
    '        For i = 0 To Int(Poles / cccc / 2) + Int((Poles / cccc - 1) / 2) - 1
    '            objEntity = sset.Item(i)
    '            objEntity.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + ItemString(3))) * gap * (Poles / cccc), 1)
    '        Next



    '        If (Poles / cccc) Mod 2 = 0 Then
    '            strartpoint1(0) = lineobj1.EndPoint(0) + 5 + (375 / (Slots + ItemString(3))) * gap * ((Poles / cccc) - 1) : strartpoint1(1) = lineobj1.EndPoint(1) : strartpoint1(2) = 0
    '            endpoint1(0) = lineobj1.EndPoint(0) - 5 + (375 / (Slots + ItemString(3))) * gap * ((Poles / cccc) - 1) : endpoint1(1) = lineobj1.EndPoint(1) : endpoint1(2) = 0
    '            lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '            lineobj6.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + ItemString(3))) * gap * (Poles / cccc), 1)

    '        Else
    '            strartpoint1(0) = lineobj2.EndPoint(0) + 5 + (375 / (Slots + ItemString(3))) * gap * ((Poles / cccc) - 1) : strartpoint1(1) = lineobj2.EndPoint(1) : strartpoint1(2) = 0
    '            endpoint1(0) = lineobj2.EndPoint(0) - 5 + (375 / (Slots + ItemString(3))) * gap * ((Poles / cccc) - 1) : endpoint1(1) = lineobj2.EndPoint(1) : endpoint1(2) = 0
    '            lineobj6 = Acadapp.ActiveDocument.ModelSpace.AddLine(strartpoint1, endpoint1)
    '            lineobj6.ArrayRectangular(1, cccc, 1, 1, (375 / (Slots + ItemString(3))) * gap * (Poles / cccc), 1)



    '        End If

    '    End If
    '    textpoint(0) = 40 : textpoint(1) = 30 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            ItemString(31) + "-" + ItemString(32) + "(" + ItemString(34) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)

    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '单项同心式绕组下线图，需要循环3次
    'Public Sub 同心式双层绕组总下线图(localhost$, database$, tabledase$, ID#, istring$)
    '    mysql_new_chen(localhost$, database$, tabledase$, ID#)
    '    Acadapp = CreateObject("AutoCAD.Application.16")
    '    Acadapp.Visible = True
    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)
    '    Acadapp.ZoomAll()
    '    q = read("slot_number") / (read("phases") * read("pole_number")) ' 有多少个a
    '    throw_parameter = read("pole_number") * read("Polar_distance") / read("slot_number") ' 节距
    '    up_down_distance = Polar_distance + Polar_distance / throw_parameter ' 上半区a与下半区a的间距
    '    a_x_distance = q * read("phases") ' 上半区a 与x 的间距
    '    up_down_number = Polar_distance + Polar_distance / throw_parameter + 1 ' 下半区第一个 a 的槽号
    '    a_x_number = q * read("phases") + 1 ' 上半区第一个 x 的槽号
    '    last_x_number = a_x_distance + q '上半区第一组 x 最后一个 x 的槽号 
    '    T_phases = 2 * q * read("phases") '相周期个数
    '    space = 360 / (2 * read("slot_number"))
    '    Threading.Thread.Sleep(1000)

    '    '建标识

    '    For i = 1 To read("slot_number")
    '        textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '        textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '    Next
    '    For i = 1 To read("slot_number")
    '        textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '        textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '    Next
    '    Threading.Thread.Sleep(1000)
    '    单双初始线圈()
    '    ItemString = Split(istring$, ";") '不超过255字符
    '    同心双层绕组(0, 2, 4, 1)
    '    同心双层绕组(q * 2, 2 + q * 4, 4, 3)
    '    同心双层绕组(q * 4, 2 + q * 4 * 2, 4, 5)
    '    textpoint(0) = 40 : textpoint(1) = 30 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "双层同心绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            ItemString(31) + "-" + ItemString(32) + "(" + ItemString(34) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)
    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '同心式总绕组下线图

    'Public Sub 单项同心式单双层绕组下线图(localhost$, database$, tabledase$, ID#, j#, istring$)
    '    mysql_new_chen(localhost$, database$, tabledase$, ID#)
    '    Acadapp = CreateObject("AutoCAD.Application.16")
    '    Acadapp.Visible = True
    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)
    '    Acadapp.ZoomAll()
    '    q = read("slot_number") / (read("phases") * read("pole_number")) ' 有多少个a
    '    throw_parameter = read("pole_number") * read("Polar_distance") / read("slot_number") ' 节距
    '    up_down_distance = Polar_distance + Polar_distance / throw_parameter ' 上半区a与下半区a的间距
    '    a_x_distance = q * read("phases") ' 上半区a 与x 的间距
    '    up_down_number = Polar_distance + Polar_distance / throw_parameter + 1 ' 下半区第一个 a 的槽号
    '    a_x_number = q * read("phases") + 1 ' 上半区第一个 x 的槽号
    '    last_x_number = a_x_distance + q '上半区第一组 x 最后一个 x 的槽号 
    '    T_phases = 2 * q * read("phases") '相周期个数
    '    space = 360 / (2 * read("slot_number"))
    '    '建标识
    '    If read("slot_number") > 50 Then
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '    Else
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '    End If

    '    单双初始线圈()
    '    ‘’'msgbox(istring)
    '    ItemString = Split(istring$, ";") '不超过255字符
    '    单双绕线(q * 2 * (j - 1), 2, 4, 1)
    '    textpoint(0) = 40 : textpoint(1) = 30 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            ItemString(31) + "-" + ItemString(32) + "(" + ItemString(34) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)
    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '单项单双层绕组下线图，需要循环3次
    'Public Sub 同心式单双层绕组下总线图(localhost$, database$, tabledase$, ID#, istring$)
    '    mysql_new_chen(localhost$, database$, tabledase$, ID#)
    '    Acadapp = CreateObject("AutoCAD.Application.16")
    '    Acadapp.Visible = True
    '    Document = Acadapp.Documents.Open("E:\works\creo\part_a3_sb.dwg")
    '    Threading.Thread.Sleep(3000)
    '    Acadapp.ZoomAll()
    '    q = read("slot_number") / (read("phases") * read("pole_number")) ' 有多少个a
    '    throw_parameter = read("pole_number") * read("Polar_distance") / read("slot_number") ' 节距
    '    up_down_distance = Polar_distance + Polar_distance / throw_parameter ' 上半区a与下半区a的间距
    '    a_x_distance = q * read("phases") ' 上半区a 与x 的间距
    '    up_down_number = Polar_distance + Polar_distance / throw_parameter + 1 ' 下半区第一个 a 的槽号
    '    a_x_number = q * read("phases") + 1 ' 上半区第一个 x 的槽号
    '    last_x_number = a_x_distance + q '上半区第一组 x 最后一个 x 的槽号 
    '    T_phases = 2 * q * read("phases") '相周期个数
    '    space = 360 / (2 * read("slot_number"))
    '    Threading.Thread.Sleep(3000)
    '    '建标识
    '    If read("slot_number") > 50 Then
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 1)
    '        Next
    '    Else
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '        For i = 1 To read("slot_number")
    '            textpoint(0) = 40 + (read("slot_number") + i - 1) * space : textpoint(1) = 180 : textpoint(2) = 0
    '            textobj = Acadapp.ActiveDocument.ModelSpace.AddText(i.ToString, textpoint, 2)
    '        Next
    '    End If

    '    单双初始线圈()
    '    ItemString = Split(istring$, ";") '不超过255字符
    '    单双绕线(0, 2, 4, 1)
    '    单双绕线(q * 2, 2 + q * 4, 4, 3)
    '    单双绕线(q * 4, 2 + q * 4 * 2, 4, 5)
    '    textpoint(0) = 40 : textpoint(1) = 30 : textpoint(2) = 0
    '    If q = 2 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 3 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 4 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 5 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 6 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    ElseIf q = 7 Then
    '        texts = "单双层绕组,y=" +
    '            ItemString(1) + "-" + ItemString(2) + "(" + ItemString(4) + "匝)," +
    '            ItemString(6) + "-" + ItemString(7) + "(" + ItemString(9) + "匝)," +
    '            ItemString(11) + "-" + ItemString(12) + "(" + ItemString(14) + "匝)," +
    '            ItemString(16) + "-" + ItemString(17) + "(" + ItemString(19) + "匝)," +
    '            ItemString(21) + "-" + ItemString(22) + "(" + ItemString(24) + "匝)," +
    '            ItemString(26) + "-" + ItemString(27) + "(" + ItemString(29) + "匝)," +
    '            ItemString(31) + "-" + ItemString(32) + "(" + ItemString(34) + "匝)," +
    '            "并联支路数a1=" + read("parallel_paths").ToString + "，q=" + q.ToString
    '    End If
    '    textobj = Acadapp.ActiveDocument.ModelSpace.AddText(texts, textpoint, 3.5)
    '    Acadapp.ActiveDocument.SaveAs(read("savepath") + "\" + read("code") + ".dwg")
    '    Acadapp.ActiveDocument.Close()
    '    Acadapp.Quit()
    'End Sub '单双层总绕组下线图

    Public Sub creo线圈(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)




        If read("type") = 1 Then
            m1 = openModel("prt", "E:\works\creo\winding\winding.prt")
            retrieveModel("frm", "E:\works\creo\winding\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\winding\winding")
            m1 = activateModel("winding", 1)
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\winding\winding2.prt")
            retrieveModel("frm", "E:\works\creo\winding\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\winding\winding2")
            m1 = activateModel("winding2", 1)
        ElseIf read("type") = 3 Then
            m1 = openModel("prt", "E:\works\creo\winding\wind_2\coil.prt")
            retrieveModel("frm", "E:\works\creo\winding\wind_2\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\winding\wind_2\coil")
            m1 = activateModel("coil", 1)
        ElseIf read("type") = 4 Then
            m1 = openModel("prt", "E:\works\creo\winding\wind\wind_1.prt")
            retrieveModel("frm", "E:\works\creo\winding\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\winding\wind\wind_1")
            m1 = activateModel("wind_1", 1)
        End If


        partValue(m1)
        'selBuffer = AC.Session.CurrentSelectionBuffer
        'selBuffer.Clear()
        If read("type") = 1 Then
            activateModel("winding", 1)
            partValue(m1)
            setParamValue(m1, "d5", read("lenght"), "浮点型")
            setParamValue(m1, "d4", read("width"), "浮点型")
            setParamValue(m1, "d6", read("arc1"), "浮点型")

            If read("number") <> 1 Then

                setParamValue(m1, "p17", read("number"), "浮点型")
                setParamValue(m1, "d19", read("lenght") + (read("number") - 1) * 10, "浮点型")
            Else
                setParamValue(m1, "d19", read("lenght"), "浮点型")
            End If

        ElseIf read("type") = 2 Then
            activateModel("winding2", 1)
            partValue(m1)
            setParamValue(m1, "d6", read("lenght"), "浮点型")
            setParamValue(m1, "d5", read("width"), "浮点型")
            setParamValue(m1, "d8", read("lenght2"), "浮点型")
            setParamValue(m1, "d4", read("width2"), "浮点型")
            setParamValue(m1, "d7", read("width") + read("lenght2") * 2, "浮点型")
            setParamValue(m1, "d18", read("lenght2") / 2 + 50, "浮点型")

        ElseIf read("type") = 3 Then
            m1 = activateModel("coil", 1)
            partValue(m1)
            setParamValue(m1, "p8", read("number"), "浮点型")  '阵列个数
            setParamValue(m1, "d16", read("width"), "浮点型") '宽度
            setParamValue(m1, "d4", read("lenght"), "浮点型") '长度
            setParamValue(m1, "d11", (read("number") - 1) * 20 + read("width"), "浮点型")  '阵列距离
            setParamValue(m1, "d10", read("lenght2"), "浮点型")
        ElseIf read("type") = 4 Then
            m1 = activateModel("wind_1", 1)
            partValue(m1)
            numbers.Add(127)
            numbers.Add(116)
            numbers.Add(105)
            numbers.Add(94)
            numbers.Add(83)
            numbers.Add(72)
            numbers.Add(61)
            For i = 0 To (6 - read("number"))
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d86", read("width"), "浮点型") '宽度
            For j = 1 To (read("number") - 1)
                setParamValue(m1, "d" + (6 + j * 3).ToString, read("width") + j * read("width2"), "浮点型") '宽度
            Next
            setParamValue(m1, "d5", read("radius1"), "浮点型") '半径
            'For k = 1 To (read("number") - 1)
            '    setParamValue(m1, "d" + (91 + k).ToString, read("radius" + (k + 1).ToString), "浮点型") '半径
            'Next
            For k = 1 To read("number") - 1
                Dim d5Value As Double = read("radius1")
                Dim d86Value As Double = read("width") / 2
                Dim tempValue As Double
                tempValue = (((read("width") + k * read("width2")) / 2) ^ 2)
                Dim result As Double = Math.Sqrt((d5Value * d5Value - d86Value * d86Value) + tempValue)
                setParamValue(m1, "d" & (91 + k).ToString(), result, "浮点型")
            Next

            setParamValue(m1, "d28", read("width") + (read("number") - 1) * read("width2") / 2, "浮点型")
            setParamValue(m1, "d26", read("lenght2"), "浮点型")
            setParamValue(m1, "d4", read("lenght"), "浮点型")
            ' ’'msgbox(1)
            'deleteFeature(m1, 158)

        End If

        m1.Regenerate(Nothing)
        'm1.Rename(read("CODE"), True)
        ExportJpg(path, imageName)
        closeWindow(m1)

        If read("type") = 1 Then


            m2 = activateModel("winding", 2)
        ElseIf read("type") = 2 Then
            m2 = activateModel("winding2", 2)
        ElseIf read("type") = 3 Then
            m2 = activateModel("coil", 2)
        ElseIf read("type") = 4 Then
            m2 = activateModel("wind_1", 2)
        End If

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION

        modelItems = listModelItem(m2, "DTL_NOTE")
        If read("type") = 4 Then


            修改注释_name(CType(m2, IpfcModelItemOwner).GetItemById(EpfcModelItemType.EpfcITEM_DTL_NOTE, 21), (Val(Scale_drw(0)) / Val(Scale_drw(1)).ToString))
        ElseIf read("type") = 3 Then
            修改注释_name(CType(m2, IpfcModelItemOwner).GetItemById(EpfcModelItemType.EpfcITEM_DTL_NOTE, 140), (Val(Scale_drw(0)) / Val(Scale_drw(1)).ToString))


        Else

            view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            修改注释_name(CType(m2, IpfcModelItemOwner).GetItemById(EpfcModelItemType.EpfcITEM_DTL_NOTE, 21), (Val(Scale_drw(0)) / Val(Scale_drw(1)).ToString))
            '修改注释(modelItems, 21, view2Ds.Item(0).Scale.ToString)
        End If
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {250, 250})
        添加图幅注释(m2, read("T_MOTOR"))
        ''msgbox(2)
        m1.Rename(read("CODE"), True)
        m2.Rename(read("CODE"), True)
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)


        'Dim dwginstructions As IpfcDWG3DExportInstructions
        'openModel("prt", path + "\" + read("CODE"))
        'retrieveModel("drw", path + "\" + read("CODE"))
        'm2 = activateModel(path + "\" + read("CODE"), 2)

        'dwginstructions = (New CCpfcDWG3DExportInstructions()).Create()
        'm2.Export(m2.InstanceName + ".dwg", dwginstructions) '保存同名Dwg文件到工作目录下

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub creo转子冲片(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        If read("type") = 1 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1")
                m1 = activateModel("rotor_lamination1", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1")
                    m1 = activateModel("rotor_lamination1", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1_2")
                    m1 = activateModel("rotor_lamination1_2", 1)
                End If
            End If


        ElseIf read("type") = 2 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2")
                m1 = activateModel("rotor_lamination2", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2")
                    m1 = activateModel("rotor_lamination2", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2_2")
                    m1 = activateModel("rotor_lamination2_2", 1)
                End If
            End If
        ElseIf read("type") = 3 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3")
                m1 = activateModel("rotor_lamination3", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3")
                    m1 = activateModel("rotor_lamination3", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3_2")
                    m1 = activateModel("rotor_lamination3_2", 1)
                End If
            End If


        ElseIf read("type") = 4 Then
            m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination4.prt")
            retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\rl\rotor_lamination4")
            m1 = activateModel("rotor_lamination4", 1)
        End If

        partValue(m1)
        setParamValue(m1, "MASS", read("mass"), "浮点型")
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If

        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        If read("type") = 1 Then
            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")
            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")

            '单极阻尼棒


            If read("H_type") = 0 Then
                setParamValue(m1, "d263", 0, "浮点型")
                setParamValue(m1, "d158", read("dr_location"), "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d263", read("H"), "浮点型")
                setParamValue(m1, "d158", read("dr_location") + read("H") * 2, "浮点型")
            End If



            setParamValue(m1, "p165", read("dr_number"), "浮点型")
            setParamValue(m1, "d158", read("dr_location"), "浮点型")
            setParamValue(m1, "d244", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d162", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "p255", read("dr_number"), "浮点型")
            setParamValue(m1, "d249", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d246", read("dr_hole_distance"), "浮点型")

            setParamValue(m1, "d137", read("sl_pole_shoe_width"), "浮点型") 'bp
            setParamValue(m1, "d63", read("sl_pole_shoe_high"), "浮点型") 'hm
            setParamValue(m1, "d206", read("sl1_width1"), "浮点型") 'bm
            setParamValue(m1, "d136", read("sl1_arc1"), "浮点型") '槽中圆弧直径

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            '标准键数据(read("inside_diameter"))
            setParamValue(m1, "d228", read("Keyway_high") - read("inside_diameter") / 2, "浮点型")


            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If


            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d208", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
            End If

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p235", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d229", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d183", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d230", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d233", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then

                    setParamValue(m1, "d230", 0, "浮点型", 0）
                    setParamValue(m1, "d233", 0, "浮点型", 0)
                End If
            Else
                deleteFeature(m1, 5678)
            End If

            setParamValue(m1, "d262", read("sl1_long1"), "浮点型")


            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d244")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d183")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d233")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")
        ElseIf read("type") = 2 Then

            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")



            setParamValue(m1, "d269", read("a1"), "浮点型")
            setParamValue(m1, "d266", read("a9"), "浮点型")
            setParamValue(m1, "d270", read("a26"), "浮点型")
            setParamValue(m1, "d264", read("a10"), "角度", read("a10"))
            setParamValue(m1, "d265", read("a11"), "角度", read("a11"))
            setParamValue(m1, "d268", read("a12"), "浮点型")
            setParamValue(m1, "d263", read("a22"), "浮点型")
            setParamValue(m1, "d271", read("a17"), "浮点型")
            setParamValue(m1, "d267", read("a18"), "浮点型")
            setParamValue(m1, "d299", read("a19"), "浮点型")

            setParamValue(m1, "d285", read("Ra13"), "浮点型")
            setParamValue(m1, "d284", read("Ra15"), "浮点型")
            setParamValue(m1, "d282", read("a20"), "浮点型")
            setParamValue(m1, "d283", read("a21"), "浮点型")

            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            '标准键数据(read("inside_diameter"))
            setParamValue(m1, "d228", read("Keyway_high") - read("inside_diameter") / 2, "浮点型")

            '单极阻尼棒


            If read("H_type") = 0 Then
                setParamValue(m1, "d301", 0, "浮点型")
                setParamValue(m1, "d158", read("dr_location"), "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d301", read("H"), "浮点型")
                setParamValue(m1, "d158", read("dr_location") + read("H") * 2, "浮点型")
            End If




            setParamValue(m1, "p165", read("dr_number"), "浮点型")
            'setParamValue(m1, "d158", read("dr_location"), "浮点型")
            setParamValue(m1, "d244", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d162", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "p255", read("dr_number"), "浮点型")
            setParamValue(m1, "d249", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d246", read("dr_hole_distance"), "浮点型")
            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If


            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d208", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
            End If

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p235", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d229", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d183", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d230", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d233", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then
                    setParamValue(m1, "d230", 0, "浮点型", 0）
                    setParamValue(m1, "d233", 0, "浮点型", 0)
                End If
            Else
                deleteFeature(m1, 5678)
            End If


            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d244")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d183")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d233")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")


        ElseIf read("type") = 3 Then






            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")
            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")
            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d138", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
                'setParamValue(m1, "d138", read("H"), "浮点型")
            End If

            setParamValue(m1, "d136", read("sl_pole_shoe_width"), "浮点型") 'bp
            setParamValue(m1, "d63", read("sl_pole_shoe_high"), "浮点型") 'hm
            setParamValue(m1, "d137", read("sl1_width1"), "浮点型") 'bm
            setParamValue(m1, "d65", read("sl1_long1"), "浮点型")

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p124", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d154", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d119", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d155", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d152", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then

                    setParamValue(m1, "d155", 0, "浮点型", 0）
                    setParamValue(m1, "d152", 0, "浮点型", 0）
                End If
            Else
                deleteFeature(m1, 3674)
            End If

            '单极阻尼棒
            setParamValue(m1, "p115", read("dr_number"), "浮点型")

            setParamValue(m1, "d159", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d112", read("dr_array_angle"), "角度", read("dr_array_angle"))
            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d105", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d105", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If

            If read("H_type") = 0 Then
                setParamValue(m1, "d190", 0, "浮点型")
                setParamValue(m1, "d103", read("dr_location"), "浮点型")

            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d190", read("H"), "浮点型")
                setParamValue(m1, "d103", read("dr_location") + read("H") * 2, "浮点型")
            End If


            setParamValue(m1, "p167", read("dr_number"), "浮点型")
            setParamValue(m1, "d164", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d161", read("dr_hole_distance"), "浮点型")

            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d159")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d119")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d152")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            标准键数据(read("inside_diameter"))
            setParamValue(m1, "d151", read("Keyway_high") + read("inside_diameter") / 2, "浮点型")

            If read("Weight_loss_hole_type") = 1 Then

                setParamValue(m1, "d176", read("loss_hole_Side_distance"), "浮点型")
                setParamValue(m1, "d175", read("loss_hole_Side_distance"), "浮点型")
                setParamValue(m1, "d177", read("loss_hole_distance"), "浮点型") '减重孔直径
                deleteFeature(m1, 2290)
            Else

                setParamValue(m1, "d78", read("sl1_location"), "浮点型") '减重孔位置直径
                setParamValue(m1, "d80", read("sl1_diameter"), "浮点型") '减重孔直径



                If read("H_type") = 0 Then
                    deleteFeature(m1, 5504)

                ElseIf read("H_type") = 1 Then
                    deleteFeature(m1, 5750)
                End If

            End If




        ElseIf read("type") = 4 Then
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型")

            setParamValue(m1, "d9", read("Keyway_width"), "浮点型")
            setParamValue(m1, "d8", read("Keyway_high"), "浮点型")
            '内圈孔1
            setParamValue(m1, "p17", read("dr_number"), "浮点型")
            setParamValue(m1, "d11", read("dr_location"), "浮点型")
            setParamValue(m1, "d12", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d13", read("dr_array_angle") / 180 * PI, "角度", read("dr_array_angle"))

            '外圈孔2
            setParamValue(m1, "p26", read("pr_number"), "浮点型") '单极定位棒个数
            setParamValue(m1, "d20", read("Positioning_rods_location"), "浮点型")
            setParamValue(m1, "d21", read("pr_diameter"), "浮点型")
            setParamValue(m1, "d22", read("pr_array_angle") / 180 * PI, "角度", read("pr_array_angle"))


            '内减重槽

            setParamValue(m1, "d48", read("groove1_angle") / 180 * PI, "角度", read("groove1_angle"))
            setParamValue(m1, "d44", read("groove1_outer_diameter"), "浮点型")
            setParamValue(m1, "d43", read("groove1_inside_diameter"), "浮点型")
            setParamValue(m1, "d46", read("groove1_filleted"), "浮点型")
            setParamValue(m1, "d45", read("groove1_filleted"), "浮点型")
            setParamValue(m1, "p52", read("groove1_number"), "浮点型")



            '外槽

            setParamValue(m1, "d58", read("groove2_distance1"), "浮点型")
            setParamValue(m1, "d59", read("groove2_distance2"), "浮点型")
            setParamValue(m1, "d60", read("groove2_width"), "浮点型")
            setParamValue(m1, "d56", read("groove2_filleted"), "浮点型")
            setParamValue(m1, "d57", read("groove2_filleted"), "浮点型")
            setParamValue(m1, "p64", read("groove2_number") / 2, "浮点型")
            setParamValue(m1, "d55", read("groove2_angle") / 180 * PI, "角度", read("groove2_angle"))




        End If
        '’'msgbox(0)
        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)

        ExportJpg(path, imageName)
        If read("type") = 1 Then

            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination1", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination1", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination1_2", 2)
                End If
            End If
        ElseIf read("type") = 3 Then
            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination3", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination3", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination3_2", 2)
                End If
            End If
        ElseIf read("type") = 2 Then
            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination2", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination2", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination2_2", 2)
                End If
            End If
        ElseIf read("type") = 4 Then
            m2 = activateModel("rotor_lamination4", 2)
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)


        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        modelItems = listModelItem(m2, "DTL_NOTE")
        Dim aaa As IpfcModelItem
        If read("type") = 1 Then

            If read("H_direction") = 0 Then
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_389")
                ''msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
                '修改注释(modelItems, 34, view2Ds.Item(0).Scale.ToString)
            Else
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_350"）
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            End If
        ElseIf read("type") = 2 Then
            If read("H_direction") = 1 Then
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_386")
                ''msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            Else
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_389")
                '’'msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            End If
        ElseIf read("type") = 3 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_107")
            ''msgbox(aaa.GetName, aaa.Id)
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            '修改注释(modelItems, 32, view2Ds.Item(0).Scale.ToString)
        ElseIf read("type") = 4 Then

            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_70")
            '’'msgbox(aaa.GetName, aaa.Id)
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)


        End If





        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 170})
        添加图幅注释(m2, read("T_MOTOR"))
        If read("type") = 2 Then
            修改绘制尺寸值_new(asmItem_3， read("dr_number") * 2)
            修改绘制尺寸值_new(asmItem_2， read("pr_number") * 2)
        Else
            修改绘制尺寸值_new(asmItem_3， read("dr_number") * 4)
            修改绘制尺寸值_new(asmItem_2， read("pr_number") * 4)
        End If
        If read("pr_type") = 1 Then
            尺寸删除(asmItem_4)

        End If
        If read("H_type") = 0 Then

            尺寸删除(asmItem_5)
        End If

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        '装配体图纸转移("E:\works\creo\tp"， path, read("CODE") + read("NAME"))
        FileIO.FileSystem.CopyDirectory("E:\works\creo\tp", path)

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If


        endApp()

        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub 尺寸删除(asmItem_1 As IpfcModelItem)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdEditDelete@PopupMenuGraphicWinStack`;")
        selBuffer.Clear()
    End Sub
    Public Sub 修改绘制尺寸值_new(asmItem_1 As IpfcModelItem， n#)
        selBuffer.Clear()
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPmaChkSldPnlDimTxt`  1;" +
                            "~ Trail `main_dlg_cur` `Dimension_Properties:ProCmdPmaChkSldPnlDimTxt` " +
                            "`RibbonPanelsOnActivate_ProCmdPmaChkSldPnlDimTxt` ``;" +
                            "~ Command `ProCmdPmaInpDimPrefix`  `" + n.ToString + "Xn`;")
        selBuffer.Clear()
    End Sub
    Public Sub 修改绘制尺寸值_new2(asmItem_1 As IpfcModelItem， n#)
        selBuffer.Clear()
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPmaChkSldPnlDimTxt`  1;" +
                            "~ Trail `main_dlg_cur` `Dimension_Properties:ProCmdPmaChkSldPnlDimTxt` " +
                            "`RibbonPanelsOnActivate_ProCmdPmaChkSldPnlDimTxt` ``;" +
                            "~ Command `ProCmdPmaInpDimPrefix`  `" + n.ToString + "XM`;")
        selBuffer.Clear()
    End Sub
    Public Sub 添加图幅注释(model As IpfcModel, str$)
        Dim SheetInfo As IpfcSheetOwner
        Dim width1 As Integer
        SheetInfo = CType(model, IpfcSheetOwner)
        width1 = SheetInfo.GetSheetInfo(1).Width
        model.Import("E:\works\creo\config\creodtl.dtl", (New CCpfcDWGSetupImportInstructions).Create())
        drawing = CType(model, IpfcDrawing)
        If width1 = 210 Then 'A4

            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If

            无引线注释(drawing, texts, 208, 395, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 420 Then 'A3
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 5, 407, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 594 Then 'A2
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 319, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 841 Then 'A1
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 259, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 1189 Then 'A0
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 187, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        End If

    End Sub
    Public Sub 修改注释(feats As IpfcModelItems, j#, noteValue$)
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDwgEditValue` ;" + noteValue + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 修改注释_name(feat As IpfcModelItem, noteValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDwgEditValue` ;" + noteValue + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 修改注释2(feat As IpfcModelItem, noteValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub 修改图纸比例(model_1 As IpfcModel, j#)
        Dim SheetInfo As IpfcSheetOwner
        SheetInfo = CType(model_1, IpfcSheetOwner)
        SheetInfo.SetSheetScale(1, j, Nothing)
    End Sub
    Public Sub change_txt_note_text(feats As IpfcModelItems, j#, noteValue$)
        selBuffer.Clear()
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub change_txt_note_text3(feat As IpfcModelItem, noteValue$)
        selBuffer.Clear()
        compItem_1 = feat
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub change_text_note_text2(feats As IpfcModelItems, j#, noteValue$)
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("Command `ProCmdPmaChkSldPnlGtolTxt`  1;" +
                            "~~ Trail `main_dlg_cur` `Geometric_Tolerance:ProCmdPmaChkSldPnlGtolTxt`" +
                            "~ Input `ProCmdPmaChkSldPnlGtolTxt__panel` `PH.abv_txt_area`" + noteValue +
                            "~ Update `ProCmdPmaChkSldPnlGtolTxt__panel` `PH.abv_txt_area` ;")
        AC.Session.RunMacro(" ~ Trail `main_dlg_cur` `Geometric_Tolerance:ProCmdPmaChkSldPnlGtolTxt`")
        AC.Session.RunMacro("  `RibbonPanelsOnActivate_ProCmdPmaChkSldPnlGtolTxt` ``")
        selBuffer.Clear()

    End Sub
    Public Sub creo阻尼棒(localhost$, tabledase$, code As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\damping_rod\damping_rod2")
        retrieveModel("frm", "E:\works\creo\damping_rod\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\damping_rod\damping_rod2")
        m1 = activateModel("damping_rod2", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")

        partValue(m1)
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        'm1.CommonName = read("NAME")

        If read("type") = 1 Then
            setParamValue(m1, "d5", read("dr_length"), "浮点型")
            setParamValue(m1, "d4", read("dr_diameter"), "浮点型")

            setParamValue(m1, "d10", read("dr_rounded1"), "浮点型") '圆角
            setParamValue(m1, "d9", read("dr_rounded2"), "浮点型")
        ElseIf read("type") = 0 Then




            setParamValue(m1, "d5", read("dr_length"), "浮点型")
            setParamValue(m1, "d4", read("dr_diameter"), "浮点型")

            deleteFeature(m1, 124)


        End If






        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        m2 = activateModel("damping_rod2", 2)

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'view2Ds.Item(0).Scale =
        'If read("dr_length") <= 100 Then
        '    view2Ds.Item(0).Scale = 1
        'ElseIf read("dr_length") > 100 And read("dr_length") <= 250 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("dr_length") > 250 And read("dr_length") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("dr_length") > 400 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'End If


        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 21, view2Ds.Item(0).Scale.ToString)

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {350, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()


        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If



    End Sub


    Public Sub creo槽楔(localhost$, tabledase$, code As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\slot_wedge\8ly_783_002")
        retrieveModel("frm", "E:\works\creo\slot_wedge\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\slot_wedge\8ly_783_002")
        m1 = activateModel("8ly_783_002", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")

        partValue(m1)
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        'm1.CommonName = read("NAME")


        setParamValue(m1, "d6", read("length1"), "浮点型")
        setParamValue(m1, "d5", read("length2"), "浮点型")

        setParamValue(m1, "d4", read("thickness"), "浮点型")
        setParamValue(m1, "d7", read("width"), "浮点型")







        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        m2 = activateModel("8ly_783_002", 2)

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        'view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'view2Ds.Item(0).Scale =
        'If read("dr_length") <= 100 Then
        '    view2Ds.Item(0).Scale = 1
        'ElseIf read("dr_length") > 100 And read("dr_length") <= 250 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("dr_length") > 250 And read("dr_length") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("dr_length") > 400 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'End If

        Dim aaa As IpfcModelItem
        modelItems = listModelItem(m2, "DTL_NOTE")
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_77")
        '修改注释(modelItems, 21, view2Ds.Item(0).Scale.ToString)
        修改注释_name(aaa, Val(Scale_drw(0)) / Val(Scale_drw(1)))
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {350, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()


        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If



    End Sub
    Public Sub creo封闭连接环(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)



        openModel("prt", "E:\works\creo\adapter_ring\adapter_ring.prt")
        m1 = retrieveModel("drw", "E:\works\creo\adapter_ring\adapter_ring")
        m1 = activateModel("adapter_ring", 1)
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        'm1.CommonName = read("NAME")
        setParamValue(m1, "d5", read("outside_diameter1"), "浮点型")
        setParamValue(m1, "d4", read("thickness1"), "浮点型")
        setParamValue(m1, "d11", read("outside_diameter2"), "浮点型")
        setParamValue(m1, "d10", read("thickness2"), "浮点型")
        setParamValue(m1, "d7", read("inside_diameter1"), "浮点型")

        setParamValue(m1, "d9", read("inside_diameter2"), "浮点型")
        setParamValue(m1, "d8", read("thickness3"), "浮点型")


        setParamValue(m1, "d14", read("distance1"), "浮点型")
        setParamValue(m1, "d13", read("distance2"), "浮点型")
        setParamValue(m1, "d15", read("distance3"), "浮点型")

        setParamValue(m1, "d17", read("chamfer"), "浮点型")
        setParamValue(m1, "d16", read("chamfer"), "浮点型")

        setParamValue(m1, "d19", read("hole_location"), "浮点型")
        setParamValue(m1, "d21", read("hole_diameter"), "浮点型")
        setParamValue(m1, "p25", read("hole_number"), "浮点型")
        setParamValue(m1, "d20", read("hole_angle"), "角度")

        ExportJpg(path, imageName)

        m2 = activateModel("adapter_ring", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter1") <= 350 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("outside_diameter1") > 350 And read("outside_diameter1") <= 500 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        'ElseIf read("outside_diameter1") > 500 And read("outside_diameter1") <= 650 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("outside_diameter1") > 650 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        'End If
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 30, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub '1
    Public Sub creo联轴器片(localhost$, tabledase$, code As Integer, path$, imageName$)



        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\coupling_piece\coupling_piece")
        retrieveModel("frm", "E:\works\creo\coupling_piece\part_a3_sb")
        retrieveModel("drw", "E:\works\creo\coupling_piece\coupling_piece")
        m1 = activateModel("coupling_piece", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")

        partValue(m1)
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        setParamValue(m1, "d5", read("outside_diameter"), "浮点型")
        setParamValue(m1, "d7", read("inside_diameter"), "浮点型")
        setParamValue(m1, "d4", read("thickness"), "浮点型")

        setParamValue(m1, "d9", read("threaded_hole_location"), "浮点型")
        setParamValue(m1, "d10", read("threaded_hole_diameter"), "浮点型")
        setParamValue(m1, "p14", read("threaded_hole_number"), "浮点型")

        setParamValue(m1, "d17", read("lightening_hole_location"), "浮点型")
        setParamValue(m1, "d18", read("lightening_hole_diameter"), "浮点型")
        setParamValue(m1, "p22", read("lightening_hole_number"), "浮点型")

        'setParamValue(m1, "p32", read("threaded_hole_number"), "浮点型")

        If read("type") = 1 Then
            setParamValue(m1, "d25", read("mark_height"), "浮点型")
            setParamValue(m1, "d26", read("mark_wide"), "浮点型")
        Else
            deleteFeature(m1, 550)
        End If

        asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d10")
        asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d18")
        m1.CommonName = read("NAME")
        RegenerateModel(m1)

        ExportJpg(path, imageName)

        m2 = activateModel("coupling_piece", 2)

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter") <= 350 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read("outside_diameter") > 350 And read("outside_diameter") <= 500 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        '    view2Ds.Item(1).Scale = 1 / 2.5
        'ElseIf read("outside_diameter") > 500 And read("outside_diameter") <= 650 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read("outside_diameter") > 650 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        '    view2Ds.Item(1).Scale = 1 / 3.5
        'End If
        修改绘制尺寸值_new(asmItem_2， read("threaded_hole_number"))
        修改绘制尺寸值_new(asmItem_3， read("lightening_hole_number"))
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 32, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If

        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 平衡铁(localhost$, tabledase$, code As Integer, path$, imageName$)


        mysql_new2(localhost$, "creo", tabledase, code)



        m1 = openModel("prt", "E:\works\creo\gimbals\balance_iron")
        retrieveModel("frm", "E:\works\creo\gimbals\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\gimbals\balance_iron")
        m1 = activateModel("balance_iron", 1)

        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If





        setParamValue(m1, "d5", read("outside_diameter"), "浮点型")
        setParamValue(m1, "d4", read("thickness"), "浮点型")
        setParamValue(m1, "d6", read("inside_diameter"), "浮点型")
        m1.CommonName = read("NAME")
        RegenerateModel(m1)

        ExportJpg(path, imageName)
        m2 = activateModel("balance_iron", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        'view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))


        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 21, Scale_drw(0) / Scale_drw(1))

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 200})
        添加图幅注释(m2, read("T_MOTOR"))




        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        m1.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If

        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo平衡环(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        m1 = openModel("prt", "E:\works\creo\gimbals\gimbals2")
        retrieveModel("frm", "E:\works\creo\gimbals\part_a3_sb")
        retrieveModel("drw", "E:\works\creo\gimbals\gimbals2")
        m1 = activateModel("gimbals2", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If


        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()

        setParamValue(m1, "d6", read("outside_diameter"), "浮点型")
        setParamValue(m1, "d5", read("inside_diameter"), "浮点型")
        setParamValue(m1, "d4", read("thickness"), "浮点型")


        'If read("Positioning_rods_location") = 0 Or read("pr_diameter") = 0 Or read("pr_number") = 4 Then
        '    modelItems = listModelItem(m1, "FEATURE")
        '    note_Item_10 = modelItems.Item(6)
        '    compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
        '    ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        '    selBuffer.AddSelection(compSelect_1)
        '    'AC.Session.RunMacro(" ~Select Case`main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`;")
        '    ' AC.Session.RunMacro(" ~RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node4`;")
        '    ' AC.Session.RunMacro(" ~PopupOver `main_dlg_cur` `PM_PHTLeft.AssyTree` 1 `PHTLeft.AssyTree`;")
        '    ' AC.Session.RunMacro(" ~Open `main_dlg_cur` `PM_PHTLeft.AssyTree`;")
        '    ' AC.Session.RunMacro(" ~Close `main_dlg_cur` `PM_PHTLeft.AssyTree`;")
        '    AC.Session.RunMacro(" ~Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        '    AC.Session.RunMacro(" ~Command `ProCmdDelpat@PopupMenuTree`;")
        '    ' deleteFeature(m1, 1459)
        'Else
        '    setParamValue(m1, "d29", read("pr_diameter"), "浮点型")
        '    setParamValue(m1, "p51", read("pr_number") / 4, "浮点型")
        'End If
        setParamValue(m1, "d8", read("Positioning_rods_location"), "浮点型")
        If read("pr_number") = 4 Then

            modelItems = listModelItem(m1, "FEATURE")
            note_Item_10 = modelItems.Item(6)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
            ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
            selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro(" ~Select Case`main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`;")
            ' AC.Session.RunMacro(" ~RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node4`;")
            ' AC.Session.RunMacro(" ~PopupOver `main_dlg_cur` `PM_PHTLeft.AssyTree` 1 `PHTLeft.AssyTree`;")
            ' AC.Session.RunMacro(" ~Open `main_dlg_cur` `PM_PHTLeft.AssyTree`;")
            ' AC.Session.RunMacro(" ~Close `main_dlg_cur` `PM_PHTLeft.AssyTree`;")
            AC.Session.RunMacro(" ~Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            AC.Session.RunMacro(" ~Command `ProCmdDelpat@PopupMenuTree`;")
            setParamValue(m1, "d47", (90), "角度", 90)
        ElseIf read("pr_number") = 8 Then

            setParamValue(m1, "d47", (read("pr_angle") + 90), "角度", (read("pr_angle")))
            setParamValue(m1, "d48", read("pr_array_angle"), "角度", read("pr_array_angle"))
            setParamValue(m1, "d29", read("pr_diameter"), "浮点型")
            ' setParamValue(m1, "p51", read("pr_number") / 4, "浮点型")

        End If







        If read("dr_type") = 1 Then
            setParamValue(m1, "d16", read("dr_location"), "浮点型")
            setParamValue(m1, "d17", read("dr_diameter"), "浮点型")
            setParamValue(m1, "p22", (read("dr_number") - 4) / 4, "浮点型")
            setParamValue(m1, "d18", (read("dr_angle")), "角度", (read("dr_angle")))
            setParamValue(m1, "d19", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d40", read("dr_location"), "浮点型")
            setParamValue(m1, "d41", read("dr_diameter"), "浮点型")

        ElseIf read("dr_type") = 0 Then

            setParamValue(m1, "d16", read("dr_location"), "浮点型")
            setParamValue(m1, "d17", read("dr_diameter"), "浮点型")
            setParamValue(m1, "p22", (read("dr_number")) / 4, "浮点型")
            setParamValue(m1, "d18", (read("dr_angle")), "角度", (read("dr_angle")))
            setParamValue(m1, "d19", read("dr_array_angle"), "角度", read("dr_array_angle"))

            deleteFeature(m1, 1377)

        End If

        asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d17")
        asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d29")

        asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d54")

        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        m2 = activateModel("gimbals2", 2)

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)


        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter") <= 450 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        '    view2Ds.Item(1).Scale = 1 / 2.5
        'ElseIf read("outside_diameter") > 450 And read("outside_diameter") <= 600 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        '    view2Ds.Item(1).Scale = 1 / 3.5
        'ElseIf read("outside_diameter") > 600 And read("outside_diameter") <= 750 Then
        '    view2Ds.Item(0).Scale = 1 / 4.5
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read("outside_diameter") > 750 Then
        '    view2Ds.Item(0).Scale = 1 / 5.5
        '    view2Ds.Item(1).Scale = 1 / 5.5
        'End If
        修改绘制尺寸值_new(asmItem_2， read("dr_number"))
        修改绘制尺寸值_new(asmItem_3， read("pr_number"))
        'asmItem_4 = m2.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "ad54")

        'AC.Session.RunMacro("8 ~ Command `ProCmdEditDelete@PopupMenuGraphicWinStack`;")
        'If read("pr_number") / 4 = 1 Then
        '    尺寸删除(asmItem_4)
        'End IfDIMENSION
        'modelItems = listModelItem_有弹窗(m2, "DIMENSION")
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 32, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo定位棒(localhost$, tabledase$, code As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\positioning_rod\positioning_rods5")
        retrieveModel("frm", "E:\works\creo\positioning_rod\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\positioning_rod\positioning_rods5")
        m1 = activateModel("positioning_rods5", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        'm1.Regenerate(Nothing)
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If

        If read("type") = 1 Then

            setParamValue(m1, "d4", read("diameter1"), "浮点型")
            setParamValue(m1, "d5", read("width1"), "浮点型")


            If read("chamfer1_type") = 1 Then
                setParamValue(m1, "d9", read("chamfer1"), "浮点型")
                setParamValue(m1, "d21", read("chamfer1"), "浮点型")


            ElseIf read("chamfer1_type") = 0 Then


                deleteFeature(m1, 124)
                deleteFeature(m1, 254)
            End If


            If read("hole_type") = 1 Then
                setParamValue(m1, "d26", read("diameter4"), "浮点型")
                setParamValue(m1, "d25", read("width4"), "浮点型")

                deleteFeature(m1, 281)
                deleteFeature(m1, 375)
            ElseIf read("hole_type") = 0 Then
                setParamValue(m1, "d30", read("diameter4"), "浮点型")
                setParamValue(m1, "d29", read("width4"), "浮点型")
                deleteFeature(m1, 281)
                deleteFeature(m1, 307)
            ElseIf read("hole_type") = 2 Then
                setParamValue(m1, "d26", read("diameter4"), "浮点型")
                setParamValue(m1, "d25", read("width4"), "浮点型")

                setParamValue(m1, "d24", read("diameter4"), "浮点型")
                setParamValue(m1, "d23", read("width4"), "浮点型")
                deleteFeature(m1, 375)
            End If




        ElseIf read("type") = 2 Then

            deleteFeature(m1, 124)
            deleteFeature(m1, 254)
            deleteFeature(m1, 281)

            setParamValue(m1, "d4", read("diameter1"), "浮点型")
            setParamValue(m1, "d5", read("width1"), "浮点型")


            setParamValue(m1, "d26", read("diaterme2"), "浮点型")
            setParamValue(m1, "d25", read("width2"), "浮点型")


            setParamValue(m1, "d9", read("chamfer1"), "浮点型")
            setParamValue(m1, "d21", read("chamfer1"), "浮点型")


        ElseIf read("type") = 3 Then
            deleteFeature(m1, 124)
            deleteFeature(m1, 254)
            deleteFeature(m1, 375)

            setParamValue(m1, "d4", read("diameter1"), "浮点型")
            setParamValue(m1, "d5", read("width1"), "浮点型")


            setParamValue(m1, "d24", read("diaterme2"), "浮点型")
            setParamValue(m1, "d23", read("width2"), "浮点型")

            setParamValue(m1, "d26", read("diaterme2"), "浮点型")
            setParamValue(m1, "d25", read("width3"), "浮点型")


            setParamValue(m1, "d28", read("chamfer1"), "浮点型")

            setParamValue(m1, "d27", read("chamfer1"), "浮点型")



        End If
        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        m2 = activateModel("positioning_rods5", 2)

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("width1") <= 100 Then
        '    view2Ds.Item(0).Scale = 1 / 1
        'ElseIf read("width1") > 100 And read("width1") <= 250 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        'ElseIf read("width1") > 250 And read("width1") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("width1") > 400 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        'End If


        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 21, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {350, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo轴(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        If read("type") = 1 Then
            m1 = openModel("prt", "E:\works\creo\rotor_shaft\rotor_shaft")
            retrieveModel("frm", "E:\works\creo\rotor_shaft\part_a2_sb")
            retrieveModel("drw", "E:\works\creo\rotor_shaft\rotor_shaft")
            m1 = activateModel("rotor_shaft", 1)
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\rotor_shaft\rotor_shaft2")
            retrieveModel("frm", "E:\works\creo\rotor_shaft\part_a2_sb")
            retrieveModel("drw", "E:\works\creo\rotor_shaft\rotor_shaft2")
            m1 = activateModel("rotor_shaft2", 1)
        ElseIf read("type") = 3 Then
            m1 = openModel("prt", "E:\works\creo\rotor_shaft\rotor_shaft3")
            retrieveModel("frm", "E:\works\creo\rotor_shaft\part_a2_sb")
            retrieveModel("drw", "E:\works\creo\rotor_shaft\rotor_shaft3")
            m1 = activateModel("rotor_shaft3", 1)
        ElseIf read("type") = 5 Then
            m1 = openModel("prt", "E:\works\creo\rotor_shaft\rotor_shaft5")
            retrieveModel("frm", "E:\works\creo\rotor_shaft\part_a2_sb")
            retrieveModel("drw", "E:\works\creo\rotor_shaft\rotor_shaft5")
            m1 = activateModel("rotor_shaft5", 1)
        End If
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If

        If read("type") = 4 Then
            '第一阶
            If read("stepped_shaft11_type") = 1 Then
                'deleteFeature(m1,)
                setParamValue(m1, "d5", read("stepped_shaft11_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft11_length"), "浮点型")
                '差倒角
            Else
                deleteFeature(m1, 61)
            End If

            '第二阶
            setParamValue(m1, "d8", read("stepped_shaft1_diameter"), "浮点型")
            setParamValue(m1, "d7", read("stepped_shaft1_length"), "浮点型")
            '切除
            setParamValue(m1, "d98", read("notch1_deep"), "浮点型")
            setParamValue(m1, "d9", read("notch1_length"), "浮点型")

            '键1
            标准键数据(read("stepped_shaft1_diameter"))
            setParamValue(m1, "d100", read("keyway1_length"), "浮点型")
            setParamValue(m1, "d68", B / 2, "浮点型")


            '
            setParamValue(m1, "d12", read("stepped_shaft2_diameter"), "浮点型")
            setParamValue(m1, "d11", read("stepped_shaft2_length"), "浮点型")

            '第四阶
            setParamValue(m1, "d14", read("stepped_shaft3_diameter"), "浮点型")
            setParamValue(m1, "d13", read("stepped_shaft3_length"), "浮点型")

            '第五阶
            setParamValue(m1, "d16", read("stepped_shaft4_diameter"), "浮点型")
            setParamValue(m1, "d15", read("stepped_shaft4_length"), "浮点型")

            '键2
            标准键数据(read("stepped_shaft4_diameter"))
            setParamValue(m1, "d99", read("keyway2_distance"), "浮点型")
            setParamValue(m1, "d48", T1, "浮点型")
            setParamValue(m1, "d50", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d49", B / 2, "浮点型")





            setParamValue(m1, "d22", read("stepped_shaft5_diameter"), "浮点型")
            setParamValue(m1, "d21", read("stepped_shaft5_length"), "浮点型")


            setParamValue(m1, "d24", read("stepped_shaft6_diameter"), "浮点型")
            setParamValue(m1, "d23", read("stepped_shaft6_length"), "浮点型")

            '键3
            标准键数据(read("stepped_shaft7_diameter"))
            setParamValue(m1, "d55", T1, "浮点型")
            setParamValue(m1, "d56", read("keyway3_length"), "浮点型")
            setParamValue(m1, "d57", B / 2, "浮点型")

            '切除
            setParamValue(m1, "d33", read("notch1_deep"), "浮点型")
            setParamValue(m1, "d32", read("notch1_length"), "浮点型")

            setParamValue(m1, "d38", read("stepped_shaft7_diameter"), "浮点型")
            setParamValue(m1, "d37", read("stepped_shaft7_length"), "浮点型")



            setParamValue(m1, "d43", read("stepped_shaft8_diameter"), "浮点型")
            setParamValue(m1, "d42", read("stepped_shaft8_length"), "浮点型")

            '切除
            setParamValue(m1, "d45", read("notch1_deep"), "浮点型")
            setParamValue(m1, "d44", read("notch1_length"), "浮点型")






            '螺纹孔

            setParamValue(m1, "d76", read("hole_angle"), "角度", read("hole_angle")) '角度
            setParamValue(m1, "d77", read("hole_location") / 2, "浮点型") '位置直径


            If read("hole_type") = 1 Then 'M10


                setParamValue(m1, "P94", read("hole_number"), "浮点型") '个数
                setParamValue(m1, "d84", read("hole_deep"), "浮点型") '深度
                deleteFeature(m1, 1579)
                deleteFeature(m1, 2042)
                deleteFeature(m1, 2552)
            ElseIf read("hole_type") = 2 Then 'M6
                setParamValue(m1, "P118", read("hole_number"), "浮点型") '个数
                setParamValue(m1, "d107", read("hole_deep"), "浮点型") '深度
                deleteFeature(m1, 962)
                deleteFeature(m1, 2042)
                deleteFeature(m1, 2552)

            ElseIf read("hole_type") = 3 Then 'M8
                setParamValue(m1, "P134", read("hole_number"), "浮点型") '个数
                setParamValue(m1, "d123", read("hole_deep"), "浮点型") '深度
                deleteFeature(m1, 962)
                deleteFeature(m1, 1579)
                deleteFeature(m1, 2552)
            ElseIf read("hole_type") = 4 Then 'M12
                setParamValue(m1, "P149", read("hole_number"), "浮点型") '个数
                setParamValue(m1, "d139", read("hole_deep"), "浮点型") '深度
                deleteFeature(m1, 962)
                deleteFeature(m1, 1579)
                deleteFeature(m1, 2042)

            End If


        ElseIf read("type") = 1 Then
            '第一阶
            '伸出端

            setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
            setParamValue(m1, "d4", read("stepped_shaft1_length"), "浮点型")

            标准键数据(read("stepped_shaft1_diameter"))
            setParamValue(m1, "d19", read("stepped_shaft1_diameter") / 2, "浮点型")
            setParamValue(m1, "d21", B, "浮点型")



            '第2阶 
            setParamValue(m1, "d7", read("stepped_shaft2_diameter"), "浮点型")
            setParamValue(m1, "d6", read("stepped_shaft2_length"), "浮点型")


            '第三阶
            setParamValue(m1, "d9", read("stepped_shaft3_diameter"), "浮点型")
            setParamValue(m1, "d8", read("stepped_shaft3_length"), "浮点型")



            '键2
            标准键数据(read("stepped_shaft3_diameter"))
            setParamValue(m1, "d22", read("stepped_shaft3_diameter") / 2 - T1, "浮点型")
            setParamValue(m1, "d26", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d25", B, "浮点型")
            setParamValue(m1, "d24", read("stepped_shaft2_length") + (read("keyway2_distance")), "浮点型")

            '第4阶  
            setParamValue(m1, "d11", read("stepped_shaft4_diameter"), "浮点型")
            setParamValue(m1, "d10", read("stepped_shaft4_length"), "浮点型")


            '退刀
            setParamValue(m1, "d16", read("notch1_deep"), "浮点型")
            setParamValue(m1, "d14", read("stepped_shaft3_length"), "浮点型")
            setParamValue(m1, "d14", read("notch1_length"), "浮点型")




            '第5阶  线圈闲置
            setParamValue(m1, "d13", read("stepped_shaft5_diameter"), "浮点型")
            setParamValue(m1, "d12", read("stepped_shaft5_length"), "浮点型")

            '切除 退刀
            setParamValue(m1, "d18", read("notch1_deep"), "浮点型")
            setParamValue(m1, "d17", read("notch1_length"), "浮点型")
        ElseIf read("type") = 2 Then '单支撑
            '第一阶
            '伸出端

            If read("stepped_shaft5_diameter") = read("stepped_shaft6_diameter") Then
                deleteFeature(m1, 3148)
            Else
                A型退刀槽(read("stepped_shaft6_diameter"))
                setParamValue(m1, "d259", f1, "浮点型")
                setParamValue(m1, "d261", r1, "浮点型")
                setParamValue(m1, "d260", t, "浮点型")
                setParamValue(m1, "d262", r1, "浮点型")
            End If
            '第一阶
            If read("stepped_shaft0_type") = 1 Then
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length") + read("stepped_shaft0_length"), "浮点型")

                setParamValue(m1, "d276", read("stepped_shaft0_diameter"), "浮点型")
                setParamValue(m1, "d275", read("stepped_shaft0_length"), "浮点型")
                setParamValue(m1, "d279", read("stepped_shaft0_length"), "浮点型")

            Else
                deleteFeature(m1, 3292)
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length"), "浮点型")
            End If

            '第3阶 风扇支撑端
            setParamValue(m1, "d13", read("stepped_shaft3_diameter"), "浮点型")
            setParamValue(m1, "d12", read("stepped_shaft3_length"), "浮点型")
            '第4阶 
            setParamValue(m1, "d19", read("stepped_shaft4_diameter"), "浮点型")
            setParamValue(m1, "d18", read("stepped_shaft4_length"), "浮点型")
            '第5阶  定转子放置
            setParamValue(m1, "d23", read("stepped_shaft5_diameter"), "浮点型")
            setParamValue(m1, "d22", read("stepped_shaft5_length"), "浮点型")
            '第六阶  线圈闲置
            setParamValue(m1, "d27", read("stepped_shaft6_diameter"), "浮点型")
            setParamValue(m1, "d26", read("stepped_shaft6_length"), "浮点型")
            '第七阶励磁机段
            setParamValue(m1, "d31", read("stepped_shaft7_diameter"), "浮点型")
            setParamValue(m1, "d30", read("stepped_shaft7_length"), "浮点型")
            '第八阶 闲置段3
            setParamValue(m1, "d39", read("stepped_shaft8_diameter"), "浮点型")
            setParamValue(m1, "d38", read("stepped_shaft8_length"), "浮点型")
            '第九阶轴承段
            setParamValue(m1, "d52", read("stepped_shaft9_diameter"), "浮点型")
            setParamValue(m1, "d51", read("stepped_shaft9_length"), "浮点型")
            '键1
            setParamValue(m1, "d184", read("keyway1_length"), "浮点型")
            setParamValue(m1, "d61", read("keyway1_deep"), "浮点型")
            setParamValue(m1, "d62", read("keyway1_diameter"), "浮点型")
            setParamValue(m1, "d234", read("keyway1_length") / 2, "浮点型")

            If read("stepped_shaft0_type") = 1 Then
                setParamValue(m1, "d234", read("keyway1_length") / 2 + read("stepped_shaft0_length"), "浮点型")


            Else
                setParamValue(m1, "d234", read("keyway1_length") / 2, "浮点型")
            End If



            '键2
            setParamValue(m1, "d64", read("stepped_shaft3_diameter") / 2 - read("keyway2_deep"), "浮点型")
            setParamValue(m1, "d84", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d66", read("keyway2_diameter"), "浮点型")
            setParamValue(m1, "d183", read("keyway2_distance"), "浮点型")
            setParamValue(m1, "d229", read("keyway2_distance") + read("keyway2_length") / 2, "浮点型")
            '键3
            setParamValue(m1, "d249", read("stepped_shaft5_length"), "浮点型"）
            setParamValue(m1, "d110", read("stepped_shaft5_diameter") / 2 - read("keyway3_deep"), "浮点型") '/////////////////////////
            setParamValue(m1, "d266", read("keyway3_distance"), "浮点型")
            'setParamValue(m1, "d274", read("keyway3_distance"), "浮点型")
            'setParamValue(m1, "d266", read("stepped_shaft5_length") - read("keyway3_length") - read("keyway3_distance"), "浮点型")
            setParamValue(m1, "d73", read("keyway3_length"), "浮点型")
            setParamValue(m1, "d71", read("keyway3_diameter"), "浮点型")
            setParamValue(m1, "d227", read("keyway3_length") / 2, "浮点型")
            '键4
            setParamValue(m1, "d74", read("keyway4_deep"), "浮点型")
            setParamValue(m1, "d76", read("keyway4_length"), "浮点型")
            setParamValue(m1, "d75", read("keyway4_diameter"), "浮点型")
            'setParamValue(m1, "d77", read("keyway4_distance"), "浮点型")
            setParamValue(m1, "d267", read("keyway4_distance"), "浮点型")
            setParamValue(m1, "d248", read("keyway4_distance") + read("keyway4_length") / 2, "浮点型")
            If read("notch2_type") = 1 Then
                '弹性档圈槽
                setParamValue(m1, "d102", read("stepped_shaft3_length") - read("notch2_distance") + read("notch2_length"), "浮点型")
                setParamValue(m1, "d17", read("notch2_deep"), "浮点型")
                setParamValue(m1, "d16", read("notch2_length"), "浮点型")
            Else
                deleteFeature(m1, 226)
            End If
            '退刀
            If read("notch3_type") = 1 Then
                '切除  弹性挡圈
                setParamValue(m1, "d89", read("notch3_distance"), "浮点型")
                setParamValue(m1, "d37", read("notch3_deep"), "浮点型")
                setParamValue(m1, "d36", read("notch3_length"), "浮点型")
            Else
                deleteFeature(m1, 496)
            End If

            '新增弹性挡圈2月1日
            If read("notch10_type") = 1 Then
                '弹性档圈槽
                setParamValue(m1, "d268", read("notch10_distance"), "浮点型")
                setParamValue(m1, "d273", read("notch10_deep"), "浮点型")
                setParamValue(m1, "d269", read("notch10_length"), "浮点型")
            Else
                deleteFeature(m1, 3218)
            End If

            A型退刀槽(read("stepped_shaft1_diameter"))
            setParamValue(m1, "d189", f1, "浮点型")
            setParamValue(m1, "d188", r1 * 2, "浮点型")
            setParamValue(m1, "d187", t, "浮点型")
            A型退刀槽(read("stepped_shaft3_diameter"))
            setParamValue(m1, "d231", f1, "浮点型")
            setParamValue(m1, "d233", r1 * 2, "浮点型")
            setParamValue(m1, "d232", t, "浮点型")
            A型退刀槽(read("stepped_shaft5_diameter"))
            setParamValue(m1, "d200", f1, "浮点型")
            setParamValue(m1, "d201", r1 * 2, "浮点型")
            setParamValue(m1, "d199", t, "浮点型")
            setParamValue(m1, "d202", r1, "浮点型")
            A型退刀槽(read("stepped_shaft7_diameter"))
            setParamValue(m1, "d207", f1, "浮点型")
            setParamValue(m1, "d208", r1 * 2, "浮点型")
            setParamValue(m1, "d206", t, "浮点型")
            setParamValue(m1, "d235", r1, "浮点型")
            A型退刀槽(read("stepped_shaft8_diameter"))
            setParamValue(m1, "d213", f1, "浮点型")
            setParamValue(m1, "d214", r1 * 2, "浮点型")
            setParamValue(m1, "d212", t, "浮点型")
            setParamValue(m1, "d215", r1 * 2, "浮点型")
            A型退刀槽(read("stepped_shaft9_diameter"))
            setParamValue(m1, "d220", f1, "浮点型")
            setParamValue(m1, "d221", r1 * 2, "浮点型")
            setParamValue(m1, "d219", t, "浮点型")
            setParamValue(m1, "d222", r1 * 2, "浮点型")
            '倒角0
            If read("chamfer_type") = 0 Then
                deleteFeature(m1, 650)
            Else
                setParamValue(m1, "d49", read("chamfer2D1"), "浮点型") '长
                setParamValue(m1, "d48", read("chamfer2D2"), "浮点型") '宽
            End If
        ElseIf read("type") = 3 Then
            If read("stepped_shaft5_diameter") = read("stepped_shaft6_diameter") Then
                deleteFeature(m1, 2903)
            Else
                A型退刀槽(read("stepped_shaft6_diameter"))
                setParamValue(m1, "d215", f1, "浮点型")
                setParamValue(m1, "d218", r1, "浮点型")
                setParamValue(m1, "d216", t, "浮点型")
                setParamValue(m1, "d219", r1, "浮点型")
            End If

            If read("stepped_shaft0_type") = 1 Then
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length") + read("stepped_shaft0_length"), "浮点型")

                setParamValue(m1, "d230", read("stepped_shaft0_diameter"), "浮点型")
                setParamValue(m1, "d229", read("stepped_shaft0_length"), "浮点型")

                setParamValue(m1, "d233", read("stepped_shaft0_length"), "浮点型")


            Else
                deleteFeature(m1, 3114)
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length"), "浮点型")
            End If
            '第一阶 轴伸

            '第二阶  左侧轴承
            setParamValue(m1, "d9", read("stepped_shaft2_diameter"), "浮点型")
            setParamValue(m1, "d8", read("stepped_shaft2_length"), "浮点型")
            '第三阶风扇段
            setParamValue(m1, "d13", read("stepped_shaft3_diameter"), "浮点型")
            setParamValue(m1, "d12", read("stepped_shaft3_length"), "浮点型")
            '第四阶
            setParamValue(m1, "d19", read("stepped_shaft4_diameter"), "浮点型")
            setParamValue(m1, "d18", read("stepped_shaft4_length"), "浮点型")
            '第五阶
            setParamValue(m1, "d23", read("stepped_shaft5_diameter"), "浮点型")
            setParamValue(m1, "d22", read("stepped_shaft5_length"), "浮点型")
            '第六阶
            setParamValue(m1, "d27", read("stepped_shaft6_diameter"), "浮点型")
            setParamValue(m1, "d26", read("stepped_shaft6_length"), "浮点型")
            '第七阶
            setParamValue(m1, "d31", read("stepped_shaft7_diameter"), "浮点型")
            setParamValue(m1, "d30", read("stepped_shaft7_length"), "浮点型")
            '第八阶
            setParamValue(m1, "d39", read("stepped_shaft8_diameter"), "浮点型")
            setParamValue(m1, "d38", read("stepped_shaft8_length"), "浮点型")
            '第九阶
            setParamValue(m1, "d52", read("stepped_shaft9_diameter"), "浮点型")
            setParamValue(m1, "d51", read("stepped_shaft9_length"), "浮点型")
            '键1
            setParamValue(m1, "d202", read("keyway1_length"), "浮点型")
            setParamValue(m1, "d61", read("keyway1_deep"), "浮点型")
            setParamValue(m1, "d62", read("keyway1_diameter"), "浮点型")
            setParamValue(m1, "d132", read("keyway1_length") / 2, "浮点型")
            If read("stepped_shaft0_type") = 1 Then
                setParamValue(m1, "d132", read("keyway1_length") / 2 + read("stepped_shaft0_length"), "浮点型")


            Else
                setParamValue(m1, "d132", read("keyway1_length") / 2, "浮点型")
            End If




            '键2
            setParamValue(m1, "d64", read("stepped_shaft3_diameter") / 2 - read("keyway2_deep"), "浮点型")
            setParamValue(m1, "d84", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d66", read("keyway2_diameter"), "浮点型")
            setParamValue(m1, "d88", read("keyway2_distance"), "浮点型")
            setParamValue(m1, "d134", read("keyway2_distance") + read("keyway2_length") / 2, "浮点型")
            '键3
            setParamValue(m1, "d208", read("stepped_shaft5_length"), "浮点型"）
            setParamValue(m1, "d110", read("stepped_shaft5_diameter") / 2 - read("keyway3_deep"), "浮点型") '/////////////////////////
            setParamValue(m1, "d109", read("keyway3_distance"), "浮点型")
            setParamValue(m1, "d73", read("keyway3_length"), "浮点型")
            setParamValue(m1, "d71", read("keyway3_diameter"), "浮点型")
            setParamValue(m1, "d201", read("keyway3_length") / 2, "浮点型")
            '键4
            setParamValue(m1, "d74", read("keyway4_deep"), "浮点型")
            setParamValue(m1, "d76", read("keyway4_length"), "浮点型")
            setParamValue(m1, "d75", read("keyway4_diameter"), "浮点型")
            ' setParamValue(m1, "d77", read("keyway4_distance"), "浮点型")
            setParamValue(m1, "d221", read("keyway4_distance"), "浮点型") '2.6日更改
            setParamValue(m1, "d136", read("keyway4_distance") + read("keyway4_length") / 2, "浮点型")
            If read("notch2_type") = 1 Then
                '切除  弹性垫圈
                setParamValue(m1, "d102", read("stepped_shaft3_length") - read("notch2_distance") + read("notch2_length"), "浮点型")
                setParamValue(m1, "d17", read("notch2_deep"), "浮点型")
                setParamValue(m1, "d16", read("notch2_length"), "浮点型")
            Else
                deleteFeature(m1, 226)
            End If
            If read("notch3_type") = 1 Then
                '切除
                setParamValue(m1, "d89", read("notch3_distance"), "浮点型")
                setParamValue(m1, "d37", read("notch3_deep"), "浮点型")
                setParamValue(m1, "d36", read("notch3_length"), "浮点型")
            Else
                deleteFeature(m1, 496)
            End If
            '2月1日新增
            If read("notch10_type") = 1 Then
                '切除  弹性垫圈
                setParamValue(m1, "d222", read("notch10_distance"), "浮点型")
                setParamValue(m1, "d226", read("notch10_deep"), "浮点型")
                setParamValue(m1, "d223", read("notch10_length"), "浮点型")
            Else
                deleteFeature(m1, 3046)
            End If
            A型退刀槽(read("stepped_shaft1_diameter"))
            setParamValue(m1, "d138", f1, "浮点型")
            setParamValue(m1, "d141", r1 * 2, "浮点型")
            setParamValue(m1, "d140", t, "浮点型")
            setParamValue(m1, "d142", r1, "浮点型")
            A型退刀槽(read("stepped_shaft2_diameter"))
            setParamValue(m1, "d147", f1, "浮点型")
            setParamValue(m1, "d148", r1 * 2, "浮点型")
            setParamValue(m1, "d146", t, "浮点型")
            setParamValue(m1, "d149", r1, "浮点型")
            A型退刀槽(read("stepped_shaft3_diameter"))
            setParamValue(m1, "d192", f1, "浮点型")
            setParamValue(m1, "d193", r1 * 2, "浮点型")
            setParamValue(m1, "d191", t, "浮点型")
            setParamValue(m1, "d194", r1, "浮点型")
            A型退刀槽(read("stepped_shaft5_diameter"))
            setParamValue(m1, "d160", f1, "浮点型")
            setParamValue(m1, "d161", r1 * 2, "浮点型")
            setParamValue(m1, "d159", t, "浮点型")
            setParamValue(m1, "d162", r1, "浮点型")
            A型退刀槽(read("stepped_shaft7_diameter"))
            setParamValue(m1, "d167", f1, "浮点型")
            setParamValue(m1, "d168", r1 * 2, "浮点型")
            setParamValue(m1, "d166", t, "浮点型")
            A型退刀槽(read("stepped_shaft8_diameter"))
            setParamValue(m1, "d173", f1, "浮点型")
            setParamValue(m1, "d174", r1 * 2, "浮点型")
            setParamValue(m1, "d172", t, "浮点型")
            setParamValue(m1, "d175", r1, "浮点型")
            A型退刀槽(read("stepped_shaft9_diameter"))
            setParamValue(m1, "d178", f1, "浮点型")
            setParamValue(m1, "d180", r1 * 2, "浮点型")
            setParamValue(m1, "d179", t, "浮点型")
            setParamValue(m1, "d182", r1 * 2, "浮点型")
            '倒角
            If read("chamfer_type") = 0 Then
                deleteFeature(m1, 650)
            Else
                setParamValue(m1, "d49", read("chamfer2D1"), "浮点型") '长
                setParamValue(m1, "d48", read("chamfer2D2"), "浮点型") '宽
            End If

        ElseIf read("type") = 5 Then
            If read("stepped_shaft0_type") = 1 Then
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length") + read("stepped_shaft0_length"), "浮点型")

                setParamValue(m1, "d226", read("stepped_shaft0_diameter"), "浮点型")
                setParamValue(m1, "d225", read("stepped_shaft0_length"), "浮点型")


                setParamValue(m1, "d101", read("stepped_shaft0_length"), "浮点型")


            Else
                deleteFeature(m1, 2855)
                setParamValue(m1, "d5", read("stepped_shaft1_diameter"), "浮点型")
                setParamValue(m1, "d4", read("stepped_shaft1_length"), "浮点型")
            End If
            '第二阶  左侧轴承
            setParamValue(m1, "d9", read("stepped_shaft2_diameter"), "浮点型")
            setParamValue(m1, "d8", read("stepped_shaft2_length"), "浮点型")
            '第三阶风扇段
            setParamValue(m1, "d13", read("stepped_shaft3_diameter"), "浮点型")
            setParamValue(m1, "d12", read("stepped_shaft3_length"), "浮点型")
            '第四阶
            setParamValue(m1, "d19", read("stepped_shaft4_diameter"), "浮点型")
            setParamValue(m1, "d18", read("stepped_shaft4_length"), "浮点型")
            '第五阶
            setParamValue(m1, "d23", read("stepped_shaft5_diameter"), "浮点型")
            setParamValue(m1, "d22", read("stepped_shaft5_length"), "浮点型")
            '第六阶
            setParamValue(m1, "d27", read("stepped_shaft6_diameter"), "浮点型")
            setParamValue(m1, "d26", read("stepped_shaft6_length"), "浮点型")
            '第七阶
            setParamValue(m1, "d31", read("stepped_shaft7_diameter"), "浮点型")
            setParamValue(m1, "d30", read("stepped_shaft7_length"), "浮点型")
            '第八阶
            setParamValue(m1, "d39", read("stepped_shaft8_diameter"), "浮点型")
            setParamValue(m1, "d38", read("stepped_shaft8_length"), "浮点型")
            '第九阶
            setParamValue(m1, "d140", read("stepped_shaft9_diameter"), "浮点型")
            setParamValue(m1, "d139", read("stepped_shaft9_length"), "浮点型")
            '第10阶
            setParamValue(m1, "d52", read("stepped_shaft10_diameter"), "浮点型")
            setParamValue(m1, "d51", read("stepped_shaft10_length"), "浮点型")



            '键1
            setParamValue(m1, "d158", read("keyway1_length"), "浮点型")
            setParamValue(m1, "d61", read("keyway1_deep"), "浮点型")
            setParamValue(m1, "d62", read("keyway1_diameter"), "浮点型")


            '键2
            setParamValue(m1, "d64", read("stepped_shaft3_diameter") - read("keyway2_deep"), "浮点型")
            setParamValue(m1, "d84", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d66", read("keyway2_diameter"), "浮点型")
            setParamValue(m1, "d88", read("keyway2_distance"), "浮点型")

            '键3
            setParamValue(m1, "d110", read("stepped_shaft5_diameter") / 2 - read("keyway3_deep"), "浮点型") '/////////////////////////
            setParamValue(m1, "d109", read("keyway3_distance"), "浮点型")
            setParamValue(m1, "d73", read("keyway3_length"), "浮点型")
            setParamValue(m1, "d71", read("keyway3_diameter"), "浮点型")
            '键4
            setParamValue(m1, "d74", read("keyway4_deep"), "浮点型")
            setParamValue(m1, "d76", read("keyway4_length"), "浮点型")
            setParamValue(m1, "d75", read("keyway4_diameter"), "浮点型")
            setParamValue(m1, "d77", read("keyway4_distance"), "浮点型")
            '键5
            setParamValue(m1, "d214", read("keyway5_distance"), "浮点型")
            setParamValue(m1, "d152", read("keyway5_deep"), "浮点型")
            setParamValue(m1, "d149", read("keyway5_length"), "浮点型")
            setParamValue(m1, "d148", read("keyway5_diameter"), "浮点型")

            A型退刀槽(read("stepped_shaft1_diameter"))
            setParamValue(m1, "d161", f1, "浮点型")
            setParamValue(m1, "d163", r1 * 2, "浮点型")
            setParamValue(m1, "d162", t, "浮点型")
            A型退刀槽(read("stepped_shaft2_diameter"))
            setParamValue(m1, "d167", f1, "浮点型")
            setParamValue(m1, "d169", r1 * 2, "浮点型")
            setParamValue(m1, "d168", t, "浮点型")
            setParamValue(m1, "d170", r1, "浮点型")
            A型退刀槽(read("stepped_shaft3_diameter"))
            setParamValue(m1, "d174", f1, "浮点型")
            setParamValue(m1, "d176", r1 * 2, "浮点型")
            setParamValue(m1, "d175", t, "浮点型")
            setParamValue(m1, "d177", r1, "浮点型")
            A型退刀槽(read("stepped_shaft5_diameter"))
            setParamValue(m1, "d181", f1, "浮点型")
            setParamValue(m1, "d183", r1 * 2, "浮点型")
            setParamValue(m1, "d182", t, "浮点型")
            setParamValue(m1, "d184", r1, "浮点型")
            A型退刀槽(read("stepped_shaft7_diameter"))
            setParamValue(m1, "d188", f1, "浮点型")
            setParamValue(m1, "d190", r1 * 2, "浮点型")
            setParamValue(m1, "d189", t, "浮点型")
            setParamValue(m1, "d191", r1, "浮点型")
            A型退刀槽(read("stepped_shaft8_diameter"))
            setParamValue(m1, "d195", f1, "浮点型")
            setParamValue(m1, "d197", r1 * 2, "浮点型")
            setParamValue(m1, "d196", t, "浮点型")
            setParamValue(m1, "d198", r1, "浮点型")
            A型退刀槽(read("stepped_shaft9_diameter"))
            setParamValue(m1, "d202", f1, "浮点型")
            setParamValue(m1, "d204", r1 * 2, "浮点型")
            setParamValue(m1, "d203", t, "浮点型")
            setParamValue(m1, "d205", r1 * 2, "浮点型")
            A型退刀槽(read("stepped_shaft10_diameter"))
            setParamValue(m1, "d209", f1, "浮点型")
            setParamValue(m1, "d211", r1 * 2, "浮点型")
            setParamValue(m1, "d210", t, "浮点型")
            setParamValue(m1, "d212", r1 * 2, "浮点型")

            If read("notch4_type") = 1 Then
                '切除  弹性垫圈
                setParamValue(m1, "d102", read("stepped_shaft3_length") - read("notch4_distance") + read("notch4_length"), "浮点型")
                setParamValue(m1, "d17", read("notch4_deep"), "浮点型")
                setParamValue(m1, "d16", read("notch4_length"), "浮点型")
            Else
                deleteFeature(m1, 226)
            End If
            If read("notch8_type") = 1 Then
                '切除
                setParamValue(m1, "d89", read("notch8_distance"), "浮点型")
                setParamValue(m1, "d37", read("notch8_deep"), "浮点型")
                setParamValue(m1, "d36", read("notch8_length"), "浮点型")
            Else
                deleteFeature(m1, 496)
            End If
            If read("notch10_type") = 1 Then
                '切除
                setParamValue(m1, "d141", read("notch10_distance"), "浮点型")
                setParamValue(m1, "d143", read("notch10_deep"), "浮点型")
                setParamValue(m1, "d142", read("notch10_length"), "浮点型")
            Else
                deleteFeature(m1, 1718)
            End If

        End If


        '  m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        If read("type") = 1 Then
            m2 = activateModel("rotor_shaft", 2)
        ElseIf read("type") = 2 Then
            m2 = activateModel("rotor_shaft2", 2)
        ElseIf read("type") = 3 Then
            m2 = activateModel("rotor_shaft3", 2)
        ElseIf read("type") = 5 Then
            m2 = activateModel("rotor_shaft5", 2)
        End If



        Dim A As Double
        A = read("stepped_shaft1_length") + read("stepped_shaft3_length") + read("stepped_shaft4_length") + read("stepped_shaft5_length") + read("stepped_shaft6_length") + read("stepped_shaft7_length") + read("stepped_shaft8_length") + read("stepped_shaft9_length")
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        'msgbox(Scale_drw(0))
        'msgbox(Scale_drw(1))
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If A <= 500 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        'ElseIf A > 500 And A <= 650 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf A > 650 And A <= 800 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf A > 800 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        'End If


        modelItems = listModelItem(m2, "DTL_NOTE")
        If read("type") = 2 Then
            Dim aaa As IpfcModelItem
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_186")
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_223")
            修改注释2(aaa, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
            '修改注释(modelItems, 39, view2Ds.Item(0).Scale.ToString) '64  'A2
            'change_txt_note_text(modelItems, modelItems.Count - 1, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
        ElseIf read("type") = 3 Then

            修改注释(modelItems, 39, view2Ds.Item(0).Scale.ToString) '65


            Dim aaa As IpfcModelItem

            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_165")
            修改注释2(aaa, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
            'change_txt_note_text(modelItems, modelItems.Count - 1, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
        ElseIf read("type") = 5 Then
            修改注释(modelItems, 39, view2Ds.Item(0).Scale.ToString) '65
            change_txt_note_text(modelItems, modelItems.Count - 1, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
        ElseIf read("type") = 1 Then
            修改注释(modelItems, 30, view2Ds.Item(0).Scale.ToString) '65
            'change_txt_note_text(modelItems, 58, "2-C" + read("hole_location").ToString + "(深" + read("hole_deep").ToString + ")")
        End If


        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub A型退刀槽(diameter#)

        If 10 <= diameter# And diameter < 18 Then
            r1 = 0.6
            t = 0.2
            f1 = 2
        ElseIf 18 <= diameter# And diameter < 80 Then
            r1 = 0.6
            t = 0.3
            f1 = 2.5
        ElseIf 80 <= diameter# Then
            r1 = 1
            t = 0.4
            f1 = 4
        End If
    End Sub
    Public Sub Creo轴套(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)


        If read("type") = 1 Then
            deleteFileChangeModel("prt", "E:\works\creo\shaft_sleeve\shaft_sleeve1.prt", "shaft_sleeve1.prt".Length)
            m1 = activateModel("transition", 1)
        ElseIf read("type") = 2 Then
            deleteFileChangeModel("prt", "E:\works\creo\shaft_sleeve\shaft_sleeve2.prt", "shaft_sleeve2.prt".Length)
            m1 = activateModel("transition", 1)

        ElseIf read("type") = 3 Then

            deleteFileChangeModel("prt", "E:\works\creo\creo_shaft_sleeve\shaft_sleeve3.prt", "shaft_sleeve3".Length)
            m1 = activateModel("transition", 1)

        End If
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If


        If read("type") = 1 Then



            setParamValue(m1, "d10", read("outside_diameter1"), "浮点型")
            setParamValue(m1, "d9", read("thickness1"), "浮点型")


            setParamValue(m1, "d6", read("outside_diameter2"), "浮点型")
            setParamValue(m1, "d5", read("thickness1") + read("thickness2"), "浮点型")



            setParamValue(m1, "d58", read("array_location"), "浮点型")
            setParamValue(m1, "p19", read("array_number"), "浮点型")
            setParamValue(m1, "d11", read("array_diameter"), "浮点型")
            setParamValue(m1, "d55", read("array_depth"), "浮点型")

            setParamValue(m1, "d33", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d35", read("key_wide"), "浮点型")
            setParamValue(m1, "d34", read("key_depth") + read("inside_diameter"), "浮点型")



            If read("shaft_sleeve_type") = 1 Then



                deleteFeature(m1, 739)


            ElseIf read("shaft_sleeve_type") = 0 Then


                setParamValue(m1, "d54", read("outside_diameter3"), "浮点型")
                setParamValue(m1, "d53", read("thickness3"), "浮点型")

            End If


            setParamValue(m1, "d52", read("hole_diameter"), "浮点型")
            setParamValue(m1, "d51", read("hole_distance"), "浮点型")




            setParamValue(m1, "d39", read("location_hole_diameter"), "浮点型")
            setParamValue(m1, "d40", read("location_hole_distance"), "浮点型")
            setParamValue(m1, "d38", read("location_hole_depth"), "浮点型")



        ElseIf read("type") = 2 Then




            setParamValue(m1, "d5", read("outside_diameter"), "浮点型")
            setParamValue(m1, "d4", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d9", read("thickness1"), "浮点型")


            'Trunnion


            setParamValue(m1, "d7", read("Trunnion_diameter_center_of_a_circle"), "浮点型")
            setParamValue(m1, "d6", read("Trunnion_diameter"), "浮点型")
            setParamValue(m1, "d8", read("Trunnion_Fillet"), "浮点型")

            'circular ring


            setParamValue(m1, "d17", read("circular_ring_distance"), "浮点型")
            setParamValue(m1, "d16", read("circular_ring_diameter"), "浮点型")

            setParamValue(m1, "d18", read("circular_ring_Fillet"), "浮点型")
            setParamValue(m1, "d19", read("circular_ring_Fillet"), "浮点型")

        ElseIf read("type") = 3 Then




            setParamValue(m1, "d21", read("outside_diameter"), "浮点型")
            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d9", read("thickness1"), "浮点型")


            'Trunnion


            setParamValue(m1, "d23", read("Trunnion_diameter"), "浮点型")
            setParamValue(m1, "d22", read("thickness2"), "浮点型")



        End If

        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)
        AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")
        m1.Rename(read("Code"), True)
        ' 打包或者另存零件  
        smodel_1 = m1.Descr
        smodel_1.Path = path$
        m1.Backup(smodel_1)
        endApp()
    End Sub
    Public Sub creo轴套_new(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)

        If read("type") = 1 Then
            m1 = openModel("prt", "E:\works\creo\shaft_sleeve\shaft_sleeve1")
            retrieveModel("frm", "E:\works\creo\shaft_sleeve\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\shaft_sleeve\shaft_sleeve1")
            m1 = activateModel("shaft_sleeve1", 1)
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\shaft_sleeve\coupling_piece2")
            retrieveModel("frm", "E:\works\creo\shaft_sleeve\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\shaft_sleeve\coupling_piece2")
            m1 = activateModel("coupling_piece2", 1)
        End If

        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        If read("type") = 1 Then

            setParamValue(m1, "d10", read("outside_diameter1"), "浮点型")
            setParamValue(m1, "d9", read("thickness1"), "浮点型")


            setParamValue(m1, "d6", read("outside_diameter2"), "浮点型")
            setParamValue(m1, "d5", read("thickness2"), "浮点型")



            setParamValue(m1, "d58", read("array_location"), "浮点型")
            setParamValue(m1, "p19", read("array_number"), "浮点型")
            setParamValue(m1, "d11", read("array_diameter"), "浮点型")
            setParamValue(m1, "d55", read("array_depth"), "浮点型")

            setParamValue(m1, "p67", read("array_number"), "浮点型")


            setParamValue(m1, "d33", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d35", read("key_wide"), "浮点型")
            setParamValue(m1, "d34", read("key_depth"), "浮点型")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d11")
        ElseIf read("type") = 2 Then
            setParamValue(m1, "d5", read("outside_diameter1"), "浮点型")
            setParamValue(m1, "d4", read("thickness1"), "浮点型")
            setParamValue(m1, "d7", read("outside_diameter2"), "浮点型")
            setParamValue(m1, "d6", read("thickness2"), "浮点型")
            setParamValue(m1, "d13", read("array_location"), "浮点型")
            setParamValue(m1, "p19", read("array_number"), "浮点型")
            setParamValue(m1, "d14", read("array_diameter"), "浮点型")
            setParamValue(m1, "d9", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d11", read("key_wide"), "浮点型")
            setParamValue(m1, "d10", read("key_depth") + read("inside_diameter"), "浮点型")
            setParamValue(m1, "d22", read("array2_location"), "浮点型")
            setParamValue(m1, "p28", read("array2_number"), "浮点型")
            setParamValue(m1, "d24", read("array2_diameter"), "浮点型")


        End If


        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)


        If read("type") = 1 Then
            m2 = activateModel("shaft_sleeve1", 2)
            修改绘制尺寸值_new2(asmItem_2， read("array_number"))
        ElseIf read("type") = 2 Then
            m2 = activateModel("coupling_piece2", 2)
        End If


        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter1") <= 200 Then
        '    view2Ds.Item(0).Scale = 1 / 1
        '    view2Ds.Item(1).Scale = 1 / 1
        'ElseIf read("outside_diameter1") > 200 And read("outside_diameter1") <= 300 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        '    view2Ds.Item(1).Scale = 1 / 1.5
        'ElseIf read("outside_diameter1") > 300 And read("outside_diameter1") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        '    view2Ds.Item(1).Scale = 1 / 2.5
        'ElseIf read("outside_diameter1") > 400 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        '    view2Ds.Item(1).Scale = 1 / 3.5
        'End If
        Dim aaa As IpfcModelItem

        If read("type") = 1 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_118")
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
        ElseIf read("type") = 2 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_74")
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
        End If

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo励磁机支架_new(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\exciter_rotor_bracket\bracket250")
        retrieveModel("frm", "E:\works\creo\exciter_rotor_bracket\part_a3_sb")
        retrieveModel("drw", "E:\works\creo\exciter_rotor_bracket\bracket250")
        m1 = activateModel("bracket250", 1)
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If


        setParamValue(m1, "d5", read("outside_diameter1"), "浮点型")
        setParamValue(m1, "d4", read("thickness1"), "浮点型") '总长



        setParamValue(m1, "d7", read("outside_diameter2"), "浮点型")
        setParamValue(m1, "d6", read("thickness2"), "浮点型")


        '槽1'前端
        setParamValue(m1, "d15", read("groove1_outside_diameter"), "浮点型")
        setParamValue(m1, "d14", read("groove1_inside_diameter"), "浮点型")
        setParamValue(m1, "d13", read("groove1_deep"), "浮点型")

        '槽2 后端
        setParamValue(m1, "d18", read("groove2_outside_diameter"), "浮点型")
        setParamValue(m1, "d17", read("groove2_inside_diameter"), "浮点型")
        setParamValue(m1, "d16", read("groove2_deep"), "浮点型")


        '轴键槽
        setParamValue(m1, "d9", read("inside_diameter"), "浮点型")
        标准键数据(read("inside_diameter"))
        setParamValue(m1, "d117", read("keyway1_hight"), "浮点型")
        setParamValue(m1, "d10", read("keyway1_wight"), "浮点型")

        '减重
        setParamValue(m1, "p115", read("location_hole_number"), "浮点型")
        setParamValue(m1, "d109", read("location_hole_location"), "浮点型")
        setParamValue(m1, "d111", read("location_hole_diameter"), "浮点型")

        '螺纹孔
        'setParamValue(m1, "d187", read("threaded_hole_location"), "浮点型")
        setParamValue(m1, "d188", read("threaded_hole_diameter"), "浮点型") ' read("threaded_hole_diameter")
        'setParamValue(m1, "d189", read("threaded_hole_angle"), "角度", read("threaded_hole_angle"))
        'setParamValue(m1, "p194", read("threaded_hole_number"), "浮点型")
        setParamValue(m1, "d186", read("threaded_hole_deep"), "浮点型")
        setParamValue(m1, "d199", read("threaded_hole_Y") / 2, "浮点型")
        setParamValue(m1, "d200", read("threaded_hole_X") / 2, "浮点型")

        '压圈 
        标准键数据(read("outside_diameter2"))
        setParamValue(m1, "d99", read("outside_diameter2") / 2 - read("keyway2_deep"), "浮点型")
        setParamValue(m1, "d103", read("keyway2_length"), "浮点型")
        setParamValue(m1, "d101", read("keyway2_wight"), "浮点型")
        setParamValue(m1, "d196", read("keyway2_distance"), "浮点型")
        setParamValue(m1, "d96", read("ring_slot_distance"), "浮点型")
        setParamValue(m1, "d97", read("ring_slot_thickness"), "浮点型")

        '键槽  定位键
        Threading.Thread.Sleep(2000)
        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)

        m2 = activateModel("bracket250", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter1") <= 450 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read("outside_diameter1") > 450 And read("outside_diameter1") <= 600 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        '    view2Ds.Item(1).Scale = 1 / 2.5
        'ElseIf read("outside_diameter1") > 600 And read("outside_diameter1") <= 750 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read("outside_diameter1") > 750 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        '    view2Ds.Item(1).Scale = 1 / 3.5
        'End If

        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))
        RegenerateModel(m2)
        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) 'Threading.Thread.Sleep(1500)
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()

        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub creo励磁机支架(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)

        If read("type") = 1 Then
            deleteFileChangeModel("prt", "E:\works\creo\exciter_rotor_bracket\bracket2.prt", "bracket2.prt".Length)
            m1 = activateModel("rotor_lamination1", 1)
        ElseIf read("type") = 2 Then
            deleteFileChangeModel("prt", "E:\works\creo\exciter_rotor_bracket\bracket3.prt", "bracket3.prt".Length)
            m1 = activateModel("rotor_lamination2", 1)

        End If

        AC.Session.RunMacro("mapkey 1 ~ Command `ProCmdEnvShadedEdges` ;")

        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If

        setParamValue(m1, "d5", read("outside_diameter1"), "浮点型")
        setParamValue(m1, "d4", read("thickness1"), "浮点型") '总长



        setParamValue(m1, "d7", read("outside_diameter2"), "浮点型")
        setParamValue(m1, "d6", read("thickness2"), "浮点型")

        If read("type") = 1 Then


            '键槽
            setParamValue(m1, "d9", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d117", read("Keyway_length"), "浮点型")
            setParamValue(m1, "d10", read("Keyway_width"), "浮点型")

            '槽1'前端
            setParamValue(m1, "d15", read("groove1_outside_diameter"), "浮点型")
            setParamValue(m1, "d14", read("groove1_inside_diameter"), "浮点型")
            setParamValue(m1, "d13", read("groove1_deep"), "浮点型")

            '槽2 后端
            setParamValue(m1, "d18", read("groove2_outside_diameter"), "浮点型")
            setParamValue(m1, "d17", read("groove2_inside_diameter"), "浮点型")
            setParamValue(m1, "d16", read("groove2_deep"), "浮点型")

            '环槽1
            setParamValue(m1, "d19", read("ring_slot_distance"), "浮点型")
            setParamValue(m1, "d21", read("ring_slot_diameter"), "浮点型")
            setParamValue(m1, "d20", read("ring_slot_length"), "浮点型")



            If read("hole_type") = 1 Then
                deleteFeature(m1, 629)
                setParamValue(m1, "d118", read("hole_angle"), "角度", read("hole_angle"))
                setParamValue(m1, "p73", read("hole_number"), "浮点型")


            ElseIf read("hole_type") = 2 Then
                deleteFeature(m1, 1202)
                setParamValue(m1, "d110", read("hole_angle"), "角度", read("hole_angle"))
                setParamValue(m1, "p115", read("hole_number"), "浮点型")
                setParamValue(m1, "d109", read("hole_location") / 2, "浮点型")
                setParamValue(m1, "d111", read("hole_diameter"), "浮点型")
            End If

            '定位
            setParamValue(m1, "p83", read("location_hole_number"), "浮点型")
            setParamValue(m1, "d76", read("location_hole_location") / 2, "浮点型")
            setParamValue(m1, "d77", read("location_hole_diameter"), "浮点型")
            setParamValue(m1, "d75", read("location_hole_deep"), "浮点型")


            '螺纹孔

            setParamValue(m1, "d86", read("threaded_hole_location") / 2, "浮点型")
            setParamValue(m1, "d89", read("threaded_hole_diameter"), "浮点型")
            setParamValue(m1, "d85", read("threaded_hole_deep"), "浮点型")
            setParamValue(m1, "d87", read("threaded_hole_angle"), "角度", read("threaded_hole_angle"))
            setParamValue(m1, "d88", read("threaded_hole_angle"), "角度", read("threaded_hole_angle"))


            '切除

            setParamValue(m1, "d98", read("excision_deep"), "浮点型")
            setParamValue(m1, "d96", read("excision_distance"), "浮点型")
            setParamValue(m1, "d97", read("excision_length"), "浮点型")

            '键槽
            setParamValue(m1, "d99", read("outside_diameter2") - read("keyway2_deep"), "浮点型")
            setParamValue(m1, "d102", read("keyway2_distance"), "浮点型")
            setParamValue(m1, "d103", read("keyway2_length"), "浮点型")
            setParamValue(m1, "d101", read("keyway2_diameter"), "浮点型")

            '倒角
            setParamValue(m1, "d105", read("chamfer"), "浮点型")
            setParamValue(m1, "d104", read("chamfer"), "浮点型")

            '前端切除深度
            setParamValue(m1, "d106", read("deep1"), "浮点型")
            '后端切除深度
            setParamValue(m1, "d107", read("deep2"), "浮点型")




        ElseIf read("type") = 2 Then


            '切除

            setParamValue(m1, "d9", read("excision_deep"), "浮点型")
            setParamValue(m1, "d11", read("excision_distance"), "浮点型")
            setParamValue(m1, "d10", read("excision_length"), "浮点型")

            '键槽
            setParamValue(m1, "d14", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d16", read("Keyway_width"), "浮点型")
            setParamValue(m1, "d109", read("Keyway_length"), "浮点型")


            '槽2 后端
            setParamValue(m1, "d23", read("groove2_outside_diameter"), "浮点型")
            setParamValue(m1, "d22", read("groove2_inside_diameter"), "浮点型")
            setParamValue(m1, "d21", read("groove2_deep"), "浮点型")
            '减重孔
            setParamValue(m1, "d29", read("hole_angle"), "角度", read("hole_angle"))
            setParamValue(m1, "d33", read("hole_array_angle"), "角度", read("hole_array_angle"))
            setParamValue(m1, "p36", read("hole_number") / 2, "浮点型")
            setParamValue(m1, "d25", read("hole_location") / 2, "浮点型")
            setParamValue(m1, "d30", read("hole_diameter"), "浮点型")

            '螺纹孔

            setParamValue(m1, "d52", read("threaded_hole_location") / 2, "浮点型")
            setParamValue(m1, "d53", read("threaded_hole_diameter"), "浮点型")
            setParamValue(m1, "d50", read("threaded_hole_deep"), "浮点型")
            setParamValue(m1, "d51", read("threaded_hole_angle"), "角度", read("threaded_hole_angle"))


            '定位
            setParamValue(m1, "p73", read("location_hole_number") / 2, "浮点型")
            setParamValue(m1, "d71", read("location_hole_location") / 2, "浮点型")
            setParamValue(m1, "d73", read("location_hole_diameter"), "浮点型")
            setParamValue(m1, "d72", read("location_angle"), "角度", read("location_angle"))
            setParamValue(m1, "d76", read("location_array_angle"), "角度", read("location_array_angle"))


            '键槽
            setParamValue(m1, "d90", read("outside_diameter2") - read("keyway_deep"), "浮点型")
            setParamValue(m1, "d93", read("keyway_distance"), "浮点型")
            setParamValue(m1, "d94", read("keyway_length"), "浮点型")
            setParamValue(m1, "d92", read("keyway_diameter"), "浮点型")


            '倒角
            setParamValue(m1, "d103", read("chamfer"), "浮点型")
            '圆角
            setParamValue(m1, "d107", read("filleted"), "浮点型")

            '环槽1
            setParamValue(m1, "d104", read("ring_slot_distance"), "浮点型")
            setParamValue(m1, "d106", read("ring_slot_diameter"), "浮点型")
            setParamValue(m1, "d105", read("ring_slot_length"), "浮点型")




        End If





        AC.Session.CurrentWindow.Activate()
        RegenerateModel(m1)
        AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")
        ExportJpg(path, imageName)

        m1.Rename(read("Code"), True)
        ' 打包或者另存零件  
        smodel_1 = m1.Descr
        smodel_1.Path = path$
        m1.Backup(smodel_1)

        endApp()


    End Sub
    Public Sub creo励磁机定子(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)

        If read("type") = 1 Then
            If read("groove_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\exciter_stator\exciter_stator2")
                retrieveModel("frm", "E:\works\creo\exciter_stator\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\exciter_stator\exciter_stator2")
                m1 = activateModel("exciter_stator2", 1)

            ElseIf read("groove_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\exciter_stator\exciter_stator2_2")
                retrieveModel("frm", "E:\works\creo\exciter_stator\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\exciter_stator\exciter_stator2_2")
                m1 = activateModel("exciter_stator2_2", 1)

            End If
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\exciter_stator\exciter_stator1")
            retrieveModel("frm", "E:\works\creo\exciter_stator\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\exciter_stator\exciter_stator1")
            m1 = activateModel("exciter_stator1", 1)

        End If


        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")


        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        partValue(m1)
        setParamValue(m1, "MASS", read("mass"), "浮点型")
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        m1.CommonName = read("NAME")
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If


        If read("type") = 1 Then


            '螺纹孔

            setParamValue(m1, "d70", read("threaded_hole_location"), "浮点型")
            setParamValue(m1, "d72", read("threaded_hole_diameter"), "浮点型")
            setParamValue(m1, "p76", read("threaded_hole_number"), "浮点型")
            setParamValue(m1, "d71", read("threaded_hole_angle"), "角度", read("threaded_hole_angle"))


            'Gap
            If read("Gap_type") = 1 Then
                setParamValue(m1, "d108", read("Gap_lenght"), "浮点型")
                setParamValue(m1, "d107", read("Gap_width"), "浮点型")

            Else
                deleteFeature(m1, 2922)



            End If







            If read("groove_type") = 1 Then

                setParamValue(m1, "p90", read("groove_number"), "浮点型")


                setParamValue(m1, "d86", read("groove_distance"), "浮点型")
                setParamValue(m1, "d81", read("groove_lenght2"), "浮点型")
                setParamValue(m1, "d80", read("groove_lenght1"), "浮点型")

                setParamValue(m1, "d82", read("groove_lenght3"), "浮点型")
                setParamValue(m1, "d85", read("groove_lenght4"), "浮点型")
                setParamValue(m1, "d83", read("groove_width1"), "浮点型")
                setParamValue(m1, "d84", read("groove_width2"), "浮点型")
                setParamValue(m1, "d79", 360 / read("groove_number"), "角度", 360 / read("groove_number") / 2)


            ElseIf read("groove_type") = 2 Then

                setParamValue(m1, "p105", read("groove_number"), "浮点型")

                setParamValue(m1, "d99", 360 / read("groove_number"), "角度", 360 / read("groove_number") / 2)
                setParamValue(m1, "d93", read("groove_distance"), "浮点型")
                setParamValue(m1, "d94", read("groove_lenght1"), "浮点型")
                setParamValue(m1, "d95", read("groove_lenght2"), "浮点型")
                setParamValue(m1, "d96", read("groove_lenght3"), "浮点型")
                setParamValue(m1, "d98", read("groove_lenght4"), "浮点型")
                setParamValue(m1, "d97", read("groove_width1"), "浮点型")
                setParamValue(m1, "d100", read("groove_location"), "浮点型")
                setParamValue(m1, "d101", read("groove_arc"), "浮点型")

            End If




            'tab1
            setParamValue(m1, "d59", read("tab_diameter"), "浮点型")
            setParamValue(m1, "d57", read("tab_location") / 2, "浮点型")
            setParamValue(m1, "d58", read("tab_angle"), "角度", read("tab_angle"))
            'setParamValue(m1, "d127", read("tab_number"), "浮点型")
            setParamValue(m1, "d127", read("tab_number"), "浮点型")
            'tab2
            setParamValue(m1, "d65", read("tab2_lenght1"), "浮点型")
            setParamValue(m1, "d64", read("tab2_lenght2"), "浮点型")
            setParamValue(m1, "d66", read("tab2_width"), "浮点型")
            setParamValue(m1, "d63", read("tab2_angle"), "角度", read("tab2_angle"))


        ElseIf read("type") = 2 Then

            setParamValue(m1, "p17", read("groove_number"), "浮点型")

            setParamValue(m1, "d13", 360 / read("groove_number"), "角度", 360 / read("groove_number") / 2)
            setParamValue(m1, "d11", read("groove_distance"), "浮点型")
            setParamValue(m1, "d9", read("groove_distance2"), "浮点型")
            setParamValue(m1, "d10", read("groove_arc") / 2, "浮点型")
            setParamValue(m1, "d12", read("groove_arc2") / 2, "浮点型")


            'Gap


            If read("Gap_type") = 1 Then
                setParamValue(m1, "d21", read("Gap_lenght"), "浮点型")
                setParamValue(m1, "d20", read("Gap_width"), "浮点型")



                'setParamValue(m1, "d37", 360 / read("groove_number"), "角度", 360 / read("groove_number") )






            Else
                deleteFeature(m1, 808)


            End If

            '切除

            setParamValue(m1, "d26", read("excision_diameter"), "浮点型")
            setParamValue(m1, "d24", read("excision_location") / 2, "浮点型")
            setParamValue(m1, "d25", read("excision_angle"), "角度", read("excision_angle"))


            'transversely
            setParamValue(m1, "d29", read("transversely_distance"), "浮点型")
            setParamValue(m1, "d28", read("transversely_lenght"), "浮点型")
            setParamValue(m1, "d30", read("transversely_width"), "浮点型")
            setParamValue(m1, "d31", read("transversely_fillet"), "浮点型")





        End If

        setParamValue(m1, "d5", read("outside_diameter1"), "浮点型")
        setParamValue(m1, "d6", read("inside_diameter"), "浮点型")
        setParamValue(m1, "d4", read("thickness"), "浮点型")


        asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d72")
        asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d59")



        'Dim_pre1 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d59")
        'Dim_pre2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d72")
        'Dim_pre3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d72")
        m1.CommonName = read("NAME")
        RegenerateModel(m1)
        ExportJpg(path, imageName)

        If read("type") = 1 Then
            If read("groove_type") = 1 Then

                m2 = activateModel("exciter_stator2", 2)

            ElseIf read("groove_type") = 2 Then

                m2 = activateModel("exciter_stator2_2", 2)

            End If



        ElseIf read("type") = 2 Then
            m2 = activateModel("exciter_stator1", 2)

        End If

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outside_diameter1") <= 450 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("outside_diameter1") > 450 And read("outside_diameter1") <= 600 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        'ElseIf read("outside_diameter1") > 600 And read("outside_diameter1") <= 750 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("outside_diameter1") > 750 Then
        '    view2Ds.Item(0).Scale = 1 / 3.5
        'End If


        If read("type") = 1 Then
            修改绘制尺寸值_new(asmItem_2， read("tab_number"))
            修改绘制尺寸值_new(asmItem_3， read("threaded_hole_number"))

            modelItems = listModelItem(m2, "DTL_NOTE")

            If read("groove_type") = 1 Then
                change_txt_note_text(modelItems, 3, read("groove_number").ToString + "槽均布")
                If read("Gap_type") = 1 Then
                    修改注释(modelItems, 38, view2Ds.Item(0).Scale.ToString)
                Else
                    修改注释(modelItems, 37, view2Ds.Item(0).Scale.ToString)

                End If




            Else


                change_txt_note_text(modelItems, 3, read("groove_number").ToString + "槽均布")
                If read("Gap_type") = 1 Then
                    修改注释(modelItems, 38, view2Ds.Item(0).Scale.ToString)
                Else
                    修改注释(modelItems, 37, view2Ds.Item(0).Scale.ToString)

                End If

            End If

        End If

        RegenerateModel(m2)
        '修改注释(modelItems, 30, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))
        modelItems = listModelItem(m2, "DTL_NOTE")
        note_Item_1 = modelItems.Item(modelItems.Count - 1)
        修改注释字体大小(modelItems, modelItems.Count - 1, 2)
        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)



        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub creo励磁机转子冲片(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)



        If read("type") = 1 Then
            m1 = openModel("prt", "E:\works\creo\exciter_rotor\exciter_rotor")
            retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\exciter_rotor\exciter_rotor")
            m1 = activateModel("exciter_rotor", 1)
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\exciter_rotor\exciter_rotor_2")
            retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\exciter_rotor\exciter_rotor_2")
            m1 = activateModel("exciter_rotor_2", 1)
        End If
        'modelItems = listModelItem_有弹窗(m1, "DTL_NOTE")
        partValue(m1)
        setParamValue(m1, "MASS", read("mass"), "浮点型")
        ' If read("NAME") <> "" Then
        ' setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        '  End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If






        If read("type") = 1 Then

            setParamValue(m1, "d5", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d114", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")

            '螺栓孔


            setParamValue(m1, "d171", read("bolt_hole1_angle"), "角度", read("bolt_hole1_angle"))
            setParamValue(m1, "d169", read("bolt_hole1_location"), "浮点型")
            setParamValue(m1, "d170", read("bolt_hole1_diameter"), "浮点型")
            setParamValue(m1, "d172", read("bolt_hole1_angle"), "角度", read("bolt_hole1_angle"))





            '螺纹孔2
            If read("bolt_hole2_type") = 1 Then


                setParamValue(m1, "d26", read("bolt_hole2_location"), "浮点型")
                setParamValue(m1, "d27", read("bolt_hole2_diameter"), "浮点型")
                setParamValue(m1, "p118", read("bolt_hole2_number"), "浮点型")

            ElseIf read("bolt_hole2_type") = 0 Then

                deleteFeature(m1, 6218)
            End If

            '通风孔

            If read("ventilate_hole_type") = 1 Then

                setParamValue(m1, "d121", read("ventilate_hole_angle"), "角度", read("ventilate_hole_angle")) '离Y轴偏移角度
                setParamValue(m1, "d126", read("ventilate_hole_array_angle"), "角度", read("ventilate_hole_array_angle"))
                setParamValue(m1, "d120", read("ventilate_hole_location"), "浮点型")
                setParamValue(m1, "d41", read("ventilate_hole_diameter"), "浮点型")
                setParamValue(m1, "p129", read("ventilate_hole_number"), "浮点型")



            ElseIf read("ventilate_hole_type") = 0 Then

                deleteFeature(m1, 6300)

            End If



            '旋转整流模块安装孔

            If read("lightening_hole_type") = 1 Then



                setParamValue(m1, "d78", read("lightening_hole_diameter"), "浮点型")
                setParamValue(m1, "d272", read("lightening_hole_Y") / 2, "浮点型")
                setParamValue(m1, "d273", read("lightening_hole_X") / 2, "浮点型")


                'setParamValue(m1, "d171", read("lightening_hole_angle"), "角度", read("lightening_hole_angle")) '离Y轴偏移距离
                'setParamValue(m1, "d169", read("lightening_hole_location"), "浮点型")
                'setParamValue(m1, "d170", read("lightening_hole_diameter"), "浮点型")
                ''setParamValue(m1, "p175", read("lightening_hole_number") / 2, "浮点型")

                'setParamValue(m1, "d172", read("lightening_hole_angle"), "角度", read("lightening_hole_angle"))
                'If read("lightening_hole_number") / 2 = 1 Then
                '    setParamValue(m1, "d172", 0, "角度", 0)
                'Else
                '    setParamValue(m1, "d172", read("lightening_hole_array_angle"), "角度", read("lightening_hole_array_angle") )
                'End If
            ElseIf read("lightening_hole_type") = 0 Then

                deleteFeature(m1, 6642)

            End If


            '''msgbox(1)


            标准键数据(read("inside_diameter"))
            setParamValue(m1, "d214", read("keyway_hight") + read("inside_diameter") / 2, "浮点型")
            setParamValue(m1, "d215", read("keyway_hight") + read("inside_diameter") / 2 + 3, "浮点型")
            setParamValue(m1, "d213", read("keyway_wight"), "浮点型")

            '顶槽

            setParamValue(m1, "d217", read("sl_diameter"), "浮点型")  '3.48
            setParamValue(m1, "d222", read("sl_wide"), "浮点型")    '3
            setParamValue(m1, "d270", read("sl_high_angle"), "浮点型", (read("sl_high_angle")))    '120
            setParamValue(m1, "d225", read("sl_y_high"), "浮点型") '总长      16.25
            setParamValue(m1, "d268", read("sl_wide2"), "浮点型")     '6.66
            setParamValue(m1, "d269", read("sl_high"), "浮点型")     '1
            'setParamValue(m1, "d218", read("sl_filleted"), "浮点型")   '0.75
            'setParamValue(m1, "d216", read("sl_angle"), "角度", read("sl_angle"))
            setParamValue(m1, "p266", read("sl_number"), "浮点型")

        ElseIf read("type") = 2 Then



            '顶槽
            setParamValue(m1, "d217", read("sl_diameter"), "浮点型")  '3.48
            setParamValue(m1, "d222", read("sl_wide"), "浮点型")    '3
            setParamValue(m1, "d271", read("sl_high_angle"), "浮点型", (read("sl_high_angle")))
            setParamValue(m1, "d225", read("sl_y_high"), "浮点型") '总长      16.25
            setParamValue(m1, "d269", read("sl_wide2"), "浮点型")     '6.66
            setParamValue(m1, "d270", read("sl_high"), "浮点型")     '1
            'setParamValue(m1, "d216", read("sl_angle"), "角度", read("sl_angle"))
            setParamValue(m1, "p266", read("sl_number"), "浮点型")



            Threading.Thread.Sleep(1000)
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d114", read("inside_diameter"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")

            setParamValue(m1, "d272", read("keyway_hight"), "浮点型")
            setParamValue(m1, "d273", read("keyway_hight") + 2, "浮点型")
            setParamValue(m1, "d213", read("keyway_wight"), "浮点型")

        End If


        ''msgbox(2)
        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)




        If read("type") = 1 Then

            m2 = activateModel("exciter_rotor", 2)
        ElseIf read("type") = 2 Then

            m2 = activateModel("exciter_rotor_2", 2)
        End If


        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outer_diameter") <= 200 Then
        '    view2Ds.Item(0).Scale = 1 / 1
        'ElseIf read("outer_diameter") > 200 And read("outer_diameter") <= 300 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        'ElseIf read("outer_diameter") > 300 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'End If


        modelItems = listModelItem(m2, "DTL_NOTE")

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))
        If read("type") = 1 Then
            change_txt_note_text(modelItems, 0, read("sl_number").ToString + "槽均布")
            修改注释(modelItems, 35, view2Ds.Item(0).Scale.ToString)
            修改绘制尺寸值_new(listModelItem_1(m1, "DIMENSION", "d27"), read("bolt_hole2_number"))
            If read("ventilate_hole_type") = 1 Then
                修改绘制尺寸值_new(listModelItem_1(m1, "DIMENSION", "d41"), 4 * read("ventilate_hole_number"))
                ''msgbox(1)
            End If
        ElseIf read("type") = 2 Then
            change_txt_note_text(modelItems, 0, read("sl_number").ToString + "槽均布")
            修改注释(modelItems, 35, view2Ds.Item(0).Scale.ToString)
        End If
        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()

        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If


    End Sub
    Public Sub coil_support(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase$, ID#)
        If read("type2") = 1 Then
            m1 = openModel("prt", "E:\works\creo\coil_support\1\ly_coil_support")
            retrieveModel("frm", "E:\works\creo\coil_support\1\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\coil_support\1\ly_coil_support")
        Else
            m1 = openModel("prt", "E:\works\creo\coil_support\2\ly_coil_support")
            retrieveModel("frm", "E:\works\creo\coil_support\2\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\coil_support\2\ly_coil_support")
        End If
        m1 = activateModel("ly_coil_support", 1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If
        If read("type") = 1 Then
            setParamValue(m1, "d23", read("cut_circle_width"), "浮点型") '宽度
            setParamValue(m1, "d24", read("cut_circle_length"), "浮点型") '长度  
        ElseIf read("type") = 0 Then
            deleteFeature(m1, 536)
        End If
        setParamValue(m1, "d4", read("high"), "浮点型") ' 零件厚度
        setParamValue(m1, "d5", read("width"), "浮点型") '宽度
        setParamValue(m1, "d6", read("length"), "浮点型") '长度
        '斜角切削
        setParamValue(m1, "d10", read("ob_width"), "浮点型") '斜角宽度2
        setParamValue(m1, "d9", read("ob_length"), "浮点型") '斜角长度2
        '‘’'msgbox(0)
        '孔
        If read("type2") = 1 Then
            setParamValue(m1, "d28", read("hole_width"), "浮点型") '宽度
            setParamValue(m1, "d30", read("hole_diameter"), "浮点型") '孔径
        Else
            setParamValue(m1, "d35", read("hole_diameter"), "浮点型") '孔径
        End If

        setParamValue(m1, "d29", read("hole_length"), "浮点型") '长度
        '‘’'msgbox(0)
        '中间切削
        setParamValue(m1, "d20", read("cut_circle_diameter"), "浮点型") '孔径

        '‘’'msgbox(0)
        '切削
        setParamValue(m1, "d17", read("cut_width"), "浮点型") '宽度4
        setParamValue(m1, "d13", read("cut_high"), "浮点型") '切削厚度
        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)
        ' m1.Regenerate(Nothing)
        m2 = activateModel("ly_coil_support", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        modelItems = listModelItem(m2, "DTL_NOTE")
        ' view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        修改注释(modelItems, 21, (Val(Scale_drw(0)) / Val(Scale_drw(1))).ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 250})
        添加图幅注释(m2, read("T_MOTOR"))



        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub



    Public Sub Phase_insulation(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        If read("type") = 0 Then
            m1 = openModel("prt", "E:\works\creo\phase_insulation\phase_insulation")
            retrieveModel("frm", "E:\works\creo\phase_insulation\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\phase_insulation\phase_insulation")
            m1 = activateModel("phase_insulation", 1)
            partValue(m1)
            setParamValue(m1, "d6", read("length"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")
            setParamValue(m1, "d5", read("Circle_diameter"), "浮点型")
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")

        Else
            m1 = openModel("prt", "E:\works\creo\insulation\support_block_insulation")
            retrieveModel("frm", "E:\works\creo\insulation\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\insulation\support_block_insulation")
            m1 = activateModel("support_block_insulation", 1)
            partValue(m1)
            setParamValue(m1, "d6", read("length"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")
            setParamValue(m1, "d5", read("width"), "浮点型")
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")

        End If
        m1.Regenerate(Nothing)
        If read("type") = 0 Then
            m2 = activateModel("phase_insulation", 2)
        Else
            m2 = activateModel("support_block_insulation", 2)

        End If

        drawing = CType(m2, IpfcDrawing)
        Dim Scale_drw As String()
        Dim aaa As IpfcModelItem
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        modelItems = listModelItem(m2, "DTL_NOTE")
        '修改注释(modelItems, 30, 1.ToString)
        If read("type") = 0 Then
            修改注释(modelItems, 21, (Val(Scale_drw(0)) / Val(Scale_drw(1))).ToString)
        Else
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_77")
            修改注释_name(aaa, Scale_drw(0) / Scale_drw(1))
        End If






        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 250})
        添加图幅注释(m2, read("T_MOTOR"))
        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub 水冷铆条(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)



        openModel("prt", "E:\works\creo\article_riveting\article_riveting")
        m1 = activateModel("article_riveting", 1)

        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If







        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m1.CommonName = read("NAME")

        smodel = m1.Descr
        smodel.Path = path

        m1.Backup(smodel)
        endApp()




    End Sub
    Public Sub creo撑块(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)

        m1 = openModel("prt", "E:\works\creo\support_block\support_block1")
        retrieveModel("frm", "E:\works\creo\support_block\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\support_block\support_block1")
        m1 = activateModel("support_block1", 1)

        partValue(m1)

        'm1.CommonName = read("NAME")
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        'If read("PART_NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("PART_NAME"), "字符串")
        'End If


        If read("type") = 1 Then



            setParamValue(m1, "d12", read("support_block_length"), "浮点型")
            setParamValue(m1, "d13", read("support_block_width"), "浮点型")

            setParamValue(m1, "d11", read("base_length"), "浮点型")
            setParamValue(m1, "d16", read("broadside_length"), "浮点型")
            setParamValue(m1, "d10", read("thickness"), "浮点型")


            setParamValue(m1, "d44", read("hole_distance"), "浮点型")





            'setParamValue(m1, "d27", read("arc1") / 2, "浮点型")
            'setParamValue(m1, "d28", read("arc2") / 2, "浮点型")



            If read("hole_type") = 0 Then



                'deleteFeature(m1, 292)

                setParamValue(m1, "d35", read("arc_hole_diameter"), "浮点型")
                setParamValue(m1, "d34", read("arc_hole_thickness"), "浮点型")

            ElseIf read("hole_type") = 1 Then

                setParamValue(m1, "d35", read("arc_hole_diameter"), "浮点型")
                setParamValue(m1, "d34", read("arc_hole_thickness"), "浮点型")

                setParamValue(m1, "d39", read("rectangle_hole_diameter"), "浮点型")
                setParamValue(m1, "d36", read("rectangle_hole_thickness"), "浮点型")

            End If





        ElseIf read("type") = 2 Then




            setParamValue(m1, "d10", read("support_block_length"), "浮点型")
            'setParamValue(m1, "d13", read("support_block_width"), "浮点型")

            setParamValue(m1, "d4", read("thickness"), "浮点型")

            setParamValue(m1, "d5", read("Circle_diameter"), "浮点型")
            setParamValue(m1, "d9", read("base_length"), "浮点型")
            setParamValue(m1, "d11", read("broadside_length"), "浮点型")
            setParamValue(m1, "d14", read("broadside_distance"), "浮点型")


            setParamValue(m1, "d6", read("angle1"), "角度"， read("angle1"))
            setParamValue(m1, "d8", read("fillet"), "浮点型")





            setParamValue(m1, "d16", read("arc1"), "浮点型")
            setParamValue(m1, "d17", read("arc2"), "浮点型")



            If read("hole_type") = 0 Then



                deleteFeature(m1, 198)

                setParamValue(m1, "d26", read("arc_hole_diameter"), "浮点型")
                setParamValue(m1, "d25", read("arc_hole_thickness"), "浮点型")
                setParamValue(m1, "d27", read("top_surface_distance"), "浮点型")


            ElseIf read("hole_type") = 1 Then

                setParamValue(m1, "d26", read("arc_hole_diameter"), "浮点型")
                setParamValue(m1, "d25", read("arc_hole_thickness"), "浮点型")
                setParamValue(m1, "d27", read("top_surface_distance"), "浮点型")
                setParamValue(m1, "d23", read("top_surface_distance"), "浮点型")
                setParamValue(m1, "d24", read("rectangle_hole_diameter"), "浮点型")
                setParamValue(m1, "d22", read("rectangle_hole_thickness"), "浮点型")

            End If




        End If

        m1.Regenerate(Nothing)
        m2 = activateModel("support_block1", 2)
        Dim aaa As IpfcModelItem
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        modelItems = listModelItem(m2, "DTL_NOTE")
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_181")


        修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
        '修改注释_name(aaa, view2Ds.Item(1).Scale.ToString)
        '修改注释(modelItems, 30, 1.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 250})
        添加图幅注释(m2, read("T_MOTOR"))

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If

        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub creo撑块螺杆(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)


        m1 = openModel("prt", "E:\works\creo\block_the_screw\block_the_screw")
        retrieveModel("frm", "E:\works\creo\block_the_screw\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\block_the_screw\block_the_screw")
        m1 = activateModel("block_the_screw", 1)

        partValue(m1)
        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If
        setParamValue(m1, "d5", read("diameter1"), "浮点型")
        setParamValue(m1, "d4", read("width1"), "浮点型")

        If read("type") = 1 Then

            deleteFeature(m1, 81)
            setParamValue(m1, "d17", read("chamfer1"), "浮点型")
            setParamValue(m1, "d18", read("chamfer1"), "浮点型")
        ElseIf read("type") = 2 Then
            'deleteFeature(m1, 309)
            setParamValue(m1, "d17", read("chamfer1"), "浮点型")

            setParamValue(m1, "d7", read("diameter2"), "浮点型")
            setParamValue(m1, "d6", read("width2"), "浮点型")


            setParamValue(m1, "d10", read("Long_rectangle"), "浮点型")
            setParamValue(m1, "d9", read("rectangular_wide"), "浮点型")
            setParamValue(m1, "d8", read("width3"), "浮点型")

            '倒角
            setParamValue(m1, "d11", read("chamfer2"), "浮点型")
            setParamValue(m1, "d12", read("chamfer2"), "浮点型")
            setParamValue(m1, "d13", read("chamfer2"), "浮点型")
            setParamValue(m1, "d14", read("chamfer2"), "浮点型")


            setParamValue(m1, "d16", read("diameter4"), "浮点型")
            setParamValue(m1, "d15", read("width4"), "浮点型")


        End If

        m1.Regenerate(Nothing)
        ExportJpg(path, imageName)

        m2 = activateModel("block_the_screw", 2)

        drawing = CType(m2, IpfcDrawing)
        Dim REQUIREMENT As String()


        Dim aaa As IpfcModelItem
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        modelItems = listModelItem(m2, "DTL_NOTE")
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_101")


        修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))










        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 250})
        添加图幅注释(m2, read("T_MOTOR"))




        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()


        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If


    End Sub
    Public Sub creo风扇(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        Dim path1 As String
        path1 = path + "\\parts"
        If read("type") = 1 Then
            m1 = openModel("prt", "E:\works\creo\fan\fan180")
            retrieveModel("frm", "E:\works\creo\fan\part_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\fan180")
            m1 = activateModel("fan180", 1)
        ElseIf read("type") = 2 Then
            m1 = openModel("prt", "E:\works\creo\fan\fan200")
            retrieveModel("frm", "E:\works\creo\fan\part_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\fan200")
            'E:\works\creo\fan\asm\part_a4_sb
            m1 = activateModel("fan200", 1)
        ElseIf read("type") = 3 Then
            m1 = openModel("asm", "E:\works\creo\fan\asm\fan250")
            retrieveModel("frm", "E:\works\creo\fan\asm\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\asm\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\asm\fan250")
            retrieveModel("drw", "E:\works\creo\fan\asm\shaft_sleeve")
            m1 = activateModel("fan250", 0)
        ElseIf read("type") = 4 Then

            m1 = openModel("asm", "E:\works\creo\fan\asm\fan280")
            retrieveModel("frm", "E:\works\creo\fan\asm\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\asm\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\asm\fan280")
            retrieveModel("drw", "E:\works\creo\fan\asm\shaft_sleeve2")
            m1 = activateModel("fan280", 0)
        ElseIf read("type") = 5 Then

            m1 = openModel("asm", "E:\works\creo\fan\asm\fan355")
            retrieveModel("frm", "E:\works\creo\fan\asm\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\asm\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\asm\fan355")
            retrieveModel("drw", "E:\works\creo\fan\asm\shaft_sleeve3")
            m1 = activateModel("fan355", 0)
        ElseIf read("type") = 6 Then

            m1 = openModel("asm", "E:\works\creo\fan\asm\fan400")
            retrieveModel("frm", "E:\works\creo\fan\asm\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\fan\asm\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\fan\asm\fan400")
            m1 = activateModel("fan400", 0)
        End If
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")

        End If
        'If read("MATERIAL") <> "" Then
        '    setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        'End If
        'If read("SOURCE") <> "" Then
        '    setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        'End If
        'If read("REMARK") <> "" Then
        '    setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        'End If
        'If read("SHEET_SIZE") <> "" Then
        '    setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        'End If
        'If read("DESCRIPTION") <> "" Then
        '    setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        'End If
        'If read("OPT_LEVEL") <> "" Then
        '    setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        'End If
        'If read("MARK") <> "" Then
        '    setParamValue(m1, "MARK", read("MARK"), "字符串")
        'End If
        'If read("MARK_A") <> "" Then
        '    setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        'End If
        'If read("MARK_B") <> "" Then
        '    setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        'End If
        'If read("IMPORTANCE") <> "" Then
        '    setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        'End If
        'If read("MATERIAL_CODE") <> "" Then
        '    setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        'End If
        'If read("MT_LEVEL") <> "" Then
        '    setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        'End If
        'If read("VERSION") <> "" Then
        '    setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        'End If

        m1.CommonName = read("NAME")


        If read("type") = 1 Then
            setParamValue(m1, "d18", read("length"), "浮点型") '轴向尺寸
            setParamValue(m1, "d16", read("diameter") / 2, "浮点型") '向尺寸<40

            标准键数据(read("diameter"))

            setParamValue(m1, "d58", read("keyway_wight"), "浮点型")
            setParamValue(m1, "d56", read("diameter") + read("keyway_hight"), "浮点型")
            setParamValue(m1, "d57", read("diameter") + read("keyway_hight"), "浮点型")
            setParamValue(m1, "p51", read("number"), "浮点型") '扇叶个数
            m1.CommonName = "风扇"


        ElseIf read("type") = 2 Then


            setParamValue(m1, "d18", read("length"), "浮点型") '轴向尺寸
            setParamValue(m1, "d16", read("diameter") / 2, "浮点型") '径向尺寸<50

            标准键数据(read("diameter"))


            setParamValue(m1, "d58", read("keyway_wight"), "浮点型")
            setParamValue(m1, "d59", read("diameter") / 2 + read("keyway_hight"), "浮点型")

            setParamValue(m1, "p51", read("number"), "浮点型") '扇叶个数
            m1.CommonName = "风扇"
        ElseIf read("type") = 3 Then

            Threading.Thread.Sleep(1000)

            m2 = activateModel("fan250", 1)

            setParamValue(m2, "p62", read("number"), "浮点型") '扇叶个数
            setParamValue(m2, "d4", read("length"), "浮点型")
            setParamValue(m2, "MATERIAL", read("material1"), "字符串") 'material
            setParamValue(m2, "d91", read("length") / 2, "浮点型")
            setParamValue(m2, "PART_NAME", "风扇", "字符串")
            m2.CommonName = "风扇"
            m2.Rename(read("name1"), True)

            m2.Regenerate(Nothing)
            Threading.Thread.Sleep(3000)
            closeWindow(m2)
            m3 = activateModel("shaft_sleeve", 1)


            setParamValue(m3, "d9", read("length") + 10, "浮点型") '轴向尺寸
            setParamValue(m3, "d4", read("diameter") - 10, "浮点型") '径向尺寸 <130
            setParamValue(m3, "MATERIAL", read("material2"), "字符串") 'material
            m3.CommonName = "轴套"
            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            regenerate(m3)
            Threading.Thread.Sleep(500)
            m4 = activateModel("shaft_sleeve", 2)
            drawing = CType(m4, IpfcDrawing)
            m3.Rename(read("name2"), True)
            m4.Rename(read("name2"), True)
            smodel = drawing.Descr
            smodel.Path = path1
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)



            m3 = activateModel(read("name2"), 1)
            setParamValue(m3, "d9", read("length"), "浮点型") '轴向尺寸
            setParamValue(m3, "d4", read("diameter"), "浮点型") '径向尺寸 <130

            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m4 = activateModel(read("name2"), 2)
            drawing = CType(m4, IpfcDrawing)
            smodel = drawing.Descr
            smodel.Path = path
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)











            m3.Regenerate(Nothing)
            closeWindow(m3)
            Threading.Thread.Sleep(3000)
            m1 = activateModel("fan250", 0)

            标准键数据(read("diameter"))
            setParamValue(m1, "d96", read("keyway_wight"), "浮点型")
            setParamValue(m1, "d95", read("diameter") / 2 + read("keyway_hight"), "浮点型")
            Threading.Thread.Sleep(3000)
            'setParamValue(m1, "d91", read("hole1_diameter"), "浮点型")
            'setParamValue(m1, "d92", read("hole1_distance"), "浮点型")

            setParamValue(m1, "d87", read("hole2_diameter"), "浮点型")
            setParamValue(m1, "d88", read("hole2_distance"), "浮点型")
            setParamValue(m1, "d86", read("hole2_deep"), "浮点型")



        ElseIf read("type") = 4 Then


            Threading.Thread.Sleep(1000)

            m2 = activateModel("fan280", 1)

            setParamValue(m2, "p45", read("number"), "浮点型") '扇叶个数
            setParamValue(m2, "d4", read("length"), "浮点型")
            setParamValue(m2, "d49", read("length") / 2, "浮点型")
            setParamValue(m2, "MATERIAL", read("material1"), "字符串") 'material
            'setParamValue(m2, "PART_NAME", "风扇", "字符串")
            m2.CommonName = "风扇"
            m2.Rename(read("name1"), True)

            m2.Regenerate(Nothing)
            closeWindow(m2)
            Threading.Thread.Sleep(3000)

            m3 = activateModel("shaft_sleeve2", 1)
            setParamValue(m3, "d9", read("length") + 10, "浮点型") '轴向尺寸
            setParamValue(m3, "d4", read("diameter") - 10, "浮点型") '径向尺寸 <130
            setParamValue(m3, "MATERIAL", read("material2"), "字符串") 'material
            m3.CommonName = "轴套"
            regenerate(m3)
            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m4 = activateModel("shaft_sleeve2", 2)
            drawing = CType(m4, IpfcDrawing)
            m3.Rename(read("name2"), True)
            m4.Rename(read("name2"), True)
            smodel = drawing.Descr
            smodel.Path = path1
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            closeWindow(m3)



            m3 = activateModel(read("name2"), 1)
            setParamValue(m3, "d9", read("length"), "浮点型") '轴向尺寸
            setParamValue(m3, "d4", read("diameter"), "浮点型") '径向尺寸 <130

            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m4 = activateModel(read("name2"), 2)
            drawing = CType(m4, IpfcDrawing)
            smodel = drawing.Descr
            smodel.Path = path
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)










            Threading.Thread.Sleep(3000)
            m1 = activateModel("fan280", 0)

            标准键数据(read("diameter"))
            setParamValue(m1, "d85", read("keyway_wight"), "浮点型")
            setParamValue(m1, "d86", read("diameter") / 2 + read("keyway_hight"), "浮点型")
            'setParamValue(m1, "d128", read("hole1_diameter"), "浮点型")
            'setParamValue(m1, "d130", read("hole1_distance"), "浮点型")

            setParamValue(m1, "d124", read("hole2_diameter"), "浮点型")
            setParamValue(m1, "d123", read("hole2_distance"), "浮点型")
            setParamValue(m1, "d126", read("hole2_deep"), "浮点型")
            Threading.Thread.Sleep(3000)
        ElseIf read("type") = 5 Then



            Threading.Thread.Sleep(1000)
            m2 = activateModel("fan355", 1)

            setParamValue(m2, "p33", read("number"), "浮点型") '扇叶个数
            setParamValue(m2, "d7", read("length"), "浮点型")
            setParamValue(m2, "MATERIAL", read("material1"), "字符串") 'material
            setParamValue(m2, "d37", （read("length") - 50） / 2, "浮点型")
            'setParamValue(m2, "PART_NAME", "风扇", "字符串")
            m2.CommonName = "风扇"

            m2.Rename(read("name1"), True)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m3 = activateModel("shaft_sleeve3", 1)


            setParamValue(m3, "d9", read("length") + 10, "浮点型") '轴向尺寸
            setParamValue(m3, "d10", read("diameter") - 10, "浮点型") '径向尺寸<150
            setParamValue(m3, "MATERIAL", read("material2"), "字符串") 'material
            m3.CommonName = "轴套"
            regenerate(m3)
            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m4 = activateModel("shaft_sleeve3", 2)
            drawing = CType(m4, IpfcDrawing)
            m3.Rename(read("name2"), True)
            m4.Rename(read("name2"), True)
            smodel = drawing.Descr
            smodel.Path = path1
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)




            m3 = activateModel(read("name2"), 1)
            setParamValue(m3, "d9", read("length"), "浮点型") '轴向尺寸
            setParamValue(m3, "d10", read("diameter"), "浮点型") '径向尺寸 <130

            Threading.Thread.Sleep(500)
            m3.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m4 = activateModel(read("name2"), 2)
            drawing = CType(m4, IpfcDrawing)
            smodel = drawing.Descr
            smodel.Path = path
            Threading.Thread.Sleep(500)
            drawing.Backup(smodel)
            Threading.Thread.Sleep(500)









            closeWindow(m3)
            closeWindow(m4)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("fan355", 0)
            标准键数据(read("diameter"))
            setParamValue(m1, "d92", read("keyway_wight"), "浮点型")
            setParamValue(m1, "d91", read("diameter") + read("keyway_hight"), "浮点型")
            Threading.Thread.Sleep(1000)
            'setParamValue(m1, "d126", read("hole1_diameter"), "浮点型")
            'setParamValue(m1, "d134", read("hole1_distance"), "浮点型")

            setParamValue(m1, "d131", read("hole2_diameter"), "浮点型")
            setParamValue(m1, "d132", read("hole2_distance"), "浮点型")
            setParamValue(m1, "d130", read("hole2_deep"), "浮点型")

        ElseIf read("type") = 6 Then



            Threading.Thread.Sleep(1000)
            m2 = activateModel("fan400", 1)

            setParamValue(m2, "p56", read("number"), "浮点型") '扇叶个数
            setParamValue(m2, "d7", read("length"), "浮点型")
            m2.Rename(read("name1"), True)

            Threading.Thread.Sleep(1000)
            m3 = activateModel("shaft_sleeve4", 1)


            setParamValue(m3, "d9", read("length"), "浮点型") '轴向尺寸
            setParamValue(m3, "d10", read("diameter"), "浮点型") '径向尺寸<225
            regenerate(m3)
            m3.Rename(read("name2"), True)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("fan400", 0)
            标准键数据(read("diameter"))
            setParamValue(m1, "d86", B, "浮点型")
            setParamValue(m1, "d85", read("diameter") / 2 + T2, "浮点型")
            Threading.Thread.Sleep(1000)
        End If

        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        ' m1.Regenerate(Nothing)
        RegenerateModel(m1)


        ExportJpg(path, imageName)
        If read("type") = 1 Then

            m2 = activateModel("fan180", 2)
            note_Item_1 = listModelItem_1(m2, "DTL_NOTE", "Note_81")
            change_txt_note_text3(note_Item_1, read("number").ToString + "片均布")
        ElseIf read("type") = 2 Then

            m2 = activateModel("fan200", 2)
            note_Item_1 = listModelItem_1(m2, "DTL_NOTE", "Note_42")
            change_txt_note_text3(note_Item_1, read("number").ToString + "片均布")
        ElseIf read("type") = 3 Then

            m2 = activateModel("fan250", 2)
            note_Item_1 = listModelItem_1(m2, "DTL_NOTE", "Note_131")
            note_Item_2 = listModelItem_1(m2, "DTL_NOTE", "Note_132")
            change_txt_note_text3(note_Item_1, "2-M" + read("hole2_diameter").ToString + "(深" + read("hole2_deep").ToString + ")")
            change_txt_note_text3(note_Item_2, read("number").ToString + "片均布")
        ElseIf read("type") = 4 Then


            m2 = activateModel("fan280", 2)
            note_Item_1 = listModelItem_1(m2, "DTL_NOTE", "Note_82")
            note_Item_2 = listModelItem_1(m2, "DTL_NOTE", "Note_83")
            change_txt_note_text3(note_Item_1, "2-M" + read("hole2_diameter").ToString + "(深" + read("hole2_deep").ToString + ")")
            change_txt_note_text3(note_Item_2, read("number").ToString + "片均布")

        ElseIf read("type") = 5 Then

            m2 = activateModel("fan355", 2)
            modelItems = listModelItem(m2, "DTL_NOTE")
            note_Item_1 = listModelItem_1(m2, "DTL_NOTE", "Note_67")
            note_Item_2 = listModelItem_1(m2, "DTL_NOTE", "Note_68")
            change_txt_note_text3(note_Item_1, "2-M" + read("hole2_diameter").ToString + "(深" + read("hole2_deep").ToString + ")")
            change_txt_note_text3(note_Item_2, read("number").ToString + "片均布")
        ElseIf read("type") = 6 Then

            m2 = activateModel("fan400", 2)
        End If

        drawing = CType(m2, IpfcDrawing)

        Dim REQUIREMENT As String()

        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION

        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        modelItems = listModelItem(m2, "DTL_NOTE")

        Dim aaa As IpfcModelItem

        If read("type") = 1 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_114")
        ElseIf read("type") = 2 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_74")
        ElseIf read("type") = 3 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_167")
        ElseIf read("type") = 4 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")
        ElseIf read("type") = 5 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")

        End If


        'aaa = listModelItem_1(m2, "DTL_NOTE", "Note_167")
        'aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")
        修改注释_name(aaa, Scale_drw(0) / Scale_drw(1))
        Dim SheetInfo As IpfcSheetOwner
        SheetInfo = CType(m2, IpfcSheetOwner)
        SheetInfo.SetSheetScale(1, view2Ds.Item(0).Scale, Nothing)





        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {300, 220})
        添加图幅注释(m2, read("T_MOTOR"))



        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            activateModel(m1.FileName, 0)
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            activateModel(m1.FileName, 1)
        End If
        RegenerateModel(m1)
        closeWindow(m1)

        'If read("type") = 1 Or read("type") = 2 Or read("type") = 3 Then

        '    activateModel(m1.FileName, 1)

        'Else
        '    activateModel(m1.FileName, 0)
        'End If
        'm1.Regenerate(Nothing)
        Threading.Thread.Sleep(500)
        smodel = drawing.Descr
        smodel.Path = path
        Threading.Thread.Sleep(500)
        drawing.Backup(smodel)

        Threading.Thread.Sleep(2000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            If read("type") = 1 Or read("type") = 2 Then
                openModel("prt", path + "\" + read("CODE"))
            Else
                openModel("asm", path + "\" + read("CODE"))
            End If
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    '外风扇
    Public Sub 封闭式风扇(localhost$, tabledase$, code As Integer, path$, imageName$)
        '数据库
        mysql_new2(localhost$, "creo", tabledase, code)
        deleteFileChangeModel("asm", "E:\works\creo\fan\fan14_09\dj20_014_09.asm", "DJ20_014_09.asm".Length)
        m1 = activateModel("transition", 0)
        'partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If
        m2 = activateModel("dj20_014_09_01.prt", 1)
        setParamValue(m2, "d4", read("length"), "浮点型") '轴向尺寸
        setParamValue(m2, "d30", read("diameter"), "浮点型") '径向尺寸

        标准键数据(read("diameter"))
        setParamValue(m2, "d31", B, "浮点型")
        setParamValue(m2, "d32", read("diameter") + T2, "浮点型")
        m2.Regenerate(Nothing)
        closeWindow(m2)

        m1 = activateModel("transition", 0)
        m2 = activateModel("fan_014_09.prt", 1)
        setParamValue(m2, "p23", read("number"), "浮点型") '扇叶个数
        m2.Regenerate(Nothing)
        closeWindow(m2)

        m1 = activateModel("transition", 0)
        m1.Regenerate(Nothing)



        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()


        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()


    End Sub
    '内风扇
    Public Sub 封闭式风扇2(localhost$, tabledase$, code As Integer, path$, imageName$)
        '数据库
        mysql_new2(localhost$, "creo", tabledase, code)
        deleteFileChangeModel("asm", "E:\works\creo\fan\fan2\dj20_014_05_01.asm", "dj20_014_05_01.asm".Length)
        m1 = activateModel("transition", 0)
        'partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If
        m2 = activateModel("dj20_014_05_01-02.prt", 1)
        setParamValue(m2, "d4", read("length"), "浮点型") '径向尺寸
        setParamValue(m2, "d8", read("diameter"), "浮点型") '轴向尺寸

        标准键数据(read("diameter"))
        setParamValue(m2, "d21", B, "浮点型")
        setParamValue(m2, "d22", read("diameter") + T2, "浮点型")
        m2.Regenerate(Nothing)
        closeWindow(m2)

        m1 = activateModel("transition", 0)
        m2 = activateModel("dj20_014_05_01-01.prt", 1)
        setParamValue(m2, "p43", read("number"), "浮点型") '扇叶个数
        m2.Regenerate(Nothing)
        closeWindow(m2)

        m1 = activateModel("transition", 0)
        m1.Regenerate(Nothing)

        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()

        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub creo阻尼板(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase, code)
        If read("type") = 1 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1")
                m1 = activateModel("rotor_lamination1", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1")
                    m1 = activateModel("rotor_lamination1", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination1_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination1_2")
                    m1 = activateModel("rotor_lamination1_2", 1)
                End If
            End If


        ElseIf read("type") = 2 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2")
                m1 = activateModel("rotor_lamination2", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2")
                    m1 = activateModel("rotor_lamination2", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination2_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination2_2")
                    m1 = activateModel("rotor_lamination2_2", 1)
                End If
            End If
        ElseIf read("type") = 3 Then
            If read("H_type") = 0 Then
                m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3.prt")
                retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3")
                m1 = activateModel("rotor_lamination3", 1)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3")
                    m1 = activateModel("rotor_lamination3", 1)
                ElseIf read("H_direction") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination3_2.prt")
                    retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rl\rotor_lamination3_2")
                    m1 = activateModel("rotor_lamination3_2", 1)
                End If
            End If


        ElseIf read("type") = 4 Then
            m1 = openModel("prt", "E:\works\creo\rl\rotor_lamination4.prt")
            retrieveModel("frm", "E:\works\creo\rl\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\rl\rotor_lamination4")
            m1 = activateModel("rotor_lamination4", 1)
        End If

        partValue(m1)

        'If read("NAME") <> "" Then
        '    setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        'End If

        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        If read("type") = 1 Then
            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")
            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")

            '单极阻尼棒
            setParamValue(m1, "p165", read("dr_number"), "浮点型")
            setParamValue(m1, "d158", read("dr_location"), "浮点型")
            setParamValue(m1, "d244", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d162", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "p255", read("dr_number"), "浮点型")
            setParamValue(m1, "d249", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d246", read("dr_hole_distance"), "浮点型")

            setParamValue(m1, "d137", read("sl_pole_shoe_width"), "浮点型") 'bp
            setParamValue(m1, "d63", read("sl_pole_shoe_high"), "浮点型") 'hm
            setParamValue(m1, "d206", read("sl1_width1"), "浮点型") 'bm
            setParamValue(m1, "d136", read("sl1_arc1"), "浮点型") '槽中圆弧直径

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            '标准键数据(read("inside_diameter"))
            setParamValue(m1, "d228", read("Keyway_high") - read("inside_diameter") / 2, "浮点型")


            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If


            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d208", 0, "浮点型")
                setParamValue(m1, "d263", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
                setParamValue(m1, "d263", read("H"), "浮点型")
            End If

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p235", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d229", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d183", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d230", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d233", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then

                    setParamValue(m1, "d230", 0, "浮点型", 0）
                    setParamValue(m1, "d233", 0, "浮点型", 0)
                End If
            Else
                deleteFeature(m1, 5678)
            End If

            setParamValue(m1, "d262", read("sl1_long1"), "浮点型")

            deleteFeature(m1, 4197)
            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d244")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d183")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d233")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")
        ElseIf read("type") = 2 Then

            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")



            setParamValue(m1, "d269", read("a1"), "浮点型")
            setParamValue(m1, "d266", read("a9"), "浮点型")
            setParamValue(m1, "d270", read("a26"), "浮点型")
            setParamValue(m1, "d264", read("a10"), "角度", read("a10"))
            setParamValue(m1, "d265", read("a11"), "角度", read("a11"))
            setParamValue(m1, "d268", read("a12"), "浮点型")
            setParamValue(m1, "d263", read("a22"), "浮点型")
            setParamValue(m1, "d271", read("a17"), "浮点型")
            setParamValue(m1, "d267", read("a18"), "浮点型")
            setParamValue(m1, "d299", read("a19"), "浮点型")

            setParamValue(m1, "d285", read("Ra13"), "浮点型")
            setParamValue(m1, "d284", read("Ra15"), "浮点型")
            setParamValue(m1, "d282", read("a20"), "浮点型")
            setParamValue(m1, "d283", read("a21"), "浮点型")

            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            '标准键数据(read("inside_diameter"))
            setParamValue(m1, "d228", read("Keyway_high") - read("inside_diameter") / 2, "浮点型")

            '单极阻尼棒
            setParamValue(m1, "p165", read("dr_number"), "浮点型")
            setParamValue(m1, "d158", read("dr_location"), "浮点型")
            setParamValue(m1, "d244", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d162", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "p255", read("dr_number"), "浮点型")
            setParamValue(m1, "d249", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d246", read("dr_hole_distance"), "浮点型")
            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d160", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If


            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d208", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
            End If

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p235", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d229", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d183", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d230", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d233", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then
                    setParamValue(m1, "d230", 0, "浮点型", 0）
                    setParamValue(m1, "d233", 0, "浮点型", 0)
                End If
            Else
                deleteFeature(m1, 5678)
            End If


            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d244")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d183")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d233")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")


        ElseIf read("type") = 3 Then

            setParamValue(m1, "d4", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d6", read("thickness"), "浮点型")
            setParamValue(m1, "d10", read("inside_diameter"), "浮点型")
            If read("H_type") = 0 Then
                setParamValue(m1, "d5", 0, "浮点型")
                setParamValue(m1, "d138", 0, "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d5", read("H"), "浮点型")
                'setParamValue(m1, "d138", read("H"), "浮点型")
            End If

            setParamValue(m1, "d136", read("sl_pole_shoe_width"), "浮点型") 'bp
            setParamValue(m1, "d63", read("sl_pole_shoe_high"), "浮点型") 'hm
            setParamValue(m1, "d137", read("sl1_width1"), "浮点型") 'bm
            setParamValue(m1, "d65", read("sl1_long1"), "浮点型")

            '定位棒
            If read("pr_type") = 1 Then
                setParamValue(m1, "p124", read("pr_number"), "浮点型") '单极定位棒个数
                setParamValue(m1, "d154", read("Positioning_rods_location"), "浮点型")
                setParamValue(m1, "d119", read("pr_diameter"), "浮点型")
                If read("pr_number") = 2 Then
                    setParamValue(m1, "d155", (read("pr_array_angle") / 2), "浮点型", (read("pr_array_angle") / 2)）
                    setParamValue(m1, "d152", read("pr_array_angle"), "浮点型", read("pr_array_angle"))
                ElseIf read("pr_number") = 1 Then

                    setParamValue(m1, "d155", 0, "浮点型", 0）
                    setParamValue(m1, "d152", 0, "浮点型", 0）
                End If
            Else
                deleteFeature(m1, 3674)
            End If

            '单极阻尼棒
            setParamValue(m1, "p115", read("dr_number"), "浮点型")
            setParamValue(m1, "d103", read("dr_location"), "浮点型")
            setParamValue(m1, "d159", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d112", read("dr_array_angle"), "角度", read("dr_array_angle"))
            If read("dr_number") Mod 2 = 1 Then
                setParamValue(m1, "d105", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)), "角度", (read("dr_array_angle") * ((read("dr_number") - 1) / 2)))
            Else
                setParamValue(m1, "d105", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)), "角度", (read("dr_array_angle") * ((read("dr_number")) / 2 - 0.5)))
            End If


            If read("H_type") = 0 Then
                setParamValue(m1, "d190", 0, "浮点型")
                setParamValue(m1, "d103", read("dr_location"), "浮点型")
            ElseIf read("H_type") = 1 Then
                setParamValue(m1, "d190", read("H"), "浮点型")
                setParamValue(m1, "d103", read("dr_location") + read("H") * 2, "浮点型")
            End If



            setParamValue(m1, "p167", read("dr_number"), "浮点型")
            setParamValue(m1, "d164", read("dr_array_angle"), "角度", read("dr_array_angle"))
            setParamValue(m1, "d161", read("dr_hole_distance"), "浮点型")

            asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d159")
            asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d119")
            asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d152")
            asmItem_5 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")

            setParamValue(m1, "d87", read("Keyway_Width"), "浮点型")
            标准键数据(read("inside_diameter"))
            setParamValue(m1, "d151", read("Keyway_high") + read("inside_diameter") / 2, "浮点型")


            If read("Weight_loss_hole_type") = 1 Then

                setParamValue(m1, "d176", read("loss_hole_Side_distance"), "浮点型")
                setParamValue(m1, "d175", read("loss_hole_Side_distance"), "浮点型")
                setParamValue(m1, "d177", read("loss_hole_distance"), "浮点型") '减重孔直径
                deleteFeature(m1, 2290)
            Else

                setParamValue(m1, "d78", read("sl1_location"), "浮点型") '减重孔位置直径
                setParamValue(m1, "d80", read("sl1_diameter"), "浮点型") '减重孔直径
                If read("H_type") = 0 Then
                    deleteFeature(m1, 5504)

                ElseIf read("H_type") = 1 Then
                    deleteFeature(m1, 5750)
                End If
            End If



        ElseIf read("type") = 4 Then
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型")
            setParamValue(m1, "d4", read("thickness"), "浮点型")
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型")

            setParamValue(m1, "d9", read("Keyway_width"), "浮点型")
            setParamValue(m1, "d8", read("Keyway_high"), "浮点型")
            '内圈孔1
            setParamValue(m1, "p17", read("dr_number"), "浮点型")
            setParamValue(m1, "d11", read("dr_location"), "浮点型")
            setParamValue(m1, "d12", read("dr_diameter"), "浮点型")
            setParamValue(m1, "d13", read("dr_array_angle") / 180 * PI, "角度", read("dr_array_angle"))

            '外圈孔2
            setParamValue(m1, "p26", read("pr_number"), "浮点型") '单极定位棒个数
            setParamValue(m1, "d20", read("Positioning_rods_location"), "浮点型")
            setParamValue(m1, "d21", read("pr_diameter"), "浮点型")
            setParamValue(m1, "d22", read("pr_array_angle") / 180 * PI, "角度", read("pr_array_angle"))


            '内减重槽

            setParamValue(m1, "d48", read("groove1_angle") / 180 * PI, "角度", read("groove1_angle"))
            setParamValue(m1, "d44", read("groove1_outer_diameter"), "浮点型")
            setParamValue(m1, "d43", read("groove1_inside_diameter"), "浮点型")
            setParamValue(m1, "d46", read("groove1_filleted"), "浮点型")
            setParamValue(m1, "d45", read("groove1_filleted"), "浮点型")
            setParamValue(m1, "p52", read("groove1_number"), "浮点型")



            '外槽

            setParamValue(m1, "d58", read("groove2_distance1"), "浮点型")
            setParamValue(m1, "d59", read("groove2_distance2"), "浮点型")
            setParamValue(m1, "d60", read("groove2_width"), "浮点型")
            setParamValue(m1, "d56", read("groove2_filleted"), "浮点型")
            setParamValue(m1, "d57", read("groove2_filleted"), "浮点型")
            setParamValue(m1, "p64", read("groove2_number") / 2, "浮点型")
            setParamValue(m1, "d55", read("groove2_angle") / 180 * PI, "角度", read("groove2_angle"))




        End If
        '’'msgbox(0)
        m1.CommonName = read("NAME")
        m1.Regenerate(Nothing)

        ExportJpg(path, imageName)
        If read("type") = 1 Then

            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination1", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination1", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination1_2", 2)
                End If
            End If
        ElseIf read("type") = 3 Then
            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination3", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination3", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination3_2", 2)
                End If
            End If
        ElseIf read("type") = 2 Then
            If read("H_type") = 0 Then
                m2 = activateModel("rotor_lamination2", 2)
            ElseIf read("H_type") = 1 Then
                If read("H_direction") = 0 Then
                    m2 = activateModel("rotor_lamination2", 2)
                ElseIf read("H_direction") = 1 Then
                    m2 = activateModel("rotor_lamination2_2", 2)
                End If
            End If
        ElseIf read("type") = 4 Then
            m2 = activateModel("rotor_lamination4", 2)
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)


        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        modelItems = listModelItem(m2, "DTL_NOTE")
        Dim aaa As IpfcModelItem
        If read("type") = 1 Then

            If read("H_direction") = 0 Then
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_389")
                ''msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
                '修改注释(modelItems, 34, view2Ds.Item(0).Scale.ToString)
            Else
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_350"）
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            End If
        ElseIf read("type") = 2 Then
            If read("H_direction") = 1 Then
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_386")
                ''msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            Else
                aaa = listModelItem_1(m2, "DTL_NOTE", "Note_389")
                '’'msgbox(aaa.GetName, aaa.Id)
                修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            End If
        ElseIf read("type") = 3 Then
            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_107")
            ''msgbox(aaa.GetName, aaa.Id)
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
            '修改注释(modelItems, 32, view2Ds.Item(0).Scale.ToString)
        ElseIf read("type") = 4 Then

            aaa = listModelItem_1(m2, "DTL_NOTE", "Note_70")
            '’'msgbox(aaa.GetName, aaa.Id)
            修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)


        End If





        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 170})
        添加图幅注释(m2, read("T_MOTOR"))
        If read("type") = 2 Then
            修改绘制尺寸值_new(asmItem_3， read("dr_number") * 2)
            修改绘制尺寸值_new(asmItem_2， read("pr_number") * 2)
        Else
            修改绘制尺寸值_new(asmItem_3， read("dr_number") * 4)
            修改绘制尺寸值_new(asmItem_2， read("pr_number") * 4)
        End If
        If read("pr_type") = 1 Then
            尺寸删除(asmItem_4)

        End If
        If read("H_type") = 0 Then

            尺寸删除(asmItem_5)
        End If

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))
        m2.Rename(read("CODE"), True)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If


        endApp()

        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 转子铁芯装配(localhost$, tabledase$, code As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase$, code)

        mysql_new(localhost$, "creo", "rotor_lamination", read("rotor_id"))

        m1 = openModel("asm", "E:\works\creo\rotor_core_assembly\rotor_core.asm")

        m1 = activateModel("rotor_core", 0)
        partValue(m1)

        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        If dr("type") = 1 Or dr("type") = 2 Then
            '第一个零件
            '导入零件("E:\works\creo\rotor_lamination\rotor_lamination1", asmcomp_1)

            smodel_1 = (New CCpfcModelDescriptor).Create(1, read("rotor_path"), Nothing)
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            冲片厚度(read("rotor_code"), read("thickness"), dr("type"))

            setParamValue(m2, "MASS", read("mass"), "浮点型")
            asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d7")
            BaDimension = CType(asmItem_1, IpfcBaseDimension)
            Dimension1 = CType(BaDimension, IpfcDimension)
            m2.Regenerate(Nothing)
            closeWindow(m2)
            Threading.Thread.Sleep(2000)

            m1 = activateModel("rotor_core", 0)

            m1.Regenerate(Nothing)

            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_3 = componentModel_1.GetItemByID(1, 70)
            compItem_4 = componentModel_2.GetItemByID(1, 73)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_3 = componentModel_1.GetItemByID(1, 73)
            compItem_4 = componentModel_2.GetItemByID(1, 70)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            'm2 = activateModel(read("damping_plate_code"), 1)
            'Threading.Thread.Sleep(2000)
            'setParamValue(m2, "REMARK", "2", "字符串")
            'm1 = activateModel("rotor_core", 0)

            '定位棒

            Dim l As Double()
            Dim N As Double
            l = {5632, 6653, 6682, 6711}
            If dr("type") = 2 Then
                N = 1

            ElseIf dr("type") = 1 Then
                N = 3
            End If
            For i = 0 To N
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("positioning_rod_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(80)
                ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)


                compItem_3 = componentModel_1.GetItemByID(1, 73)
                compItem_4 = componentModel_2.GetItemByID(1, 73)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_1 = componentModel_1.GetItemByID(1, l(i))
                compItem_2 = componentModel_2.GetItemByID(1, 78)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(3)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4
                constraint1.Offset = read("distance")

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()


                Threading.Thread.Sleep(3000)
            Next
            'm2 = activateModel(read("positioning_rod_code"), 1)
            'Threading.Thread.Sleep(2000)
            'setParamValue(m2, "REMARK", "3", "字符串")
            'm1 = activateModel("rotor_core", 0)

            '第三个阻尼棒
            Dim T As Double()
            T = {7228, 7292, 7356, 7420}
            For i = 0 To N
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_rod_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(80)
                ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)



                compItem_3 = componentModel_1.GetItemByName(1, "FRONT")
                compItem_4 = componentModel_2.GetItemByName(1, "FRONT")
                'compItem_3 = componentModel_1.GetItemByID(1, 73)
                'compItem_4 = componentModel_2.GetItemByID(1, 73)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_1 = componentModel_1.GetItemByID(1, T(i))
                compItem_2 = componentModel_2.GetItemByID(1, 78)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(2)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                Threading.Thread.Sleep(3000)

            Next


            'feats = listModelItem_有弹窗(m1, "FEATURE")
            feats = listModelItem(m1, "FEATURE")
            If dr("type") = 1 Then
                feat = feats.Item(9)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
                feat = feats.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(15)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(16)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(17)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(18)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(19)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

            ElseIf dr("type") = 2 Then
                feat = feats.Item(9)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
                feat = feats.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(12)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()

                feat = feats.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
            End If


        ElseIf dr("type") = 3 Then


            '第一个零件
            smodel_1 = (New CCpfcModelDescriptor).Create(1, read("rotor_path"), Nothing)
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            冲片厚度(read("rotor_code"), read("thickness"), dr("type"))
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d7")
            BaDimension = CType(asmItem_1, IpfcBaseDimension)
            Dimension1 = CType(BaDimension, IpfcDimension)

            m2.Regenerate(Nothing)
            closeWindow(m2)
            Threading.Thread.Sleep(2000)
            m1 = activateModel("rotor_core", 0)


            m1.Regenerate(Nothing)

            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)





            compItem_3 = componentModel_1.GetItemByID(1, 70)
            compItem_4 = componentModel_2.GetItemByID(1, 73)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4


            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)



            compItem_3 = componentModel_1.GetItemByID(1, 73)
            compItem_4 = componentModel_2.GetItemByID(1, 70)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            'm2 = activateModel(read("damping_plate_code"), 1)
            'Threading.Thread.Sleep(2000)
            'setParamValue(m2, "REMARK", "2", "字符串")
            'm1 = activateModel("rotor_core", 0)

            Dim l As Double()
            l = {3072, 3681, 3710, 3740}
            For i = 0 To 3
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("positioning_rod_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(80)
                ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

                compItem_1 = componentModel_1.GetItemByID(1, l(i))
                compItem_2 = componentModel_2.GetItemByID(1, 78)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_1.GetItemByID(1, 73)
                compItem_4 = componentModel_2.GetItemByID(1, 73)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(3)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4
                constraint1.Offset = read("distance")

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()


                Threading.Thread.Sleep(3000)


            Next

            'm2 = activateModel(read("positioning_rod_code"), 1)
            'Threading.Thread.Sleep(2000)
            'setParamValue(m2, "REMARK", "3", "字符串")
            'm1 = activateModel("rotor_core", 0)

            '第三个阻尼棒
            Dim T As Double()
            T = {4397, 4461, 4525, 4589}
            For i = 0 To 3
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_rod_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(80)
                ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)


                compItem_3 = componentModel_1.GetItemByName(1, "FRONT")
                compItem_4 = componentModel_2.GetItemByName(1, "FRONT")
                'compItem_3 = componentModel_1.GetItemByID(1, 73)
                'compItem_4 = componentModel_2.GetItemByID(1, 73)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_1 = componentModel_1.GetItemByID(1, T(i))
                compItem_2 = componentModel_2.GetItemByID(1, 78)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(2)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                Threading.Thread.Sleep(3000)


            Next
            'm2 = activateModel(read("damping_rod_code"), 1)
            'Threading.Thread.Sleep(2000)
            'setParamValue(m2, "REMARK", "4", "字符串")
            'm1 = activateModel("rotor_core", 0)

            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            feat = feats.Item(11)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(13)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(15)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(16)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(17)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(18)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(19)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()


        ElseIf dr("type") = 5 Then




            '第一个零件

            smodel_1 = (New CCpfcModelDescriptor).Create(1, read("rotor_path"), Nothing)
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            冲片厚度(read("rotor_code"), read("thickness"), dr("type"))
            Threading.Thread.Sleep(2000)
            m1 = activateModel("rotor_core", 0)

            m1.Regenerate(Nothing)
            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
            ids = (New Cintseq)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_3 = componentModel_1.GetItemByID(1, 73)
            compItem_4 = componentModel_2.GetItemByID(1, 70)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4



            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            smodel_3 = (New CCpfcModelDescriptor).Create(1, read("damping_plate_path"), Nothing)
            componentModel_3 = AC.Session.RetrieveModel(smodel_3)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_3, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
            model.Display()

            compItem_3 = componentModel_1.GetItemByID(1, 70)
            compItem_4 = componentModel_2.GetItemByID(1, 73)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_1 = componentModel_1.GetItemByID(1, 97)
            compItem_2 = componentModel_2.GetItemByID(1, 97)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0) '重合=0
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4



            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            Dim l As Double()
            l = {3219, 4067}
            For i = 0 To 1
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("damping_rod_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(80)
                ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

                compItem_1 = componentModel_1.GetItemByID(1, l(i))
                compItem_2 = componentModel_2.GetItemByID(1, 78)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_1.GetItemByID(1, 70)
                compItem_4 = componentModel_2.GetItemByID(1, 73)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(3)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4
                constraint1.Offset = read("distance")

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                Threading.Thread.Sleep(3000)


            Next




            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            feat = feats.Item(10)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(11)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(12)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(13)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(14)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(15)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(16)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
        End If

        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        End If
        If dr("type") = 2 Then
            刨视图("view_2", "XSEC0001", "halfPlane", 12)
        Else
            刨视图("view_2", "XSEC0001", "halfPlane", 16)
        End If
        '刨视图("view_2", "XSEC0001", "halfPlane", 16)

        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
        '                    "~ Command `ProCmdDwgTblBlnShow`;")
        添加图幅注释(m2, read("T_MOTOR"))

        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        Dim aaa As IpfcModelItem
        'modelItems = listModelItem(m1, "DTL_NOTE")
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")
        修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))

        加入球标()

        If dr("type") = 2 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node9`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row4` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row40` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row46` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row47` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row48` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            'drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 100))
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node5`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        Else
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node13`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row4` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row40` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row46` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row47` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row48` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            'drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 100))
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node9`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        End If

        '零件工程图

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)

        零件工程图转移(Replace(read("rotor_path"), "prt", "drw"), path + "\" + read("rotor_code") + ".drw.1")
        零件工程图转移(Replace(read("damping_plate_path"), "prt", "drw"), path + "\" + read("damping_plate_code") + ".drw.1")
        零件工程图转移(Replace(read("positioning_rod_path"), "prt", "drw"), path + "\" + read("positioning_rod_code") + ".drw.1")
        零件工程图转移(Replace(read("damping_rod_path"), "prt", "drw"), path + "\" + read("damping_rod_code") + ".drw.1")


        mxs = 明细表(m2)

        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        Threading.Thread.Sleep(2000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo撑块_assembly(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase$, code)

        mysql_new(localhost$, "creo", "support_block", read("support_block2_id"))

        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)


        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If




        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        Dim a, aa As Double()
        smodel_1 = (New CCpfcModelDescriptor).Create(1, read("block_the_screw_path"), Nothing)

        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()

        Dim c, d As Double

        '垫圈
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(6).Id
        d = feats.Item(7).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 70, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 115, 7， 0)
        constraints.Clear()




        asmcomp_2 = 插入零件_1(assembly, 1, read("support_block2_path"))

        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(8).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 2, 97， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 275， 0)
        constraints.Clear()


        '撑块2  

        asmcomp_2 = 插入零件_1(assembly, 1, read("support_block2_path"))

        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(9).Id


        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
        constraints = 面面约束(asmcomp_2, a, aa, 97, 97， 1, read("distance"))
        a = {84}
        constraints = 面面约束(asmcomp_2, a, aa, 72, 275， 0)
        constraints.Clear()



        '标准件




        '垫圈
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(11).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 275, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 97, 2， 0)
        constraints.Clear()

        '垫圈93
        'If read("material_model1") = "1" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_parts1") + "_gb93_316l")
        'ElseIf read("material_model1") = "2" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_parts1") + "_gb93_zn")
        'ElseIf read("material_model1") = "3" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_parts1") + "_gb93_dacromet")
        'End If
        'feats = listModelItem(m1, "FEATURE")
        'c = feats.Item(10).Id
        'd = feats.Item(11).Id
        'a = {c}
        'aa = {d}
        'constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        'constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        'constraints.Clear()


        '螺母
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_parts1") + "_gb6170_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_parts1") + "_gb6170_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_parts1") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(12).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 474， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 456， 0)
        constraints.Clear()





        ''垫圈
        'If read("material_model1") = "1" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
        'ElseIf read("material_model1") = "2" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
        'ElseIf read("material_model1") = "3" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_parts1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
        'End If
        'feats = listModelItem(m1, "FEATURE")
        'c = feats.Item(7).Id
        'd = feats.Item(12).Id
        'a = {c} '后防护罩
        'aa = {d}
        'constraints = 面面约束(asmcomp_2, a, aa, 275, 16， 0)
        'constraints = 面面约束(asmcomp_2, a, aa, 97, 2， 0)
        'constraints.Clear()



        '垫圈93

        'If read("material_model1") = "1" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_parts1") + "_gb93_316l")
        'ElseIf read("material_model1") = "2" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_parts1") + "_gb93_zn")
        'ElseIf read("material_model1") = "3" Then
        '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_parts1") + "_gb93_dacromet")
        'End If
        'feats = listModelItem(m1, "FEATURE")
        'c = feats.Item(13).Id
        'd = feats.Item(14).Id
        'a = {c}
        'aa = {d}
        'constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        'constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        'constraints.Clear()


        '螺母
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_parts1") + "_gb6170_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_parts1") + "_gb6170_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_parts1") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 474, 474， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 465, 456， 0)
        constraints.Clear()



        '撑块绝缘
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\support_block_insulation.prt")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(14).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 101, 74， 2)
        constraints = 面面约束(asmcomp_2, a, aa, 103, 69， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 83, 76， 2)
        constraints.Clear()


        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\support_block_insulation.prt")

        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(15).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 101, 74， 2)
        constraints = 面面约束(asmcomp_2, a, aa, 103, 69， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 83, 76， 2)
        constraints.Clear()

        m2 = activateModel("support_block_insulation", 1)
        撑块绝缘修改(dr("support_block_length"), dr("thickness"))
        setParamValue(m2, "MATERIAL", read("insulation_material"), "字符串")

        'insulation_material
        m2.Rename(read("insulation_name"), True)
        Threading.Thread.Sleep(2000)
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)


        m1.CommonName = read("NAME")
        RegenerateModel(m1)

        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)


        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符

        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 1, "X", 0, 1, 0, REQUIREMENT, {200, 300}, {300, 500}, {600, 600}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 1, "X", 0, 1, 0, REQUIREMENT, {200, 300}, {300, 500}, {600, 600}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 1, "X", 0, 1, 0, REQUIREMENT, {200, 300}, {300, 500}, {600, 600}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 1, "X", 0, 1, 0, REQUIREMENT, {200, 300}, {300, 500}, {600, 600}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 1, "X", 0, 1, 0, REQUIREMENT, {350, 450}, {300, 500}, {500, 600}, {850, 600})
        End If



        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + "view_1" + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `orient_method_op` 1 `angles`;" +
                               " ~ Update `drawing_view` `AngleValue` `270`;" +
                               " ~ Activate `drawing_view` `psh_ok`;")

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)


        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        modelItems = listModelItem(m2, "DTL_NOTE")
        Dim aaa As IpfcModelItem

        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")
        ''msgbox(aaa.GetName, aaa.Id)
        修改注释_name(aaa, Scale_drw(0) / Scale_drw(1))





        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")


        '加入球标()





        添加图幅注释(m2, read("T_MOTOR"))

        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + "view_1" + " 92 0 2 -1 -1`;")
        AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row4` `show`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")





        m2 = activateModel(read("code"), 2)


        '选中球标(m2, 6, 7)
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        零件工程图转移(Replace(read("block_the_screw_path"), "prt", "drw"), path + "\" + read("block_the_screw_code") + ".drw.1")
        '零件工程图转移(Replace(read("support_block1_path"), "prt", "drw"), path + "\" + read("support_block1_code") + ".drw.1")
        零件工程图转移(Replace(read("support_block2_path"), "prt", "drw"), path + "\" + read("support_block2_code") + ".drw.1")
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 带绕组转子铁芯(localhost$, tabledase$, code As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase$, code)

        mysql_new(localhost$, "creo", "rotor_core_assembly", read("rotor_core_id"))

        mysql_new3(localhost$, "creo", "rotor_lamination", dr("rotor_id"))

        m1 = openModel("asm", "E:\works\creo\template\rotor_winding.asm")
        m1 = activateModel("rotor_winding", 0)
        partValue(m1)
        Threading.Thread.Sleep(500)
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类

        If dr3("type") = 3 Then
            '转子铁芯
            smodel_1 = (New CCpfcModelDescriptor).Create(0, read("rotor_core_path"), Nothing)
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            Dim ccc As Double
            m2 = activateModel(read("rotor_core_code"), 0)
            modelItems = listModelItem(m2, "FEATURE")
            ccc = modelItems.Item(7).Id
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)

            '磁极绝缘
            smodel_2 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\insulation\magnetic_insulation.prt", Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(80)
            path1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids) '转子冲片
            part1 = path1.Leaf

            '磁极绝缘修改

            m2 = activateModel("magnetic_insulation", 1)
            setParamValue(m2, "d24", dr3("sl1_width1"), "浮点型") '内侧
            setParamValue(m2, "d23", dr("thickness"), "浮点型")
            setParamValue(m2, "d25", dr3("sl1_width1") / 4, "浮点型")
            setParamValue(m2, "d20", (dr3("sl_pole_shoe_width") - dr3("sl1_width1")) / 2, "浮点型") '
            setParamValue(m2, "d22", (dr3("sl_pole_shoe_width") - dr3("sl1_width1")) / 2 - 0.5, "浮点型") '-0.5
            setParamValue(m2, "d19", dr3("sl1_long1"), "浮点型") '
            setParamValue(m2, "d21", dr3("sl1_long1") - 1, "浮点型") '-1
            setParamValue(m2, "MATERIAL", read("magnetic_insulation_material"), "字符串")
            m2.Rename(read("magnetic_insulation_name"), True)
            Threading.Thread.Sleep(2000)
            closeWindow(m2)

            m1 = activateModel("rotor_winding", 0)
            compItem_1 = part1.GetItemByID(1, 1737) '侧mian
            compItem_2 = componentModel_2.GetItemByID(1, 269)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path1)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part1.GetItemByID(1, 1735) '底边
            compItem_4 = componentModel_2.GetItemByID(1, 283)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path1)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part1.GetItemByID(2, 1768)
            compItem_6 = componentModel_2.GetItemByID(2, 261)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path1)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(2)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            '线圈
            smodel_3 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\coil\coil.prt", Nothing)
            componentModel_3 = AC.Session.RetrieveModel(smodel_3)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_3, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            idz = (New Cintseq)
            idz.Append(87)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, idz)

            '线圈修改

            m2 = activateModel("coil", 1)
            setParamValue(m2, "d31", dr3("sl1_width1") + 1, "浮点型") '内侧
            setParamValue(m2, "d32", dr("thickness") + 1, "浮点型")
            setParamValue(m2, "d33", (dr3("sl1_width1") + 1) / 2, "浮点型")

            setParamValue(m2, "d29", (dr3("sl_pole_shoe_width")) - 1, "浮点型") '
            setParamValue(m2, "d30", dr("thickness") - 1, "浮点型") '-0.5
            setParamValue(m2, "d26", (dr3("sl_pole_shoe_width") - 1) / 4, "浮点型")

            setParamValue(m2, "p12", (dr3("sl1_long1")) - 1, "浮点型") '
            setParamValue(m2, "p23", (dr3("sl1_long1")) - 1, "浮点型") '-1
            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            setParamValue(m2, "MASS", read("mass"), "浮点型")

            m2.Rename(read("coli_name"), True)
            closeWindow(m2)
            Threading.Thread.Sleep(2000)
            m1 = activateModel("rotor_winding", 0)

            compItem_1 = componentModel_2.GetItemByName(1, "FRONT")
            compItem_2 = componentModel_3.GetItemByName(1, "FRONT")
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, ComponentPath)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_2.GetItemByName(1, "TOP")
            compItem_4 = componentModel_3.GetItemByName(1, "TOP")
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, ComponentPath)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = componentModel_2.GetItemByID(1, 277)
            compItem_6 = componentModel_3.GetItemByID(1, 1489)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, ComponentPath)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing）

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(7)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            '撑块
            smodel_4 = (New CCpfcModelDescriptor).Create(0, read("support_block_path"), Nothing)
            componentModel_4 = AC.Session.RetrieveModel(smodel_4)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_4, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_4 = assembly.AssembleComponent(componentModel_4, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    

            feats = listModelItem(m1, "FEATURE")
            Dim a, b As Double
            a = feats.Item(9).Id
            m2 = activateModel(read("support_block_code"), 0)

            modelItems = listModelItem(m2, "FEATURE")
            b = modelItems.Item(14).Id
            closeWindow(m2)

            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(80)
            ComponentPath = (New CMpfcAssembly).CreateComponentPath(assembly, ids)


            idz = (New Cintseq) '绝缘
            idz.Append(87)
            path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
            part3 = path3.Leaf


            ida = (New Cintseq) '撑块绝缘
            ida.Append(a)
            ida.Append(b)
            path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ida)
            part2 = path2.Leaf

            compItem_1 = part1.GetItemByID(1, 70)
            compItem_2 = part2.GetItemByID(1, 80)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path1)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)

            compItem_3 = part3.GetItemByID(1, 418) '绝缘
            compItem_4 = part2.GetItemByID(1, 64) '撑快
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path3)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path2)

            compItem_5 = part3.GetItemByID(1, 275) '顶
            compItem_6 = part2.GetItemByID(1, 74)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path3)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path2)


            constraint = (New CCpfcComponentConstraint).Create(3)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraint.Offset = -read("distance")


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_4.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            m1.Regenerate(Nothing)

            'asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            'modelItems = listModelItem(m1, "FEATURE")
            'Dim aaa1 As Double()
            'Dim aaa2 As Double()
            'aaa1 = {84, 80}
            'aaa2 = {modelItems.Item(11).Id}
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "TOP", "TOP", 2)
            'aaa1 = {84, ccc}
            'constraints = 面面约束(asmcomp_2, aaa1, aaa2, 73, 69, 0)
            'constraints.Clear()


            'asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            'modelItems = listModelItem(m1, "FEATURE")
            'aaa1 = {84, 83}
            'aaa2 = {modelItems.Item(12).Id}
            'constraints = 面面约束(asmcomp_2, aaa1, aaa2, 73, 69, 2)
            'aaa1 = {84, 80}
            'aaa2 = {modelItems.Item(12).Id}
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "TOP", "TOP", 0)
            'constraints.Clear()
            'RegenerateModel(m1)

            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(7)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            compItem_1 = feats.Item(8)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            'If read("support_block_type") = 1 Then
            '    compItem_1 = feats.Item(10)
            '    compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            '    selBuffer.AddSelection(compSelect_1)
            '方向阵列(read("support_block_array_number"), read("support_block_array_distance"))
            '    'setParamValue(m1, "d92", read("support_block_array_distance"), "浮点型")
            '    'setParamValue(m1, "p94", read("support_block_array_number"), "浮点型")
            'End If

            If read("support_block_type") = 1 Then


                feat = feats.Item(10)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)

                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_dir`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst` `" + read("support_block_array_number").ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr` `" + read("support_block_array_distance").ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")




                轴阵列()
                'setParamValue(m1, "d107", read("support_block_array_distance"), "浮点型")
                'setParamValue(m1, "p109", read("support_block_array_number"), "浮点型")
            Else
                feat = feats.Item(10)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)

                轴阵列()
                'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                'selBuffer.Clear()

            End If



        ElseIf dr3("type") = 1 Then

            '转子铁芯

            smodel_1 = (New CCpfcModelDescriptor).Create(0, read("rotor_core_path"), Nothing)
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            Dim ccc As Double
            m2 = activateModel(read("rotor_core_code"), 0)
            modelItems = listModelItem(m2, "FEATURE")
            ccc = modelItems.Item(7).Id
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)





            '支架
            'smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, "E:\works\creo\coil_brace\coil_support", Nothing)

            smodel_2 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\coil_brace\coil_support.prt", Nothing)


            'AC.Session.GetModel("8sb-130-185", 1)
            'retrieveModel("drw", "E:\works\creo\coil_brace\coil_support")
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(80)
            path1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids) '转子冲片
            part1 = path1.Leaf

            '支架修改sl_pole_shoe_high

            m2 = activateModel("coil_support", 1)
            retrieveModel("drw", "E:\works\creo\coil_brace\coil_support")
            retrieveModel("frm", "E:\works\creo\\coil_brace\part_a4_sb")

            setParamValue(m2, "d5", (dr3("sl_pole_shoe_high") - dr3("sl1_width1") / 2 - dr3("sl1_long1")）, "浮点型")
            setParamValue(m2, "d4", (dr("thickness")）, "浮点型")
            setParamValue(m2, "MATERIAL", read("coil_support_material"), "字符串")

            closeWindow(m2)
            m3 = activateModel("coil_support", 2)
            添加图幅注释(m3, read("T_MOTOR"))
            m2.Rename(read("coil_support_name"), True)
            m3.Rename(read("coil_support_name"), True)
            RegenerateModel(m3)
            smodel = m3.Descr
            smodel.Path = path
            m3.Backup(smodel)



            Threading.Thread.Sleep(2000)
            closeWindow(m3)



            m1 = activateModel("rotor_winding", 0)

            compItem_1 = part1.GetItemByID(1, 73) '侧面 冲片
            compItem_2 = componentModel_2.GetItemByID(1, 71)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path1)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part1.GetItemByID(1, 6992) '缺口侧面
            compItem_4 = componentModel_2.GetItemByID(1, 78)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path1)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part1.GetItemByID(1, 6990) '缺口斜面
            compItem_6 = componentModel_2.GetItemByID(1, 191)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path1)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(2)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            RegenerateModel(m1)

            ''‘’'msgbox(666)
            '磁极绝缘
            smodel_3 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\insulation\magnetic_insulation.prt", Nothing)
            componentModel_3 = AC.Session.RetrieveModel(smodel_3)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_3, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(87)
            path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part2 = path2.Leaf

            '磁极绝缘修改

            m2 = activateModel("magnetic_insulation", 1)

            setParamValue(m2, "d24", dr3("sl1_width1"), "浮点型") '内侧
            setParamValue(m2, "d23", dr("thickness"), "浮点型")
            setParamValue(m2, "d25", dr3("sl1_width1") / 4, "浮点型")
            setParamValue(m2, "d20", (dr3("sl_pole_shoe_width") - dr3("sl1_width1")) / 2, "浮点型") '
            setParamValue(m2, "d22", (dr3("sl_pole_shoe_width") - dr3("sl1_width1")) / 2 - 0.5, "浮点型") '-0.5
            setParamValue(m2, "d19", dr3("sl1_long1"), "浮点型") '
            setParamValue(m2, "d21", dr3("sl1_long1") - 1, "浮点型") '-1
            setParamValue(m2, "MATERIAL", read("magnetic_insulation_material"), "字符串")
            m2.Rename(read("magnetic_insulation_name"), True)
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)

            'GetItemByID

            compItem_1 = part1.GetItemByID(1, 3877)
            compItem_2 = componentModel_3.GetItemByID(1, 269)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path1)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part2.GetItemByID(1, 88) '底边
            compItem_4 = componentModel_3.GetItemByID(1, 283)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part1.GetItemByID(2, 4460)
            compItem_6 = componentModel_3.GetItemByID(2, 253) '侧边
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path1)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)




            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(2)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            '线圈

            smodel_4 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\coil\coil.prt", Nothing)
            componentModel_4 = AC.Session.RetrieveModel(smodel_4)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_4, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_4 = assembly.AssembleComponent(componentModel_4, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    

            Dim a, b, c As Double


            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(8).Id

            idz = (New Cintseq)
            idz.Append(a)
            path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
            '线圈修改

            m2 = activateModel("coil", 1)
            setParamValue(m2, "d31", dr3("sl1_width1") + 1, "浮点型") '内侧
            setParamValue(m2, "d32", dr("thickness") + 1, "浮点型")
            setParamValue(m2, "d33", (dr3("sl1_width1") + 1) / 2, "浮点型")

            setParamValue(m2, "d29", (dr3("sl_pole_shoe_width")) - 1, "浮点型") '
            setParamValue(m2, "d30", dr("thickness") - 1, "浮点型") '-0.5
            setParamValue(m2, "d26", (dr3("sl_pole_shoe_width") - 1) / 4, "浮点型")

            setParamValue(m2, "p12", (dr3("sl1_long1")) - 1, "浮点型") '
            setParamValue(m2, "p23", (dr3("sl1_long1")) - 1, "浮点型") '-1

            setParamValue(m2, "MASS", read("mass"), "浮点型")

            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")


            m2.Rename(read("coli_name"), True)
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)
            m1.Regenerate(Nothing)

            compItem_1 = componentModel_3.GetItemByName(1, "FRONT")
            compItem_2 = componentModel_4.GetItemByName(1, "FRONT")
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path3)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_3.GetItemByName(1, "RIGHT")
            compItem_4 = componentModel_4.GetItemByName(1, "RIGHT")
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path3)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            compItem_5 = componentModel_3.GetItemByID(1, 279)
            compItem_6 = componentModel_4.GetItemByID(1, 1489)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path3)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing）

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(7)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_4.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            '撑块
            smodel_5 = (New CCpfcModelDescriptor).Create(0, read("support_block_path"), Nothing)
            componentModel_5 = AC.Session.RetrieveModel(smodel_5)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_5, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_5 = assembly.AssembleComponent(componentModel_5, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    

            idz = (New Cintseq)
            idz.Append(a)
            path4 = (New CMpfcAssembly).CreateComponentPath(assembly, idz) '绝缘


            modelItems = listModelItem(m1, "FEATURE")
            b = modelItems.Item(10).Id
            m2 = activateModel(read("support_block_code"), 0)

            modelItems = listModelItem(m2, "FEATURE")
            c = modelItems.Item(14).Id
            closeWindow(m2)


            ida = (New Cintseq)
            ida.Append(b)
            ida.Append(c)
            path3 = (New CMpfcAssembly).CreateComponentPath(assembly, ida) '撑块
            part3 = path3.Leaf

            compItem_1 = part1.GetItemByID(1, 73)
            compItem_2 = part3.GetItemByID(1, 76)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path1)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

            compItem_3 = componentModel_3.GetItemByID(1, 273) '绝缘
            compItem_4 = part3.GetItemByID(1, 64) '撑
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path4)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

            compItem_5 = componentModel_3.GetItemByID(1, 275) '顶
            compItem_6 = part3.GetItemByID(1, 74)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path4)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)


            constraint = (New CCpfcComponentConstraint).Create(3)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraint.Offset = -read("distance")


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_5.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            m1.Regenerate(Nothing)

            'asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            'modelItems = listModelItem(m1, "FEATURE")
            'Dim aaa1 As Double()
            'Dim aaa2 As Double()
            'aaa1 = {84, 80}
            'aaa2 = {modelItems.Item(12).Id}
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "TOP", "TOP", 2)
            'aaa1 = {84, ccc}
            'constraints = 面面约束(asmcomp_2, aaa1, aaa2, 73, 69, 0)
            'constraints.Clear()


            'asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            'modelItems = listModelItem(m1, "FEATURE")
            'aaa1 = {84, 83}
            'aaa2 = {modelItems.Item(13).Id}
            'constraints = 面面约束(asmcomp_2, aaa1, aaa2, 73, 69, 2)
            'aaa1 = {84, 80}
            'aaa2 = {modelItems.Item(13).Id}
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            'constraints = 装配约束(asmcomp_2, aaa1, aaa2, 0, 0, 1, 1, "TOP", "TOP", 0)
            'constraints.Clear()
            'RegenerateModel(m1)

            feats = listModelItem(m1, "FEATURE")

            feat = feats.Item(7)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()
            selBuffer.Clear()

            feat = feats.Item(8)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()
            selBuffer.Clear()

            feat = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()
            selBuffer.Clear()


            If read("support_block_type") = 1 Then


                feat = feats.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
                selBuffer.AddSelection(compSelect_1)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_dir`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst` `" + read("support_block_array_number").ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr` `" + read("support_block_array_distance").ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr`;" +
                                "~ Activate `main_dlg_cur` `maindashInst0.ui_pat_dir_1_flip`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                'setParamValue(m1, "d107", read("support_block_array_distance"), "浮点型")
                'setParamValue(m1, "p109", read("support_block_array_number"), "浮点型")

                轴阵列()
            Else
                compItem_1 = feats.Item(10)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()
                'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                'selBuffer.Clear()


            End If




        ElseIf dr3("type") = 2 Then

            assembly = CType(m1, IpfcAssembly) '
            componentModel_1 = 固定零件(assembly, 0, read("rotor_core_path"))
            Dim ccc As Double
            m2 = activateModel(read("rotor_core_code"), 0)
            modelItems = listModelItem(m2, "FEATURE")
            ccc = modelItems.Item(7).Id
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)


            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\magnetic_insulation2.prt")
            m2 = activateModel("magnetic_insulation2", 1)
            setParamValue(m2, "d28", (dr3("a1") - dr3("a26")) / 2 - dr3("a12"), "浮点型") '
            setParamValue(m2, "d27", (dr3("a9") - dr3("a19")), "浮点型") '
            setParamValue(m2, "d32", dr3("a10"), "浮点型") '
            setParamValue(m2, "d33", dr3("a11"), "浮点型")
            setParamValue(m2, "d26", dr3("a22"), "浮点型")

            setParamValue(m2, "d23", dr("thickness"), "浮点型") '
            setParamValue(m2, "d24", dr3("a26"), "浮点型")
            setParamValue(m2, "d25", dr3("a26") / 4, "浮点型")
            setParamValue(m2, "MATERIAL", read("magnetic_insulation_material"), "字符串")


            m2.Rename(read("magnetic_insulation_name"), True)
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)
            a = {84, 80}
            aa = {87} '单
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 面面约束(asmcomp_2, a, aa, 8705, 543, 0)
            constraints.Clear()

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\coil\coil2.prt")
            m2 = activateModel("coil2", 1)

            setParamValue(m2, "d30", dr("thickness"), "浮点型") '
            setParamValue(m2, "d29", (dr3("a1") - dr3("a12") * 2), "浮点型")
            setParamValue(m2, "d26", (dr3("a1") - dr3("a12") * 2) / 4, "浮点型")
            setParamValue(m2, "P12", (dr3("a17") - dr3("a19")), "浮点型")
            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            m2.Rename(read("coli_name"), True)
            Threading.Thread.Sleep(2000)
            closeWindow(m2)
            m1 = activateModel("rotor_winding", 0)

            modelItems = listModelItem(m1, "FEATURE")
            B = modelItems.Item(8).Id
            a = {87}
            aa = {B} '单
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 面面约束(asmcomp_2, a, aa, 559, 2862, 7)
            constraints.Clear()

            asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            modelItems = listModelItem(m1, "FEATURE")
            B = modelItems.Item(9).Id
            a = {84, 80}
            aa = {B}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            a = {84, ccc}

            constraints = 面面约束(asmcomp_2, a, aa, 73, 69, 0)
            constraints.Clear()

            asmcomp_2 = 插入零件_1(assembly, 1, read("coil_support_path"))
            modelItems = listModelItem(m1, "FEATURE")
            B = modelItems.Item(10).Id
            a = {84, 83}
            aa = {B}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 69, 2)
            a = {84, 80}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 0)
            constraints.Clear()

            RegenerateModel(m1)
        End If


        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {250, 500}, {0, 0}, {700, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        End If

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        Dim aaa As IpfcModelItem
        'modelItems = listModelItem(m1, "DTL_NOTE")
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_31")
        修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))



        If dr3("type") = 2 Then
            半视图("view_2", 11)
            刨视图("view_2", "XSEC0001", "fullPlane", 11)


        ElseIf dr3("type") = 3 Then
            半视图("view_1", 10)
            半视图("view_2", 10)
            刨视图("view_2", "XSEC0001", "fullPlane", 9)


        Else
            半视图("view_1", 11)
            半视图("view_2", 11)
            刨视图("view_2", "XSEC0001", "fullPlane", 9)

        End If


        添加图幅注释(m2, read("T_MOTOR"))




        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)



        closeWindow(m8)
        m2 = activateModel(read("code"), 2)
        加入球标()
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)

        零件工程图转移(Replace(read("rotor_core_path"), "asm.", "drw."), path + "\" + read("rotor_core_code") + ".drw.1")
        '转子铁芯明细表
        零件工程图转移(Replace(read("rotor_core_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_core_code") + "_MX" + ".xlsx")
        'xlSheet.SaveAs(path + "\" + name + "_MX" + ".xlsx")
        If read("support_block_path") <> "0" Then
            零件工程图转移(Replace(read("support_block_path"), "asm.", "drw."), path + "\" + read("support_block_code") + ".drw.1")

        End If


        mxs = 明细表(m2)
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))

        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("rotor_core_code") + "_MX" + ".xlsx")
        Threading.Thread.Sleep(1000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 励磁机转子铁芯(localhost$, tabledase$, id As Integer, path$, imageName$)

        mysql_new_chen(localhost$, "creo", "exciter_rotor_assembly", id)
        mysql_new_chen1(localhost$, "creo", "exciter_rotor", read("exciter_rotor_id"))
        Dim c, d As Double
        m1 = openModel("asm", "E:\works\creo\template\exciter_rotor.asm")
        m1 = activateModel("exciter_rotor", 0)
        Threading.Thread.Sleep(1000)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        partValue(m1)

        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        smodel_1 = (New CCpfcModelDescriptor).Create(1, read("exciter_rotor_path"), Nothing) '"E:\works\creo\exciter_rotor\exciter_rotor.prt"
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()
        If read1("type") = 2 Then
            m2 = activateModel(read("exciter_rotor_code"), 1)
            setParamValue(m2, "d4", read("thickness"), "浮点型")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(2000)
            m1 = activateModel("exciter_rotor", 0)
            RegenerateModel(m1)


            mysql_new_chen2(localhost$, "creo", "exciter_rotor_bracket", read("exciter_rotor_bracket_id"))
            'bracket250支架
            smodel_6 = (New CCpfcModelDescriptor).Create(1, read("exciter_rotor_bracket_path"), Nothing) '"E:\works\Creo\exciter_rotor\bracket250.prt"
            componentModel_6 = AC.Session.RetrieveModel(smodel_6)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_6, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_6 = assembly.AssembleComponent(componentModel_6, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型
            'm2 = activateModel(read("exciter_rotor_bracket_code"), 1)
            'm2.Rename(read("bracket_name"), True)
            'Threading.Thread.Sleep(1000)

            '    m1 = activateModel("exc_rotor_wind", 0) 
            ids = (New Cintseq)
            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            compItem_2 = componentModel_6.GetItemByID(1, 89) 'bracket250.prt  拉伸2   
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            compItem_4 = componentModel_6.GetItemByID(1, 96) 'bracket250.prt  拉伸2
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 7028) 'exciter_rotor.prt   拉伸8
            compItem_6 = componentModel_6.GetItemByID(1, 1023) ''bracket250.prt  拉伸10
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            compItem_8 = componentModel_6.GetItemByID(1, 1019) ''bracket250.prt  拉伸10
            compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(5)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraint3 = (New CCpfcComponentConstraint).Create(5)
            constraint3.AssemblyReference = compSelect_7
            constraint3.ComponentReference = compSelect_8

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            constraints.Append(constraint3)
            asmcomp_6.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            'GB_1019键
            smodel_2 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\gb_1069.prt", Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("gb_1069.prt", 1)
            '标准键数据(read1("outside_diameter2"))
            setParamValue(m2, "d5", read2("keyway2_wight"), "浮点型") '固定转子支架的键宽  10
            setParamValue(m2, "d6", read2("keyway2_length"), "浮点型") '固定转子支架的键长  30
            setParamValue(m2, "d4", read2("keyway2_deep") + read1("keyway_long1") + 2, "浮点型")
            m2.Regenerate(Nothing)
            m2.Rename("gb_1069_" + read2("keyway2_wight").ToString + "X" + read2("keyway2_length").ToString, True)

            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exciter_rotor", 0)
            m1.Regenerate(Nothing)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(87)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 1021) 'bracket250.prt  拉伸10
            compItem_2 = componentModel_2.GetItemByID(1, 78) 'GB_1019键 拉伸1  
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 1009) 'bracket250.prt  拉伸10
            compItem_4 = componentModel_2.GetItemByID(1, 64)  'GB_1019键 拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 1023) 'bracket250.prt  拉伸10
            compItem_6 = componentModel_2.GetItemByID(1, 80) 'GB_1019键 拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            'compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            'compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            'compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            'constraint3 = (New CCpfcComponentConstraint).Create(5)
            'constraint3.AssemblyReference = compSelect_7
            'constraint3.ComponentReference = compSelect_8

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            'constraints.Append(constraint3)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            ''‘’'msgbox(111)

            'chuck_ring.prt夹圈

            smodel_7 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\chuck_ring.prt", Nothing)
            componentModel_7 = AC.Session.RetrieveModel(smodel_7)
            m2 = activateModel("chuck_ring", 1)
            setParamValue(m2, "d5", read2("outside_diameter2"), "浮点型")
            m2.CommonName = "夹圈"
            m2.Rename(read("chuck_ring_newname"), True)
            m2.Regenerate(Nothing)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exciter_rotor", 0)
            RegenerateModel(m1)

            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_7, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)


            asmcomp_7 = assembly.AssembleComponent(componentModel_7, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(87)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 986) 'bracket250.prt  旋转1
            compItem_2 = componentModel_7.GetItemByID(1, 76) 'chuck_ring.prt夹圈  拉伸1
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 966) 'bracket250.prt  旋转1
            compItem_4 = componentModel_7.GetItemByID(1, 71)  'GB_1019键 拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByName(1, "TOP") 'bracket250.prt  TOP
            compItem_6 = componentModel_7.GetItemByName(1, "FRONT") 'chuck_ring.prt夹圈  拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            'compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            'compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            'compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            'constraint3 = (New CCpfcComponentConstraint).Create(5)
            'constraint3.AssemblyReference = compSelect_7
            'constraint3.ComponentReference = compSelect_8

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            'constraints.Append(constraint3)
            asmcomp_7.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()



            'pressed_rings压圈
            smodel_3 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\pressed_rings.prt", Nothing)
            componentModel_3 = AC.Session.RetrieveModel(smodel_3)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_3, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("pressed_rings", 1)
            标准键数据(read1("inside_diameter"))
            setParamValue(m2, "d5", read1("inside_diameter"), "浮点型") '压圈内径  50
            setParamValue(m2, "d7", read1("keyway_wight"), "浮点型") '压圈键槽宽  8
            setParamValue(m2, "d8", read1("keyway_long1") + 2, "浮点型") '
            setParamValue(m2, "MATERIAL", read("pressed_rings_material"), "字符串")
            m2.CommonName = "压圈"
            m2.Rename(read("pressed_rings_newname"), True)


            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exciter_rotor", 0)
            AC.Session.RunMacro("8 ~ Command `ProCmdRegenAuto`;")
            asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)

            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 64) 'exciter_rotor.prt  拉伸1
            compItem_2 = componentModel_3.GetItemByID(1, 71) ''pressed_rings 拉伸1  
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt  拉伸1
            compItem_4 = componentModel_3.GetItemByID(1, 88)  ''pressed_rings 拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 7028) 'exciter_rotor.prt  拉伸8
            compItem_6 = componentModel_3.GetItemByID(1, 86) 'pressed_rings 拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            'compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            'compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            'compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(5)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            'constraint3 = (New CCpfcComponentConstraint).Create(5)
            'constraint3.AssemblyReference = compSelect_7
            'constraint3.ComponentReference = compSelect_8

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            'constraints.Append(constraint3)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()




            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

            ''‘’'msgbox(77)
            setParamValue(m1, "p92", read("chuck_ring_number"), "浮点型") '夹圈阵列个数  6
            setParamValue(m1, "d89", 0, "角度"， 360 / read("chuck_ring_number"))
            m1.Regenerate(Nothing)













        ElseIf read1("type") = 1 Then
            m2 = activateModel(read("exciter_rotor_code"), 1)
            setParamValue(m2, "d4", read("thickness"), "浮点型") 'read("thickness")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(2000)
            m1 = activateModel("exciter_rotor", 0)
            RegenerateModel(m1)
            '阵列1/垫圈93
            '标准件自己输入
            'If read("material_model1") = "不锈钢1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
            'ElseIf read("material_model1") = "1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
            'ElseIf read("material_model1") = "达克罗1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
            'End If
            'feats = listModelItem(m1, "FEATURE")
            ''smodel_2 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\standard_part\washers\gb_t93_" + read("washer1_type") + ".prt", Nothing) '"E:\works\creo\standard_part\washers\gb_t93_8.prt"  螺栓垫圈

            'ids = (New Cintseq)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'compItem_1 = componentModel_1.GetItemByID(1, 64) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_2.GetItemByID(1, 7) 'gb_t93_8.prt       伸出项 标识7
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)
            'compItem_3 = componentModel_1.GetItemByID(1, 287) 'exciter_rotor.prt   拉伸3-------------------------------------------------------------------------------------------------------------------------------
            'compItem_4 = componentModel_2.GetItemByID(1, 16)  'gb_t93_8.prt       伸出项 标识7
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)
            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2
            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            'asmcomp_2.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()
            ''阵列2/平垫圈

            'If read("material_model1") = "不锈钢1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
            'ElseIf read("material_model1") = "1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
            'ElseIf read("material_model1") = "达克罗1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
            'End If
            'feats = listModelItem(m1, "FEATURE")
            'c = feats.Item(7).Id
            'd = feats.Item(8).Id
            'a = {c}
            'aa = {d}
            'constraints = 面面约束(asmcomp_2, a, aa, 2, 2， 0)
            'constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            'constraints.Clear()
            '阵列3/螺钉
            If read("material_model1") = "不锈钢1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_316l")
            ElseIf read("material_model1") = "1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_zn")
            ElseIf read("material_model1") = "达克罗1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            a = {84}
            aa = {feats.Item(7).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 18， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 287, 16， 0)
            constraints.Clear()
            If read("material_model1") = "不锈钢1型" Then
                m3 = activateModel(("m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_316l"), 1)
            ElseIf read("material_model1") = "1型" Then
                m3 = activateModel(("m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_zn"), 1)
            ElseIf read("material_model1") = "达克罗1型" Then
                m3 = activateModel(("m" + read("standard_part1") + "x" + read("bolt1_length") + "_gb818_dacromet"), 1)
            End If

            ''msgbox("M" + read("standard_part1").ToString + "X" + read("bolt1_length").ToString + "GB/T_1014")


            RegenerateModel(m3)

            closeWindow(m3)
            ''阵列4/垫圈93
            'If read("material_model2") = "不锈钢1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
            'ElseIf read("material_model2") = "1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
            'ElseIf read("material_model2") = "达克罗1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
            'End If
            'feats = listModelItem(m1, "FEATURE")
            'c = feats.Item(6).Id
            'd = feats.Item(10).Id
            'a = {c}
            'aa = {d}
            'constraints = 面面约束(asmcomp_2, a, aa, 64, 7， 0)
            'constraints = 面面约束(asmcomp_2, a, aa, 744, 16， 0)
            'constraints.Clear()
            ''阵列5/平垫圈
            'If read("material_model2") = "不锈钢1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
            'ElseIf read("material_model2") = "1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
            'ElseIf read("material_model2") = "达克罗1型" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
            'End If
            'feats = listModelItem(m1, "FEATURE")
            'c = feats.Item(10).Id
            'd = feats.Item(11).Id
            'a = {c}
            'aa = {d}
            'constraints = 面面约束(asmcomp_2, a, aa, 2, 2， 0)
            'constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            'constraints.Clear()
            '阵列5/螺钉
            If read("material_model1") = "不锈钢1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_316l")
            ElseIf read("material_model1") = "1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_zn")
            ElseIf read("material_model1") = "达克罗1型" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_dacromet")
            End If
            modelItems = listModelItem(m1, "FEATURE")
            a = {84}
            aa = {modelItems.Item(8).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 18， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 6677, 16， 0)
            constraints.Clear()
            If read("material_model1") = "不锈钢1型" Then
                m4 = activateModel(("m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_316l"), 1)
            ElseIf read("material_model1") = "1型" Then
                m4 = activateModel(("m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_zn"), 1)
            ElseIf read("material_model1") = "达克罗1型" Then
                m4 = activateModel(("m" + read("standard_part2") + "x" + read("bolt2_length") + "_gb818_dacromet"), 1)
            End If


            If m3.FileName = m4.FileName Then
                m3.Rename("m" + read("standard_part1").ToString + "x" + read("bolt1_length").ToString + "_gb_1014", True)
                setParamValue(m3, "PART_NUMBER", "M" + read("standard_part1").ToString + "X" + read("bolt1_length").ToString + "GB/T_1014", "字符串")
                setParamValue(m3, "PART_NAME", "大扁圆头半空心铆钉(GB/T1014)", "字符串")
            Else
                m3.Rename("m" + read("standard_part1").ToString + "x" + read("bolt1_length").ToString + "_gb_1014", True)
                m4.Rename("m" + read("standard_part2").ToString + "x" + read("bolt2_length").ToString + "_gb_1014", True)
                setParamValue(m3, "PART_NUMBER", "M" + read("standard_part1").ToString + "X" + read("bolt1_length").ToString + "GB/T_1014", "字符串")
                setParamValue(m3, "PART_NAME", "大扁圆头半空心铆钉(GB/T1014)", "字符串")
            End If

            closeWindow(m4)


            Threading.Thread.Sleep(3000)
            m1 = activateModel("exciter_rotor", 0)
            feats = listModelItem(m1, "FEATURE")

            selBuffer = AC.Session.CurrentSelectionBuffer
            selBuffer.Clear()
            If read1("bolt_hole2_type") = 1 Then
                参考阵列(feats, 7)
                参考阵列(feats, 8)
                '参考阵列(feats, 9)
                '参考阵列(feats, 10)
                '参考阵列(feats, 11)
                '参考阵列(feats, 12)
                '参考阵列(feats, 13)
                '参考阵列(feats, 14)
                '参考阵列(feats, 15)
                ' 参考阵列(feats, 16)
            End If

            If read1("bolt_hole2_type") = 0 Then
                参考阵列(feats, 7)
                参考阵列(feats, 8)
                '参考阵列(feats, 9)
                '参考阵列(feats, 10)
                '参考阵列(feats, 11)
            End If


        End If


        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {340, 500}, {0, 0}, {740, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {340, 500}, {0, 0}, {740, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {340, 500}, {0, 0}, {740, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {340, 500}, {0, 0}, {740, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.3, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {300, 500}, {0, 0}, {700, 500})
        End If


        刨视图("view_2", "XSEC0001", "fullPlane")
        添加图幅注释(m2, read("T_MOTOR"))
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read1("outer_diameter") <= 200 Then
        '    view2Ds.Item(0).Scale = 8 / 10
        'ElseIf read1("outer_diameter") > 200 And read1("outer_diameter") <= 400 Then
        '    view2Ds.Item(0).Scale = 6 / 10
        'ElseIf read1("outer_diameter") > 400 And read1("outer_diameter") <= 600 Then
        '    view2Ds.Item(0).Scale = 5 / 10
        'ElseIf read1("outer_diameter") > 600 Then
        '    view2Ds.Item(0).Scale = 1 / 2.5
        'End If
        'If read1("outer_diameter") <= 200 Then
        '    view2Ds.Item(1).Scale = 8 / 10
        'ElseIf read1("outer_diameter") > 200 And read1("outer_diameter") <= 400 Then
        '    view2Ds.Item(1).Scale = 6 / 10
        'ElseIf read1("outer_diameter") > 400 And read1("outer_diameter") <= 600 Then
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read1("outer_diameter") > 600 Then
        '    view2Ds.Item(1).Scale = 1 / 2.5
        'End If

        If read1("type") = 2 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node7`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row16` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        Else
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node13`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row29` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        End If
        加入球标()
        modelItems = listModelItem(m2, "DTL_NOTE")
        ''msgbox(1)
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2, read("T_MOTOR"))
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        零件工程图转移(Replace(read("exciter_rotor_path"), "prt", "drw"), path + "\" + read("exciter_rotor_code") + ".drw.1")
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 带绕组励磁机转子铁芯(localhost$, tabledase$, id As Integer, path$, imageName$)
        '数据库
        mysql_new_chen(localhost$, "creo", tabledase$, id)
        mysql_new_chen2(localhost$, "creo", "exciter_rotor_assembly", read("exciter_rotor_assembly_id"))
        mysql_new_chen3(localhost$, "creo", "exciter_rotor", read2("exciter_rotor_id"))
        m1 = openModel("asm", "E:\works\creo\template\exc_rotor_wind.asm")
        m1 = activateModel("exc_rotor_wind", 0)
        partValue(m1)
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        smodel_1 = (New CCpfcModelDescriptor).Create(0, read("exciter_rotor_assembly_path"), Nothing) '"E:\works\creo\exciter_rotor\asm\exciter_rotor.asm"
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()

        If read("type") = 1 Then
            'mysql_new_chen1(localhost$, "creo", "exciter_rotor_bracket", read("exciter_rotor_bracket_id"))
            ''bracket250支架
            'smodel_6 = (New CCpfcModelDescriptor).Create(1, read("exciter_rotor_bracket_path"), Nothing) '"E:\works\Creo\exciter_rotor\bracket250.prt"
            'componentModel_6 = AC.Session.RetrieveModel(smodel_6)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_6, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'asmcomp_6 = assembly.AssembleComponent(componentModel_6, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型
            ''m2 = activateModel(read("exciter_rotor_bracket_code"), 1)
            ''m2.Rename(read("bracket_name"), True)
            ''Threading.Thread.Sleep(1000)

            ''    m1 = activateModel("exc_rotor_wind", 0) 
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_6.GetItemByID(1, 89) 'bracket250.prt  拉伸2   
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            'compItem_4 = componentModel_6.GetItemByID(1, 96) 'bracket250.prt  拉伸2
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            'compItem_5 = part.GetItemByID(1, 7028) 'exciter_rotor.prt   拉伸8
            'compItem_6 = componentModel_6.GetItemByID(1, 1023) ''bracket250.prt  拉伸10
            'compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            'compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            'compItem_8 = componentModel_6.GetItemByID(1, 1019) ''bracket250.prt  拉伸10
            'compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            'compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            'constraint2 = (New CCpfcComponentConstraint).Create(5)
            'constraint2.AssemblyReference = compSelect_5
            'constraint2.ComponentReference = compSelect_6

            'constraint3 = (New CCpfcComponentConstraint).Create(5)
            'constraint3.AssemblyReference = compSelect_7
            'constraint3.ComponentReference = compSelect_8

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            'constraints.Append(constraint2)
            'constraints.Append(constraint3)
            'asmcomp_6.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()

            ''GB_1019键
            'smodel_2 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\gb_1069.prt", Nothing)
            'componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_2, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'm2 = activateModel("gb_1069.prt", 1)
            ''标准键数据(read1("outside_diameter2"))
            'setParamValue(m2, "d5", read1("keyway2_wight"), "浮点型") '固定转子支架的键宽  10
            'setParamValue(m2, "d6", read1("keyway2_length"), "浮点型") '固定转子支架的键长  30
            'setParamValue(m2, "d4", read1("keyway2_deep") + read3("keyway_long1") + 2, "浮点型")
            'm2.Regenerate(Nothing)
            'm2.Rename("gb_1069_" + read1("keyway2_wight").ToString + "X" + read1("keyway2_length").ToString, True)

            'closeWindow(m2)
            'Threading.Thread.Sleep(1000)
            'm1 = activateModel("exc_rotor_wind", 0)
            'm1.Regenerate(Nothing)
            'asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            'ids = (New Cintseq)
            'ids.Append(87)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 1021) 'bracket250.prt  拉伸10
            'compItem_2 = componentModel_2.GetItemByID(1, 78) 'GB_1019键 拉伸1  
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 1009) 'bracket250.prt  拉伸10
            'compItem_4 = componentModel_2.GetItemByID(1, 64)  'GB_1019键 拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            'compItem_5 = part.GetItemByID(1, 1023) 'bracket250.prt  拉伸10
            'compItem_6 = componentModel_2.GetItemByID(1, 80) 'GB_1019键 拉伸1
            'compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            'compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            ''compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            ''compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            ''compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            ''compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(0)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            'constraint2 = (New CCpfcComponentConstraint).Create(0)
            'constraint2.AssemblyReference = compSelect_5
            'constraint2.ComponentReference = compSelect_6

            ''constraint3 = (New CCpfcComponentConstraint).Create(5)
            ''constraint3.AssemblyReference = compSelect_7
            ''constraint3.ComponentReference = compSelect_8

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            'constraints.Append(constraint2)
            ''constraints.Append(constraint3)
            'asmcomp_2.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()

            '''‘’'msgbox(111)

            ''chuck_ring.prt夹圈

            'smodel_7 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\chuck_ring.prt", Nothing)
            'componentModel_7 = AC.Session.RetrieveModel(smodel_7)
            'm2 = activateModel("chuck_ring", 1)
            'setParamValue(m2, "d5", read1("outside_diameter2"), "浮点型")
            'm2.CommonName = "夹圈"
            'm2.Rename(read("chuck_ring_newname"), True)
            'm2.Regenerate(Nothing)
            'closeWindow(m2)
            'Threading.Thread.Sleep(1000)
            'm1 = activateModel("exc_rotor_wind", 0)
            'RegenerateModel(m1)

            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_7, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)


            'asmcomp_7 = assembly.AssembleComponent(componentModel_7, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            'ids = (New Cintseq)
            'ids.Append(87)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 986) 'bracket250.prt  旋转1
            'compItem_2 = componentModel_7.GetItemByID(1, 76) 'chuck_ring.prt夹圈  拉伸1
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 966) 'bracket250.prt  旋转1
            'compItem_4 = componentModel_7.GetItemByID(1, 71)  'GB_1019键 拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            'compItem_5 = part.GetItemByName(1, "TOP") 'bracket250.prt  TOP
            'compItem_6 = componentModel_7.GetItemByName(1, "FRONT") 'chuck_ring.prt夹圈  拉伸1
            'compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            'compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            ''compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            ''compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            ''compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            ''compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2

            'constraint1 = (New CCpfcComponentConstraint).Create(0)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            'constraint2 = (New CCpfcComponentConstraint).Create(0)
            'constraint2.AssemblyReference = compSelect_5
            'constraint2.ComponentReference = compSelect_6

            ''constraint3 = (New CCpfcComponentConstraint).Create(5)
            ''constraint3.AssemblyReference = compSelect_7
            ''constraint3.ComponentReference = compSelect_8

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            'constraints.Append(constraint2)
            ''constraints.Append(constraint3)
            'asmcomp_7.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()
            'Pattern1(8 + 2)
            'Pattern1(4)
            'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")



            '线圈





            'coil线圈1
            'smodel_4 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\coil.prt", Nothing)
            'componentModel_4 = AC.Session.RetrieveModel(smodel_4)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_4, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'asmcomp_4 = assembly.AssembleComponent(componentModel_4, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 64) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_4.GetItemByID(1, 64) 'Exciter_rotor_windings  拉伸1    
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            'compItem_4 = componentModel_4.GetItemByID(1, 78) 'Exciter_rotor_windings  拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            ''compItem_5 = part.GetItemByID(1, 10511) 'exciter_rotor.prt   拉伸5
            ''compItem_6 = componentModel_3.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            ''compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            ''compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            ''constraint2 = (New CCpfcComponentConstraint).Create(0)
            ''constraint2.AssemblyReference = compSelect_5
            ''constraint2.ComponentReference = compSelect_6

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            ''constraints.Append(constraint2)
            'asmcomp_4.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()


            ''Threading.Thread.Sleep(1000)

            ''coil线圈2
            'smodel_5 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\coil.prt", Nothing)
            'componentModel_5 = AC.Session.RetrieveModel(smodel_5)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_5, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'asmcomp_5 = assembly.AssembleComponent(componentModel_5, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_5.GetItemByID(1, 64) 'Exciter_rotor_windings  拉伸1    
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            'compItem_4 = componentModel_5.GetItemByID(1, 78) 'Exciter_rotor_windings  拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            ''compItem_5 = part.GetItemByID(1, 10511) 'exciter_rotor.prt   拉伸5
            ''compItem_6 = componentModel_3.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            ''compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            ''compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            ''constraint2 = (New CCpfcComponentConstraint).Create(0)
            ''constraint2.AssemblyReference = compSelect_5
            ''constraint2.ComponentReference = compSelect_6

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            ''constraints.Append(constraint2)
            'asmcomp_5.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()

            ''Threading.Thread.Sleep(1000)
            'm2 = activateModel("coil", 1)

            'setParamValue(m2, "d15", read3("outer_diameter") - read3("sl_high") * 2 - read3("sl_high_angle") * 2, "浮点型") '槽底直径        3.48
            'setParamValue(m2, "d17", read3("outer_diameter") - read3("sl_y_high") * 2 - read3("sl_diameter") * 2, "浮点型") '槽长   16.25
            'setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            'm2.CommonName = "线圈"
            'm2.Rename(read("coli_name"), True)

            'closeWindow(m2)
            ''Threading.Thread.Sleep(5000)
            'm1 = activateModel("exc_rotor_wind", 0)











            'pressed_rings压圈
            'smodel_3 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\pressed_rings.prt", Nothing)
            'componentModel_3 = AC.Session.RetrieveModel(smodel_3)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_3, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'm2 = activateModel("pressed_rings", 1)
            '标准键数据(read1("inside_diameter"))
            'setParamValue(m2, "d5", read3("inside_diameter"), "浮点型") '压圈内径  50
            'setParamValue(m2, "d7", read3("keyway_wight"), "浮点型") '压圈键槽宽  8
            'setParamValue(m2, "d8", read3("keyway_long1") + 2, "浮点型") '
            'setParamValue(m2, "MATERIAL", read("pressed_rings_material"), "字符串")
            'm2.CommonName = "压圈"
            'm2.Rename(read("pressed_rings_newname"), True)


            'closeWindow(m2)
            'Threading.Thread.Sleep(1000)
            'm1 = activateModel("exc_rotor_wind", 0)
            'AC.Session.RunMacro("8 ~ Command `ProCmdRegenAuto`;")
            'asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 64) 'exciter_rotor.prt  拉伸1
            'compItem_2 = componentModel_3.GetItemByID(1, 71) ''pressed_rings 拉伸1  
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt  拉伸1
            'compItem_4 = componentModel_3.GetItemByID(1, 88)  ''pressed_rings 拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            'compItem_5 = part.GetItemByID(1, 7028) 'exciter_rotor.prt  拉伸8
            'compItem_6 = componentModel_3.GetItemByID(1, 86) 'pressed_rings 拉伸1
            'compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            'compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            ''compItem_7 = part.GetItemByID(1, 7024) 'exciter_rotor.prt   拉伸8
            ''compItem_8 = componentModel_2.GetItemByID(1, 1019) 'GB_1019键 拉伸1
            ''compSelect_7 = (New CMpfcSelect).CreateModelItemSelection(compItem_7, paths)
            ''compSelect_8 = (New CMpfcSelect).CreateModelItemSelection(compItem_8, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            'constraint2 = (New CCpfcComponentConstraint).Create(5)
            'constraint2.AssemblyReference = compSelect_5
            'constraint2.ComponentReference = compSelect_6

            ''constraint3 = (New CCpfcComponentConstraint).Create(5)
            ''constraint3.AssemblyReference = compSelect_7
            ''constraint3.ComponentReference = compSelect_8

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            'constraints.Append(constraint2)
            ''constraints.Append(constraint3)
            'asmcomp_3.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()

            '''msgbox(1)

            '阵列1/ slot_insulation(槽绝缘)
            smodel_8 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\slot_insulation.prt", Nothing)
            componentModel_8 = AC.Session.RetrieveModel(smodel_8)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_8, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("slot_insulation", 1)
            setParamValue(m2, "d4", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m2, "d19", read3("sl_wide2"), "浮点型") '槽宽   6.66
            setParamValue(m2, "d9", read3("sl_diameter"), "浮点型") '槽底直径  3.48
            setParamValue(m2, "d20", read3("sl_y_high") - read3("sl_high") - read3("sl_high_angle"), "浮点型") '槽长   16.25
            setParamValue(m2, "MATERIAL", read("slot_insulation_material"), "字符串")
            m2.CommonName = "槽绝缘"
            m2.Rename(read("slot_insulation"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exc_rotor_wind", 0)
            Threading.Thread.Sleep(500)
            RegenerateModel(m1)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")


            asmcomp_8 = assembly.AssembleComponent(componentModel_8, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            compItem_2 = componentModel_8.GetItemByID(1, 81) 'slot_insulation.prt  拉伸1    
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 7072) 'exciter_rotor.prt   拉伸5
            compItem_4 = componentModel_8.GetItemByID(1, 104) 'slot_insulation.prt  拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 7070) 'exciter_rotor.prt   拉伸5
            compItem_6 = componentModel_8.GetItemByID(1, 102) 'slot_insulation.prt  拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(2)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_8.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            '   Pattern（8 + 6）

            ''‘’'msgbox(1)
            ''‘’'msgbox(1111)
            '阵列2/ slot_wedge(槽楔)
            smodel_9 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\slot_wedge.prt", Nothing)
            componentModel_9 = AC.Session.RetrieveModel(smodel_9)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_9, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("slot_wedge", 1)


            setParamValue(m2, "d4", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m2, "d5", read3("sl_wide"), "浮点型") '槽口宽度 3
            setParamValue(m2, "d19", read3("sl_wide2"), "浮点型") '槽宽   6.66
            setParamValue(m2, "d20", read3("sl_high_angle"), "浮点型", (read3("sl_high_angle"))) '槽角度  120
            m2.CommonName = "槽楔"

            setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
            m2.Rename(read("slot_wedge_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exc_rotor_wind", 0)

            Threading.Thread.Sleep(500)
            RegenerateModel(m1)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")




            asmcomp_9 = assembly.AssembleComponent(componentModel_9, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    



            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf

            compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            compItem_2 = componentModel_9.GetItemByID(1, 81) 'slot_wedge.prt  拉伸1    
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 13357) 'exciter_rotor.prt   拉伸5
            compItem_4 = componentModel_9.GetItemByID(1, 234) 'slot_insulation.prt  拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 13360) 'exciter_rotor.prt   拉伸5
            compItem_6 = componentModel_9.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(2)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_9.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            'Pattern（8 + 6）

            'Pattern（8 + 6）

            '绕组线圈

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\ex_start_wind")
            modelItems = listModelItem(AC.Session.GetModel("exc_rotor_wind", 0), "FEATURE")
            '’'msgbox(0)
            m3 = activateModel("ex_start_wind", 1)


            setParamValue(m3, "d8", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m3, "d9", read3("sl_wide2") - 0.8 * 2, "浮点型") '槽宽   6.66
            setParamValue(m3, "d11", read3("sl_diameter") / 2 - 0.6, "浮点型") '槽底直径  3.48
            setParamValue(m3, "d10", read3("sl_y_high") - read3("sl_high") - read3("sl_high_angle") - 0.6, "浮点型") '槽长   16.25
            'setParamValue(m3, "d46", read("length"), "浮点型") '伸出端长度
            setParamValue(m3, "MATERIAL", read("coli_material"), "字符串")
            setParamValue(m3, "p17", read3("sl_number"), "浮点型")
            setParamValue(m3, "p74", read3("sl_number") / 2, "浮点型")
            setParamValue(m3, "d88", read3("outer_diameter") - read3("sl_y_high"), "浮点型")
            setParamValue(m3, "p74", read3("sl_number") / 2, "浮点型")
            setParamValue(m3, "MASS", read("mass"), "浮点型")
            m3.CommonName = "线圈"
            m3.Rename(read("coli_name"), True)
            RegenerateModel(m3)
            closeWindow(m3)
            aa = {modelItems.Item（9).Id}
            a = {84, 84}
            num = {84}
            constraints = 装配约束(asmcomp_2, num, aa, 0, 0, 1, 1, "ASM_FRONT", "DTM2"， 0)
            constraints = 轴约束(asmcomp_2, num, aa, "AA_1", "A_3")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_RIGHT", "RIGHT", 0)
            constraints.Clear()



            '

            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\mounting_plate")
            'modelItems = listModelItem(AC.Session.GetModel("mounting_plate", 0), "FEATURE")
            '''msgbox(0)
            'm3 = activateModel("mounting_plate", 1)

            'setParamValue(m3, "d8", read2("thickness"), "浮点型") '槽楔长度 43
            'setParamValue(m3, "d9", read3("sl_wide2") - 0.8 * 2, "浮点型") '槽宽   6.66
            'setParamValue(m3, "d11", read3("sl_diameter") / 2 - 0.6, "浮点型") '槽底直径  3.48

            'RegenerateModel(m3)
            'closeWindow(m3)
            'aa = {modelItems.Item（14).Id}
            'a = {84, 84}
            'num = {84}
            'constraints = 面面约束(asmcomp_2, num, aa, 64, 73, 0)
            'constraints = 装配约束(asmcomp_2, num, aa, 0, 0, 1, 1, "ASM_RIGHT", "RIGHT"， 0)
            'constraints = 轴约束(asmcomp_2, num, aa, "A_11", "A_1")


            'If read("material_model2") = "1" Then
            '    If read("screw_pole2") = "GB5782" Then
            '        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_316l")
            '    Else
            '        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_304")
            '    End If
            'ElseIf read("material_model2") = "2" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_zn")
            'ElseIf read("material_model2") = "3" Then
            '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_dacromet")
            'End If
            'feats = listModelItem(m1, "FEATURE")
            'd = feats.Item(15).Id
            'E = feats.Item(16).Id
            'dou1 = {d}
            'dou2 = {E}
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            'constraints.Clear()




            ' ’'msgbox(1)
            参考阵列(feats, 7)
            参考阵列(feats, 8)
        ElseIf read("type") = 0 Then
            Threading.Thread.Sleep(2000)
            'coil线圈1
            'smodel_4 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\coil.prt", Nothing)
            'componentModel_4 = AC.Session.RetrieveModel(smodel_4)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_4, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'asmcomp_4 = assembly.AssembleComponent(componentModel_4, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 64) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_4.GetItemByID(1, 64) 'Exciter_rotor_windings  拉伸1    
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            'compItem_4 = componentModel_4.GetItemByID(1, 78) 'Exciter_rotor_windings  拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            ''compItem_5 = part.GetItemByID(1, 10511) 'exciter_rotor.prt   拉伸5
            ''compItem_6 = componentModel_3.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            ''compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            ''compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            ''constraint2 = (New CCpfcComponentConstraint).Create(0)
            ''constraint2.AssemblyReference = compSelect_5
            ''constraint2.ComponentReference = compSelect_6

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            ''constraints.Append(constraint2)
            'asmcomp_4.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()



            ''Threading.Thread.Sleep(1000)
            '''‘’'msgbox(123)
            ''coil线圈2
            'smodel_5 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\coil.prt", Nothing)
            'componentModel_5 = AC.Session.RetrieveModel(smodel_5)
            'excludes = New CpfcModelItemTypes
            'excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            'excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            'excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            'viewer = CType(componentModel_5, IpfcViewOwner)
            'View_creo = viewer.GetView("RIGHT")
            'transform3D_1 = View_creo.Transform
            'outline = assembly.EvalOutline(transform3D_1, excludes)
            'p3d = outline.Item(1)
            'asmcomp_5 = assembly.AssembleComponent(componentModel_5, transform3D_1)
            'model.Display()
            'AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            'AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            'ids = (New Cintseq)
            'ids.Append(84)
            'ids.Append(84)
            'paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            'part = paths.Leaf

            'compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            'compItem_2 = componentModel_5.GetItemByID(1, 64) 'Exciter_rotor_windings  拉伸1    
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            'compItem_3 = part.GetItemByID(1, 6206) 'exciter_rotor.prt   拉伸2
            'compItem_4 = componentModel_5.GetItemByID(1, 78) 'Exciter_rotor_windings  拉伸1
            'compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            'compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            ''compItem_5 = part.GetItemByID(1, 10511) 'exciter_rotor.prt   拉伸5
            ''compItem_6 = componentModel_3.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            ''compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            ''compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            'constraint = (New CCpfcComponentConstraint).Create(0)
            'constraint.AssemblyReference = compSelect_1
            'constraint.ComponentReference = compSelect_2


            'constraint1 = (New CCpfcComponentConstraint).Create(2)
            'constraint1.AssemblyReference = compSelect_3
            'constraint1.ComponentReference = compSelect_4

            ''constraint2 = (New CCpfcComponentConstraint).Create(0)
            ''constraint2.AssemblyReference = compSelect_5
            ''constraint2.ComponentReference = compSelect_6

            'constraints.Append(constraint)
            'constraints.Append(constraint1)
            ''constraints.Append(constraint2)
            'asmcomp_5.SetConstraints(constraints, Nothing)
            'AC.Session.CurrentWindow.Refresh()
            'constraints.Clear()
            'm2 = activateModel("coil", 1)
            'setParamValue(m2, "d15", read3("outer_diameter") - read3("sl_high") * 2 - read3("sl_high_angle") * 2, "浮点型") '槽底直径        3.48
            'setParamValue(m2, "d17", read3("outer_diameter") - read3("sl_y_high") * 2 - read3("sl_diameter") * 2, "浮点型") '槽长   16.25
            'setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            'm2.CommonName = "线圈"
            'm2.Rename(read("coli_name"), True)

            'closeWindow(m2)
            m1 = activateModel("exc_rotor_wind", 0)
            Threading.Thread.Sleep(500)
            RegenerateModel(m1)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
            '阵列1/ slot_insulation(槽绝缘)
            smodel_8 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\slot_insulation.prt", Nothing)
            componentModel_8 = AC.Session.RetrieveModel(smodel_8)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_8, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("slot_insulation", 1)

            setParamValue(m2, "d4", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m2, "d19", read3("sl_wide2"), "浮点型") '槽宽   6.66
            setParamValue(m2, "d9", read3("sl_diameter"), "浮点型") '槽底直径  3.48
            setParamValue(m2, "d20", read3("sl_y_high") - read3("sl_high") - read3("sl_high_angle"), "浮点型") '槽长   16.25
            setParamValue(m2, "MATERIAL", read("slot_insulation_material"), "字符串")
            m2.CommonName = "槽绝缘"
            m2.Rename(read("slot_insulation"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exc_rotor_wind", 0)
            Threading.Thread.Sleep(500)
            RegenerateModel(m1)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
            asmcomp_8 = assembly.AssembleComponent(componentModel_8, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf



            compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            compItem_2 = componentModel_8.GetItemByID(1, 81) 'slot_insulation.prt  拉伸1    
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 7072) 'exciter_rotor.prt   拉伸5
            compItem_4 = componentModel_8.GetItemByID(1, 104) 'slot_insulation.prt  拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 7070) 'exciter_rotor.prt   拉伸5
            compItem_6 = componentModel_8.GetItemByID(1, 102) 'slot_insulation.prt  拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(2)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_8.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            ''‘’'msgbox(11111)
            ' Pattern（8 + 2） '标记

            '阵列2/ slot_wedge(槽楔)
            smodel_9 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\ex_ro_co_win_bra_asm\slot_wedge.prt", Nothing)
            componentModel_9 = AC.Session.RetrieveModel(smodel_9)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_9, IpfcViewOwner)
            View_creo = viewer.GetView("RIGHT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            m2 = activateModel("slot_wedge", 1)
            setParamValue(m2, "d4", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m2, "d5", read3("sl_wide"), "浮点型") '槽口宽度 3
            setParamValue(m2, "d19", read3("sl_wide2"), "浮点型") '槽宽   6.66
            setParamValue(m2, "d20", read3("sl_high_angle"), "浮点型", (read3("sl_high_angle"))) '槽角度  120

            setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
            m2.CommonName = "槽楔"
            m2.Rename(read("slot_wedge_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("exc_rotor_wind", 0)
            Threading.Thread.Sleep(500)
            RegenerateModel(m1)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
            asmcomp_9 = assembly.AssembleComponent(componentModel_9, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    


            ids = (New Cintseq)
            ids.Append(84)
            ids.Append(84)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part = paths.Leaf


            compItem_1 = part.GetItemByID(1, 67) 'exciter_rotor.prt   拉伸1
            compItem_2 = componentModel_9.GetItemByID(1, 81) 'slot_wedge.prt  拉伸1    
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part.GetItemByID(1, 13357) 'exciter_rotor.prt   拉伸5
            compItem_4 = componentModel_9.GetItemByID(1, 234) 'slot_insulation.prt  拉伸1
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = part.GetItemByID(1, 13360) 'exciter_rotor.prt   拉伸5
            compItem_6 = componentModel_9.GetItemByID(1, 114) 'slot_insulation.prt  拉伸1
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(2)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2


            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_9.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            ''‘’'msgbox(6)
            'Pattern（8 + 2）

            ' Pattern（8 + 2） ’标记2
            '绕组线圈

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\ex_start_wind")
            modelItems = listModelItem(AC.Session.GetModel("exc_rotor_wind", 0), "FEATURE")
            '’'msgbox(0)
            m3 = activateModel("ex_start_wind", 1)


            setParamValue(m3, "d8", read2("thickness"), "浮点型") '槽楔长度 43
            setParamValue(m3, "d9", read3("sl_wide2") - 1 * 2, "浮点型") '槽宽   6.66
            setParamValue(m3, "d11", read3("sl_diameter") / 2 - 0.6, "浮点型") '槽底直径  3.48
            setParamValue(m3, "d10", read3("sl_y_high") - read3("sl_high") - read3("sl_high_angle") - 0.6, "浮点型") '槽长   16.25
            'setParamValue(m3, "d46", read("length"), "浮点型") '伸出端长度
            'setParamValue(m3, "MATERIAL", read("slot_insulation_material"), "字符串")
            setParamValue(m3, "MATERIAL", read("coli_material"), "字符串")
            setParamValue(m3, "p17", read3("sl_number"), "浮点型")
            setParamValue(m3, "p74", read3("sl_number") / 2, "浮点型")
            setParamValue(m3, "d88", read3("outer_diameter") - read3("sl_y_high") * 2, "浮点型")
            setParamValue(m3, "p74", read3("sl_number") / 2, "浮点型")
            setParamValue(m3, "MASS", read("mass"), "浮点型")
            m3.CommonName = "线圈"
            m3.Rename(read("coli_name"), True)
            closeWindow(m3)
            aa = {modelItems.Item(9).Id}
            a = {84, 84}
            num = {84}
            ' constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_RIGHT", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, num, aa, 0, 0, 1, 1, "ASM_FRONT", "DTM2"， 0)
            constraints = 轴约束(asmcomp_2, num, aa, "AA_1", "A_3")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_RIGHT", "RIGHT", 0)
            constraints.Clear()


            参考阵列(modelItems, 7)
            参考阵列(modelItems, 8)
            ' ’'msgbox(1)
        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {200, 270}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {200, 300}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        End If

        刨视图("view_1", "XSEC0001", "fullPlane")
        添加图幅注释(m2, read("T_MOTOR"))


        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        'If read3("outer_diameter") <= 200 Then
        '    view2Ds.Item(0).Scale = 1 / 1
        'ElseIf read3("outer_diameter") > 200 And read3("outer_diameter") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        'ElseIf read3("outer_diameter") > 400 And read3("outer_diameter") <= 600 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read3("outer_diameter") > 600 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'End If
        'If read3("outer_diameter") <= 200 Then
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read3("outer_diameter") > 200 And read3("outer_diameter") <= 400 Then
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read3("outer_diameter") > 400 And read3("outer_diameter") <= 600 Then
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read3("outer_diameter") > 600 Then
        '    view2Ds.Item(1).Scale = 1 / 5
        'End If



        If read("type") = 0 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node3`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row6` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row7` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")



        Else
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node3`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row6` `show`;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row7` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

        End If

        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        '修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)

        closeWindow(m8)
        m2 = activateModel(read("code"), 2)
        加入球标()
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        零件工程图转移(Replace(read("exciter_rotor_assembly_path"), "asm.", "drw."), path + "\" + read("exciter_rotor_assembly_code") + ".drw.1")
        零件工程图转移(Replace(read("exciter_rotor_assembly_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("exciter_rotor_assembly_code") + "_MX" + ".xlsx")
        If read("exciter_rotor_bracket_path") <> "0" Then
            零件工程图转移(Replace(read("exciter_rotor_bracket_path"), "asm.", "drw."), path + "\" + read("exciter_rotor_bracket_code") + ".drw.1")
        End If
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("exciter_rotor_assembly_code") + "_MX" + ".xlsx")

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()


    End Sub
    Public Sub 励磁机转子总成(localhost$, tabledase$, id As Integer, path$, imageName$)
        '数据库
        mysql_new_chen(localhost$, "creo", tabledase$, id)
        mysql_new(localhost$, "creo", "ex_ro_co_asm", read("exciter_rotor_win_assembly_id"))
        mysql_new_chen2(localhost$, "creo", "exciter_rotor_assembly", dr("exciter_rotor_assembly_id"))
        mysql_new_chen3(localhost$, "creo", "exciter_rotor", read2("exciter_rotor_id"))

        m1 = openModel("asm", "E:\works\creo\template\exc_rotor_wind.asm")
        m1 = activateModel("exc_rotor_wind", 0)
        partValue(m1)


        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        assembly = CType(m1, IpfcAssembly) '
        componentModel_1 = 固定零件(assembly, 0, read("exciter_rotor_win_assembly_path"))
        Dim c, d As Double
        If read3("type") <> 2 Then
            If read("racket_type") = 0 Then


                '垫圈
                If read("material_model1") = "不锈钢1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_316l")
                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")

                d = feats.Item(7).Id
                a = {84, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 746, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
                constraints.Clear()

                If read("material_model1") = "不锈钢1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1").ToString + "_gb93_316l")
                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1").ToString + "_gb93_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1").ToString + "_gb93_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(7).Id
                d = feats.Item(8).Id
                a = {c}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
                constraints.Clear()
                If read("material_model1") = "不锈钢1型" Then

                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_316l")

                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(6).Id
                d = feats.Item(9).Id
                a = {84, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 746, 16, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 67, 47, 0)
                constraints.Clear()



                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_bra_asm\rectifier")
                m4 = activateModel("rectifier", 1)
                Threading.Thread.Sleep(1000)
                m4.Rename(read("washer1"), True)
                Threading.Thread.Sleep(1000)
                closeWindow(m4)
                m1 = activateModel("exc_rotor_wind", 0)
                assembly = CType(m1, IpfcAssembly)
                feats = listModelItem(m1, "FEATURE")
                d = feats.Item(10).Id
                a = {84, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 746, 193， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 64， 0)
                constraints.Clear()




                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(7)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()
                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(12)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(17)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(22)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列2()

            Else

                asmcomp_2 = 插入零件_1(assembly, 0, "E:\works\creo\ex_ro_co_win_bra_asm\mounting_plate2")
                m2 = retrieveModel("drw", "E:\works\creo\ex_ro_co_win_bra_asm\mounting_plate2")
                m2 = retrieveModel("drw", "E:\works\creo\ex_ro_co_win_bra_asm\mounting_plate")

                a = {84, 84, 84}
                aa = {87, 87}
                constraints = 面面约束(asmcomp_2, a, aa, 67, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_11", "A_2")
                a = {84}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_RIGHT", "RIGHT"， 0)
                constraints.Clear()




                m3 = activateModel("mounting_plate", 1)


                setParamValue(m3, "d8", read3("lightening_hole_diameter"), "浮点型") '槽楔长度 43
                setParamValue(m3, "d7", read3("lightening_hole_X"), "浮点型") '
                setParamValue(m3, "d6", read3("lightening_hole_Y"), "浮点型")
                setParamValue(m3, "d5", read3("lightening_hole_diameter") + 2, "浮点型")



                m4 = activateModel("mounting_plate", 2)
                RegenerateModel(m4)
                drawing = CType(m4, IpfcDrawing)
                modelItems = listModelItem(m4, "DTL_NOTE")

                添加图幅注释(m4， read("T_MOTOR"))
                Threading.Thread.Sleep(1000)
                m4.Rename(read("CODE") + "_02_01", True)
                m3.Rename(read("CODE") + "_02_01", True)
                activateModel(m3.FileName, 1)
                RegenerateModel(m3)
                smodel = drawing.Descr
                smodel.Path = path
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
                closeWindow(m3)
                closeWindow(m4)

                m3 = activateModel("mounting_plate2", 0)
                assembly = CType(m3, IpfcAssembly) '
                If read("material_model1") = "不锈钢1型" Then

                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_316l")

                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_dacromet")
                End If
                feats = listModelItem(m3, "FEATURE")
                c = feats.Item(6).Id
                d = feats.Item(7).Id
                a = {c}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 86, 16, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 73, 47, 0)
                constraints.Clear()

                If read("material_model1") = "不锈钢1型" Then

                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_316l")

                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_dacromet")
                End If
                feats = listModelItem(m3, "FEATURE")
                c = feats.Item(6).Id
                d = feats.Item(8).Id
                a = {c}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 82, 16, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 73, 47, 0)
                constraints.Clear()


                m4 = activateModel("mounting_plate2", 2)
                Threading.Thread.Sleep(1000)
                m4.Rename(read("CODE") + "_02", True)
                m3.Rename(read("CODE") + "_02", True)
                activateModel(m3.FileName, 0)
                RegenerateModel(m3)
                smodel = drawing.Descr
                smodel.Path = path
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
                closeWindow(m3)
                closeWindow(m4)




                m1 = activateModel("exc_rotor_wind", 0)
                assembly = CType(m1, IpfcAssembly)

                '垫圈
                If read("material_model1") = "不锈钢1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_316l")
                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")

                d = feats.Item(8).Id
                a = {84, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 746, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
                constraints.Clear()

                If read("material_model1") = "不锈钢1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1").ToString + "_gb93_316l")
                ElseIf read("material_model1") = "1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1").ToString + "_gb93_zn")
                ElseIf read("material_model1") = "达克罗1型" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1").ToString + "_gb93_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                d = feats.Item(9).Id
                a = {c}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
                constraints.Clear()


                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_bra_asm\rectifier")
                m4 = activateModel("rectifier", 1)
                Threading.Thread.Sleep(1000)
                m4.Rename(read("washer1"), True)
                Threading.Thread.Sleep(1000)
                closeWindow(m4)
                m1 = activateModel("exc_rotor_wind", 0)
                assembly = CType(m1, IpfcAssembly)

                feats = listModelItem(m1, "FEATURE")
                d = feats.Item(10).Id
                a = {84, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 746, 193， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 64， 0)
                constraints.Clear()




                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(7)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列2()

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(10)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(15)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列()

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(20)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                轴阵列2()

            End If


        Else


            '垫圈
            If read("material_model1") = "不锈钢1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_316l")
            ElseIf read("material_model1") = "1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_zn")
            ElseIf read("material_model1") = "达克罗1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb97.1" + "\d" + read("standard_part1").ToString + "_" + Replace("gb97.1", ".", "_") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")

            d = feats.Item(7).Id
            a = {84, 84, 87}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 3185, 16， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints.Clear()

            If read("material_model1") = "不锈钢1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1").ToString + "_gb93_316l")
            ElseIf read("material_model1") = "1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1").ToString + "_gb93_zn")
            ElseIf read("material_model1") = "达克罗1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1").ToString + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(7).Id
            d = feats.Item(8).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
            constraints.Clear()
            If read("material_model1") = "不锈钢1型" Then

                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_316l")

            ElseIf read("material_model1") = "1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_zn")
            ElseIf read("material_model1") = "达克罗1型" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "GB5782" + "\" + "m" + read("standard_part1").ToString + "x" + read("screw_pole_length1").ToString + "_" + Replace("GB5782", "GB", "gb") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(6).Id
            d = feats.Item(9).Id
            a = {84, 84, 87}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 3185, 16, 0)
            constraints = 面面约束(asmcomp_2, a, aa, 67, 47, 0)
            constraints.Clear()



            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_bra_asm\rectifier")
            m4 = activateModel("rectifier", 1)
            Threading.Thread.Sleep(1000)
            m4.Rename(read("washer1"), True)
            Threading.Thread.Sleep(1000)
            closeWindow(m4)
            m1 = activateModel("exc_rotor_wind", 0)
            assembly = CType(m1, IpfcAssembly)
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(10).Id
            a = {84, 84, 87}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 3185, 195， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 64, 64， 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 5)
            'MsgBox(11)
            constraints.Clear()




            modelItems = listModelItem(m1, "FEATURE")
            compItem_1 = modelItems.Item(7)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()
            modelItems = listModelItem(m1, "FEATURE")
            compItem_1 = modelItems.Item(12)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()

            modelItems = listModelItem(m1, "FEATURE")
            compItem_1 = modelItems.Item(17)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列()

            modelItems = listModelItem(m1, "FEATURE")
            compItem_1 = modelItems.Item(22)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            轴阵列2()





        End If






        Dim inspect As String
        'inspect = 干涉检查(m1)
        '创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {200, 270}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {200, 300}, {300, 500}, {0, 0}, {500, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 0, 0, 1, REQUIREMENT, {300, 400}, {300, 500}, {0, 0}, {500, 500})
        End If


        刨视图("view_1", "XSEC0001", "fullPlane")




        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + "view_1" + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `orient_method_op` 1 `angles`;" +
                               " ~ Update `drawing_view` `AngleValue` `180`;" +
                               " ~ Activate `drawing_view` `psh_ok`;")











        添加图幅注释(m2, read("T_MOTOR"))


        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))




        'If read3("outer_diameter") <= 200 Then
        '    view2Ds.Item(0).Scale = 1 / 1
        'ElseIf read3("outer_diameter") > 200 And read3("outer_diameter") <= 400 Then
        '    view2Ds.Item(0).Scale = 1 / 1.5
        'ElseIf read3("outer_diameter") > 400 And read3("outer_diameter") <= 600 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read3("outer_diameter") > 600 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'End If
        'If read3("outer_diameter") <= 200 Then
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read3("outer_diameter") > 200 And read3("outer_diameter") <= 400 Then
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read3("outer_diameter") > 400 And read3("outer_diameter") <= 600 Then
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read3("outer_diameter") > 600 Then
        '    view2Ds.Item(1).Scale = 1 / 5
        'End If
        'modelItems = listModelItem(m2, "DTL_NOTE")
        '修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        '修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)

        closeWindow(m8)
        m2 = activateModel(read("code"), 2)
        加入球标()
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        '零件工程图转移(Replace(read("exciter_rotor_assembly_path"), "asm.", "drw."), path + "\" + read("exciter_rotor_assembly_code") + ".drw.1")
        '零件工程图转移(Replace(read("exciter_rotor_assembly_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("exciter_rotor_assembly_code") + "_MX" + ".xlsx")
        'If read("exciter_rotor_bracket_path") <> "0" Then
        '    零件工程图转移(Replace(read("exciter_rotor_bracket_path"), "asm.", "drw."), path + "\" + read("exciter_rotor_bracket_code") + ".drw.1")
        'End If
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        '明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("exciter_rotor_assembly_code") + "_MX" + ".xlsx")

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()


    End Sub





    Public Sub 转子(localhost$, tabledase$, code As Integer, path$, imageName$)
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        mysql_new2(localhost$, "creo", tabledase$, code)
        mysql_new6(localhost$, "creo", "ex_ro_asm", read("exciter_rotor_id"))
        mysql_new(localhost$, "creo", "ex_ro_co_asm", dr6("exciter_rotor_win_assembly_id"))
        mysql_new_chen1(localhost$, "creo", "exciter_rotor_assembly", dr("exciter_rotor_assembly_id"))

        mysql_new3(localhost$, "creo", "fan", read("fan_id"))
        mysql_new4(localhost$, "creo", "rotor_shaft", read("rotor_shaft_id"))
        mysql_new5(localhost$, "creo", "ro_co_win_asm", read("rotor_winding_id"))

        partValue(m1)
        setParamValue(m1, "PART_NAME", read("NAME"), "字符串")

        If read("type") = 2 Then '单支撑

            smodel_8 = (New CCpfcModelDescriptor).Create(0, read("exciter_rotor_path"), Nothing) '励磁机转子
            componentModel_8 = AC.Session.RetrieveModel(smodel_8)
            asmcomp_2 = assembly.AssembleComponent(componentModel_8, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            '/////////////////////////
            '轴
            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("rotor_shaft_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            constraints = New CpfcComponentConstraints

            If read1("exciter_rotor_bracket_path") = "0" Then
                '/////////////////////无支架
                ids = (New Cintseq)
                ids.Append(84)
                ids.Append(84)
                ids.Append(84)
                ids.Append(84)
                paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                part2 = paths.Leaf '励磁机转子冲片

                compItem_1 = part2.GetItemByID(1, 67) '侧面
                compItem_2 = componentModel_2.GetItemByID(1, 346)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = part2.GetItemByID(1, 6206) '同心
                compItem_4 = componentModel_2.GetItemByID(1, 424)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = part2.GetItemByName(1, "TOP")
                compItem_6 = componentModel_2.GetItemByName(1, "FRONT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(2)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
                '//////////////////////////////
            Else
                '/////////////////////有支架
                ids = (New Cintseq)
                ids.Append(84)
                ids.Append(84)
                ids.Append(84)
                ids.Append(87)
                paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                part2 = paths.Leaf '励磁机支架

                compItem_1 = part2.GetItemByID(1, 67) '侧面
                compItem_2 = componentModel_2.GetItemByID(1, 346)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = part2.GetItemByID(1, 139) '同心
                compItem_4 = componentModel_2.GetItemByID(1, 424)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = part2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = componentModel_2.GetItemByName(1, "FRONT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(2)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
                '//////////////////////////////
            End If


            smodel_1 = (New CCpfcModelDescriptor).Create(0, read("rotor_winding_path"), Nothing) '转子铁芯
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)

            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()



            feats = listModelItem(m1, "FEATURE")
            Dim a As Double
            a = feats.Item(8).Id




            ids = (New Cintseq)
            ids.Append(a)
            ids.Append(84)
            ids.Append(80)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part1 = paths.Leaf '转子冲片





            ids = (New Cintseq)
            ids.Append(87) '轴
            path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_1 = part1.GetItemByID(1, 70)
            compItem_2 = componentModel_2.GetItemByID(1, 263)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)

            compItem_3 = part1.GetItemByID(1, 97)
            compItem_4 = componentModel_2.GetItemByID(1, 294)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path2)

            compItem_5 = part1.GetItemByID(1, 2385)
            compItem_6 = componentModel_2.GetItemByID(1, 922)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path2)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_2
            constraint.ComponentReference = compSelect_1

            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_4
            constraint1.ComponentReference = compSelect_3

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_6
            constraint2.ComponentReference = compSelect_5

            constraints.Append(constraint)
            constraints.Append(constraint1)
            'constraints.Append(constraint2)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            If dr3("type") = 1 Then
                '风扇
                '180风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(1, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = componentModel_3.GetItemByID(1, 94)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直径
                compItem_4 = componentModel_3.GetItemByID(1, 96)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = componentModel_2.GetItemByID(1, 840) '键面
                compItem_6 = componentModel_3.GetItemByID(1, 779)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                'constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            ElseIf dr3("type") = 2 Then
                '200风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(1, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()




                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = componentModel_3.GetItemByID(1, 94)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直径
                compItem_4 = componentModel_3.GetItemByID(1, 96)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = componentModel_2.GetItemByID(1, 840) '键面
                compItem_6 = componentModel_3.GetItemByID(1, 779)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            ElseIf dr3("type") = 3 Then
                ''250风扇Replace(read("fan_path"), ".prt.1", ".asm.1")
                smodel_3 = (New CCpfcModelDescriptor).Create(0, Replace(read("fan_path"), ".prt.1", ".asm.1"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()
                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 81)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

            ElseIf dr3("type") = 4 Then
                '280风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()
                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()


            ElseIf dr3("type") = 5 Then
                '355风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()

                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)


                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2



                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4


                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

            ElseIf dr3("type") = 6 Then
                '400风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()



                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)


                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2



                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4


                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            End If


            '轴套  联轴器
            smodel_4 = (New CCpfcModelDescriptor).Create(1, read("shaft_sleeve_path"), Nothing)
            componentModel_4 = AC.Session.RetrieveModel(smodel_4)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_4, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_4, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            compItem_1 = componentModel_2.GetItemByID(1, 70) '圆弧
            compItem_2 = componentModel_4.GetItemByID(1, 545)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_2.GetItemByID(1, 170) '侧面
            compItem_4 = componentModel_4.GetItemByID(1, 73)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

            compItem_5 = componentModel_2.GetItemByID(1, 783) '键  面
            compItem_6 = componentModel_4.GetItemByID(1, 539)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraint2 = (New CCpfcComponentConstraint).Create(5)
            constraint2.AssemblyReference = compSelect_5
            constraint2.ComponentReference = compSelect_6

            constraints.Append(constraint)
            constraints.Append(constraint1)
            constraints.Append(constraint2)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            '联轴器片
            smodel_5 = (New CCpfcModelDescriptor).Create(1, read("Coupling_piece_path"), Nothing)
            componentModel_5 = AC.Session.RetrieveModel(smodel_5)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_5, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_5, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(10).Id

            ids = (New Cintseq)
            ids.Append(a)
            path3 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_1 = componentModel_4.GetItemByID(1, 105) '圆弧
            compItem_2 = componentModel_5.GetItemByID(1, 92)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path3)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_4.GetItemByID(1, 70) '侧面
            compItem_4 = componentModel_5.GetItemByID(1, 64)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path3)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            '平衡环
            smodel_6 = (New CCpfcModelDescriptor).Create(1, read("gimbals_path"), Nothing)
            componentModel_6 = AC.Session.RetrieveModel(smodel_6)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_6, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_6, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(8).Id

            m2 = activateModel(read("rotor_winding_code"), 0)
            m3 = activateModel(dr5("rotor_core_code"), 0)
            feats = listModelItem(m3, "FEATURE")
            closeWindow(m3)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            ids = (New Cintseq)
            ids.Append(a)
            ids.Append(84)
            ids.Append(feats.Item(10).Id) '523
            path4 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)


            part4 = path4.Leaf

            compItem_1 = componentModel_2.GetItemByID(1, 294) '圆弧   轴
            compItem_2 = componentModel_6.GetItemByID(1, 76)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part4.GetItemByID(1, 73) '侧面
            compItem_4 = componentModel_6.GetItemByID(1, 64)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path4)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()


            ''标准件
            '垫圈-1 平衡环上




            Dim d, e As Double

            Dim dou1, dou2 As Double()

            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(12).Id
            e = feats.Item(13).Id

            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 1086, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 69, 2, 0)
            constraints.Clear()


            ''螺栓 -1

            If read("material_model1") = "1" Then
                If read("screw_pole1") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
                End If

            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(13).Id
            e = feats.Item(14).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            constraints.Clear()

            '垫圈-2
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(11).Id
            e = feats.Item(15).Id

            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 121, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 67, 2, 0)
            constraints.Clear()

            ''螺栓 -2

            If read("material_model2") = "1" Then
                If read("screw_pole2") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_304")
                End If
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole2") + "\" + "m" + read("standard_part2") + "x" + read("screw_pole_length2") + "_" + Replace(read("screw_pole2"), "GB", "gb") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(15).Id
            e = feats.Item(16).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            constraints.Clear()


            '平衡铁
            smodel_7 = (New CCpfcModelDescriptor).Create(1, read("balance_iron_path"), Nothing)
            componentModel_7 = AC.Session.RetrieveModel(smodel_7)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_7, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_7, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(12).Id

            ids = (New Cintseq)
            ids.Append(a)
            path6 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_1 = componentModel_6.GetItemByID(1, 214) '圆弧   
            compItem_2 = componentModel_7.GetItemByID(1, 78)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path6)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_6.GetItemByID(1, 69) '侧面
            compItem_4 = componentModel_7.GetItemByID(1, 64)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path6)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2



            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4



            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()




            '垫圈-2
            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(17).Id
            e = feats.Item(18).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 78, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 69, 2, 0)
            constraints.Clear()



            'GB_T6170_M6 螺母

            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part3") + "_gb6170_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part3") + "_gb6170_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part3") + "_gb6170_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(12).Id
            e = feats.Item(19).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 214, 474, 0) '圆
            constraints = 面面约束(asmcomp_2, dou1, dou2, 64, 456, 0) '侧
            constraints.Clear()



            '螺杆
            If read("material_model3") = "1" Then


                If read("screw_pole3") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")
                End If
            ElseIf read("material_model3") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
            ElseIf read("material_model3") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
            End If  '螺杆
            feats = listModelItem(m1, "FEATURE")

            d = feats.Item(18).Id
            e = feats.Item(20).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            constraints.Clear()



            '挡圈
            插入固定零件("挡圈" + read("check_ring1").ToString, "gb_t894_" + read("check_ring1"), "")

            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring1"))
            'feats = listModelItem(m1, "FEATURE")

            'e = feats.Item(21).Id
            'dou1 = {87}
            'dou2 = {e}
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 235, 24, 0)
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 502, 13, 0)
            'constraints.Clear()


            插入固定零件("挡圈" + read("check_ring2").ToString, "gb_t894_" + read("check_ring2"), "")

            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring2"))
            'feats = listModelItem(m1, "FEATURE")
            'e = feats.Item(22).Id
            'dou1 = {87}
            'dou2 = {e}
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 235, 24, 0)
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 229, 13, 0)
            'constraints.Clear()


            '键3
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")

            标准键数据(dr4("stepped_shaft5_diameter"))
            m3 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m3, "d6", dr4("keyway3_length"), "浮点型") '长
            setParamValue(m3, "d5", dr4("keyway3_diameter") * 2, "浮点型") '宽
            setParamValue(m3, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            RegenerateModel(m3)
            m3.Rename("gbt_1069_" + (dr4("keyway3_diameter") * 2).ToString + "X" + dr4("keyway3_length").ToString, True)
            m3.CommonName = "键_" + (dr4("keyway3_diameter") * 2).ToString + "X" + dr4("keyway3_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m3)
            Threading.Thread.Sleep(2000)
            closeWindow(m3)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")

            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(25).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 924, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 926, 80, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 912, 69, 0)
            constraints.Clear()




            '键1



            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
            标准键数据(dr4("stepped_shaft1_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway1_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway1_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway1_diameter") * 2).ToString + "X" + dr4("stepped_shaft1_length").ToString, True)
            m2.CommonName = "键_" + (dr4("keyway1_diameter") * 2).ToString + "X" + dr4("stepped_shaft1_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")

            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(26).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 785, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 787, 76, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 778, 69, 0)
            constraints.Clear()


            '键2

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
            标准键数据(dr4("stepped_shaft3_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway2_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway2_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway2_diameter") * 2).ToString + "X" + dr4("keyway2_length").ToString, True)
            m2.CommonName = "键_" + (dr4("keyway2_diameter") * 2).ToString + "X" + dr4("keyway2_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")
            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(27).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 838, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 836, 76, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 826, 69, 0)
            constraints.Clear()

            '键4
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
            标准键数据(dr4("stepped_shaft7_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway4_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway4_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway4_diameter") * 2).ToString + "X" + dr4("keyway4_length").ToString, True)
            m2.CommonName = "键_" + (dr4("keyway4_diameter") * 2).ToString + "X" + dr4("keyway4_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")
            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(28).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 967, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 965, 76, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 960, 69, 0)
            constraints.Clear()

            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(12)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(13)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(14)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(15)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(16)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(17)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(18)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(19)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()


            feat = feats.Item(20)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

        ElseIf read("type") = 3 Then


            smodel_8 = (New CCpfcModelDescriptor).Create(0, read("exciter_rotor_path"), Nothing)
            componentModel_8 = AC.Session.RetrieveModel(smodel_8)
            asmcomp_2 = assembly.AssembleComponent(componentModel_8, Nothing)
            constraints = New CpfcComponentConstraints
            constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            '/////////////////////////
            '轴
            smodel_2 = (New CCpfcModelDescriptor).Create(1, read("rotor_shaft_path"), Nothing)
            componentModel_2 = AC.Session.RetrieveModel(smodel_2)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_2, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
            AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
            constraints = New CpfcComponentConstraints




            If read1("exciter_rotor_bracket_path") = "0" Then
                '/////////////////////无支架
                ids = (New Cintseq)
                ids.Append(84)
                ids.Append(84)
                ids.Append(84)
                ids.Append(84)
                paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                part2 = paths.Leaf '励磁机转子冲片

                compItem_1 = part2.GetItemByID(1, 67) '侧面
                compItem_2 = componentModel_2.GetItemByID(1, 346)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = part2.GetItemByID(1, 6206) '同心
                compItem_4 = componentModel_2.GetItemByID(1, 424)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = part2.GetItemByName(1, "TOP")
                compItem_6 = componentModel_2.GetItemByName(1, "FRONT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)





                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(2)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
                '//////////////////////////////
            Else




                Dim aa, aaa As Double()

                aaa = {84, 84, 84, 87}
                aa = {87}
                constraints = 面面约束(asmcomp_2, aaa, aa, 64, 346, 0)
                constraints = 面面约束(asmcomp_2, aaa, aa, 139, 424, 2)
                aaa = {84}
                constraints = 装配约束(asmcomp_2, aaa, aa, 0, 0, 1, 1, "ASM_TOP", "FRONT", 0)


                constraints.Clear()

                '//////////////////////////////
            End If

            smodel_1 = (New CCpfcModelDescriptor).Create(0, read("rotor_winding_path"), Nothing) '转子铁芯
            componentModel_1 = AC.Session.RetrieveModel(smodel_1)
            asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)

            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            feats = listModelItem(m1, "FEATURE")
            Dim a As Double
            a = feats.Item(8).Id
            ids = (New Cintseq)
            ids.Append(a)
            ids.Append(84)
            ids.Append(80)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part1 = paths.Leaf '转子冲片


            ids = (New Cintseq)
            ids.Append(87) '轴
            path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)



            compItem_1 = part1.GetItemByID(1, 70)
            compItem_2 = componentModel_2.GetItemByID(1, 263)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)

            compItem_3 = part1.GetItemByID(1, 97)
            compItem_4 = componentModel_2.GetItemByID(1, 294)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, paths)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path2)

            compItem_5 = part1.GetItemByID(1, 2385)
            compItem_6 = componentModel_2.GetItemByID(1, 922)
            compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, paths)
            compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path2)

            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_2
            constraint.ComponentReference = compSelect_1

            constraint1 = (New CCpfcComponentConstraint).Create(2)
            constraint1.AssemblyReference = compSelect_4
            constraint1.ComponentReference = compSelect_3

            constraint2 = (New CCpfcComponentConstraint).Create(0)
            constraint2.AssemblyReference = compSelect_6
            constraint2.ComponentReference = compSelect_5

            constraints.Append(constraint)
            constraints.Append(constraint1)
            'constraints.Append(constraint2)
            asmcomp_1.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            '风扇
            '180风扇
            If dr3("type") = 1 Then
                smodel_3 = (New CCpfcModelDescriptor).Create(1, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = componentModel_3.GetItemByID(1, 94)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '
                compItem_4 = componentModel_3.GetItemByID(1, 96)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = componentModel_2.GetItemByID(1, 840) '键面
                compItem_6 = componentModel_3.GetItemByID(1, 779)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            ElseIf dr3("type") = 2 Then
                '200风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(1, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()



                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = componentModel_3.GetItemByID(1, 94)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直径
                compItem_4 = componentModel_3.GetItemByID(1, 96)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                compItem_5 = componentModel_2.GetItemByID(1, 840) '键面
                compItem_6 = componentModel_3.GetItemByID(1, 779)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            ElseIf dr3("type") = 3 Then
                '250风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, Replace(read("fan_path"), ".prt.1", ".asm.1"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_2, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()

                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 81)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(5)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

            ElseIf dr3("type") = 4 Then
                ''280风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()



                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)

                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()


            ElseIf dr3("type") = 5 Then
                '355风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()




                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)


                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2



                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4


                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            ElseIf dr3("type") = 6 Then

                '400风扇
                smodel_3 = (New CCpfcModelDescriptor).Create(0, read("fan_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_3)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_3, IpfcViewOwner)
                View_creo = viewer.GetView("FRONT")
                transform3D_1 = View_creo.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_3 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate()
                AC.Session.CurrentWindow.Refresh()
                feats = listModelItem(m1, "FEATURE")
                idz = (New Cintseq)
                idz.Append(feats.Item(9).Id)
                idz.Append(83)
                path3 = (New CMpfcAssembly).CreateComponentPath(assembly, idz)
                part3 = path3.Leaf

                compItem_1 = componentModel_2.GetItemByID(1, 176) '圆弧
                compItem_2 = part3.GetItemByID(1, 103)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path3)

                compItem_3 = componentModel_2.GetItemByID(1, 260) '直 径
                compItem_4 = part3.GetItemByID(1, 92)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path2)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, path3)

                compItem_5 = componentModel_2.GetItemByName(1, "RIGHT") '键面
                compItem_6 = part3.GetItemByName(1, "RIGHT")
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, path2)
                compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, path3)


                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2



                constraint1 = (New CCpfcComponentConstraint).Create(0)
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4


                constraint2 = (New CCpfcComponentConstraint).Create(0)
                constraint2.AssemblyReference = compSelect_5
                constraint2.ComponentReference = compSelect_6

                constraints.Append(constraint)
                constraints.Append(constraint1)
                constraints.Append(constraint2)
                asmcomp_3.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()
            End If
            '平衡环
            smodel_6 = (New CCpfcModelDescriptor).Create(1, read("gimbals_path"), Nothing)
            componentModel_6 = AC.Session.RetrieveModel(smodel_6)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_6, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_6, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(8).Id
            m2 = activateModel(read("rotor_winding_code"), 0)
            m3 = activateModel(dr5("rotor_core_code"), 0)
            feats = listModelItem(m3, "FEATURE")
            closeWindow(m3)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            ids = (New Cintseq)
            ids.Append(a)
            ids.Append(84)
            ids.Append(feats.Item(10).Id) '523

            path4 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            part4 = path4.Leaf

            compItem_1 = componentModel_2.GetItemByID(1, 70) '圆弧   轴
            compItem_2 = componentModel_6.GetItemByID(1, 76)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path2)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = part4.GetItemByID(1, 73) '侧面
            compItem_4 = componentModel_6.GetItemByID(1, 64)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path4)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2

            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4

            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()

            ''标准件
            '垫圈-1 平衡环上
            Dim d, e As Double
            Dim dou1, dou2 As Double()
            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(10).Id
            e = feats.Item(11).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 1086, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 69, 2, 0)
            constraints.Clear()

            '螺杆
            If read("material_model1") = "1" Then
                If read("screw_pole1") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
                End If

            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
            End If  '螺杆
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(11).Id
            e = feats.Item(12).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            constraints.Clear()


            '平衡铁
            smodel_7 = (New CCpfcModelDescriptor).Create(1, "E:\works\creo\gimbals\balance_iron.prt", Nothing)
            componentModel_7 = AC.Session.RetrieveModel(smodel_7)
            excludes = New CpfcModelItemTypes
            excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
            excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
            excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
            viewer = CType(componentModel_7, IpfcViewOwner)
            View_creo = viewer.GetView("FRONT")
            transform3D_1 = View_creo.Transform
            outline = assembly.EvalOutline(transform3D_1, excludes)
            p3d = outline.Item(1)
            asmcomp_3 = assembly.AssembleComponent(componentModel_7, transform3D_1)
            model.Display()
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()

            feats = listModelItem(m1, "FEATURE")
            a = feats.Item(10).Id
            ids = (New Cintseq)
            ids.Append(a)
            path6 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

            compItem_1 = componentModel_6.GetItemByID(1, 214) '圆弧   
            compItem_2 = componentModel_7.GetItemByID(1, 78)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path6)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

            compItem_3 = componentModel_6.GetItemByID(1, 69) '侧面
            compItem_4 = componentModel_7.GetItemByID(1, 64)
            compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path6)
            compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)


            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2



            constraint1 = (New CCpfcComponentConstraint).Create(0)
            constraint1.AssemblyReference = compSelect_3
            constraint1.ComponentReference = compSelect_4



            constraints.Append(constraint)
            constraints.Append(constraint1)
            asmcomp_3.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Refresh()
            constraints.Clear()
            '垫圈-3
            If read("material_model3") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
            ElseIf read("material_model3") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
            ElseIf read("material_model3") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(13).Id
            e = feats.Item(14).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 78, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 69, 2, 0)
            constraints.Clear()


            ''螺母 -3
            If read("material_model3") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part3") + "_gb6170_316l")
            ElseIf read("material_model3") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part3") + "_gb6170_zn")
            ElseIf read("material_model3") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part3") + "_gb6170_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(10).Id
            e = feats.Item(15).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 214, 474, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 64, 456, 0)
            constraints.Clear()


            '螺杆

            If read("material_model3") = "1" Then

                If read("screw_pole3") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")
                End If
            ElseIf read("material_model3") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
            ElseIf read("material_model3") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
            End If  '螺杆

            feats = listModelItem(m1, "FEATURE")
            d = feats.Item(14).Id
            e = feats.Item(16).Id
            dou1 = {d}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 16, 16, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 7, 47, 0)
            constraints.Clear()


            '挡圈
            插入固定零件("挡圈" + read("check_ring1").ToString, "gb_t894_" + read("check_ring1"), "")
            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring1"))
            'feats = listModelItem(m1, "FEATURE")
            'e = feats.Item(17).Id
            'dou1 = {87}
            'dou2 = {e}
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 70, 24, 0)
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 170, 13, 0)
            'constraints.Clear()



            插入固定零件("挡圈" + read("check_ring2").ToString, "gb_t894_" + read("check_ring2"), "")
            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring2"))
            'feats = listModelItem(m1, "FEATURE")
            'e = feats.Item(18).Id
            'dou1 = {87}
            'dou2 = {e}
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 70, 24, 0)
            'constraints = 面面约束(asmcomp_2, dou1, dou2, 499, 13, 0)
            'constraints.Clear()


            '键3
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")

            标准键数据(dr4("stepped_shaft5_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway3_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway3_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway3_diameter") * 2).ToString + "X" + dr4("keyway3_length").ToString, True)
            m2.CommonName = "gbt_1069_" + (dr4("keyway3_diameter") * 2).ToString + "X" + dr4("keyway3_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)

            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")



            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(21).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 924, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 922, 80, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 912, 64, 0)
            constraints.Clear()




            '键2

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")

            标准键数据(dr4("stepped_shaft3_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway2_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway2_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway2_diameter") * 2).ToString + "X" + dr4("keyway2_length").ToString, True)
            m2.CommonName = "gbt_1069_" + (dr4("keyway2_diameter") * 2).ToString + "X" + dr4("keyway2_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            Threading.Thread.Sleep(500)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")

            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(22).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 838, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 836, 80, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 826, 64, 0)
            constraints.Clear()


            '键4

            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")

            标准键数据(dr4("stepped_shaft7_diameter"))
            m2 = activate("gbt_1069", 1)
            Threading.Thread.Sleep(1000)
            setParamValue(m2, "d6", dr4("keyway4_length"), "浮点型") '长
            setParamValue(m2, "d5", dr4("keyway4_diameter") * 2, "浮点型") '宽
            setParamValue(m2, "d4", T1 + T2, "浮点型") '深
            Threading.Thread.Sleep(1000)
            m2.Rename("gbt_1069_" + (dr4("keyway4_diameter") * 2).ToString + "X" + dr4("keyway4_length").ToString, True)
            m2.CommonName = "gbt_1069_" + (dr4("keyway4_diameter") * 2).ToString + "X" + dr4("keyway4_length").ToString
            Threading.Thread.Sleep(500)
            RegenerateModel(m2)
            Threading.Thread.Sleep(500)
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            RegenerateModel(m1)
            AC.Session.RunMacro(" 11 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;~ RButtonArm `main_dlg_cur` `PHTLeft.AssyTree` `node2`;~ PopupOver `main_dlg_cur` `ActionMenu` 1 `PHTLeft.AssyTree`;~ Open `main_dlg_cur` `ActionMenu`;~ Close `main_dlg_cur` `ActionMenu`;~ Command `ProCmdXsecSetActive`;")

            feats = listModelItem(m1, "FEATURE")
            e = feats.Item(23).Id
            dou1 = {87}
            dou2 = {e}
            constraints = 面面约束(asmcomp_2, dou1, dou2, 967, 74, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 965, 80, 0)
            constraints = 面面约束(asmcomp_2, dou1, dou2, 960, 64, 0)
            constraints.Clear()


            feats = listModelItem(m1, "FEATURE")
            feat = feats.Item(10)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(11)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(12)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(13)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)

            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(14)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(15)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()



        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        End If

        刨视图("view_1", "XSEC0001", "fullPlane", 10)


        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + "view_1" + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `orient_method_op` 1 `angles`;" +
                               " ~ Update `drawing_view` `AngleValue` `180`;" +
                               " ~ Activate `drawing_view` `psh_ok`;")






        添加图幅注释(m2, read("T_MOTOR"))


        Dim c As Double
        c = dr4("stepped_shaft1_length") + dr4("stepped_shaft3_length") + dr4("stepped_shaft4_length") + dr4("stepped_shaft5_length") + dr4("stepped_shaft6_length") + dr4("stepped_shaft7_length") + dr4("stepped_shaft8_length") + dr4("stepped_shaft9_length")
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If c <= 500 Then
        '    view2Ds.Item(0).Scale = 5 / 10
        'ElseIf c > 500 And c <= 650 Then
        '    view2Ds.Item(0).Scale = 4 / 10
        'ElseIf c > 650 And c <= 800 Then
        '    view2Ds.Item(0).Scale = 3 / 10
        'ElseIf c > 800 Then
        '    view2Ds.Item(0).Scale = 2 / 10
        'End If
        modelItems = listModelItem(m2, "DTL_NOTE")
        If read("SHEET_SIZE") = "A3" Then

            修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)

        Else

            修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)


        End If




        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)
        RegenerateModel(m8)

        closeWindow(m8)
        m2 = activateModel(read("code"), 2)
        加入球标()
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        零件工程图转移(Replace(read("exciter_rotor_path"), "asm.", "drw."), path + "\" + read("exciter_rotor_code") + ".drw.1")
        零件工程图转移(Replace(read("rotor_winding_path"), "asm.", "drw."), path + "\" + read("rotor_winding_code") + ".drw.1")
        零件工程图转移(Replace(read("rotor_shaft_path"), "prt", "drw"), path + "\" + read("rotor_shaft_code") + ".drw.1")
        'If dr("exciter_rotor_bracket_path") <> "0" Then
        '    零件工程图转移(Replace(dr("exciter_rotor_bracket_path"), "prt", "drw"), path + "\" + dr("exciter_rotor_bracket_code") + ".drw.1")
        'End If
        零件工程图转移(Replace(read("fan_path"), "prt", "drw"), path + "\" + read("fan_code") + ".drw.1")
        If read("shaft_sleeve_path") <> "0" Then
            零件工程图转移(Replace(read("shaft_sleeve_path"), "prt", "drw"), path + "\" + read("shaft_sleeve_code") + ".drw.1")

        End If
        If read("Coupling_piece_path") <> "0" Then
            零件工程图转移(Replace(read("Coupling_piece_path"), "prt", "drw"), path + "\" + read("Coupling_piece_code") + ".drw.1")
        End If

        零件工程图转移(Replace(read("gimbals_path"), "prt", "drw"), path + "\" + read("gimbals_code") + ".drw.1")
        零件工程图转移(Replace(read("exciter_rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("exciter_rotor_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_winding_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_winding_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)

        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("exciter_rotor_code") + "_MX" + ".xlsx", path + "\" + read("rotor_winding_code") + "_MX" + ".xlsx")

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 水冷转子(localhost$, tabledase$, code As Integer, path$, imageName$)
        Dim a, aa As Double()
        mysql_new2(localhost$, "creo", "rotor_assembly", code)
        mysql_new3(localhost$, "creo", "rotor_shaft", read("rotor_shaft_id"))
        m1 = openModel("asm", "E:\works\creo\template\rotor_core")
        m1 = activateModel("rotor_core", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        componentModel_1 = 固定零件(assembly, 1, read("rotor_lamination_path")) '冲片-盖板
        Threading.Thread.Sleep(2000)
        m2 = activateModel(read("rotor_lamination_path"), 1)
        setParamValue(m2, "d4", read("thickness"), "浮点型")
        m2.Regenerate(Nothing)
        closeWindow(m2)
        Threading.Thread.Sleep(2000)
        m1 = activateModel("rotor_core", 0)
        asmcomp_2 = 插入零件_1(assembly, 1, read("damping_plate_path"))
        a = {80}
        aa = {83}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 67, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 94, 94, 0)
        constraints.Clear()
        asmcomp_2 = 插入零件_1(assembly, 1, read("damping_plate_path"))
        feats = listModelItem_有弹窗(m1, "FEATURE")
        Dim c As Double
        c = feats.Item(7).Id

        a = {80}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 67, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 94, 94, 0)
        constraints.Clear()


        asmcomp_2 = 插入零件_1(assembly, 1, read("rotor_shaft_path")) '轴
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(8).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 87, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 94, 120, 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "FRONT", 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, read("shaft_sleeve_path")) '连接盘
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(9).Id
        a = {85}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 84, 87, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 120, 120, 2)
        constraints.Clear()

        '弹性挡圈
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring1"))
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(10).Id
        a = {85}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 197, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 120, 24, 0)
        constraints.Clear()

        '键

        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
        标准键数据(dr3("stepped_shaft3_diameter"))
        m2 = activate("gbt_1069", 1)
        Threading.Thread.Sleep(1000)
        setParamValue(m2, "d6", dr3("keyway2_length"), "浮点型") '长
        setParamValue(m2, "d5", B, "浮点型") '宽
        setParamValue(m2, "d4", T1 + T2, "浮点型") '深
        Threading.Thread.Sleep(1000)
        m2.Rename("gb_1069_" + B.ToString + "X" + dr3("keyway2_length").ToString, True)
        m2.Regenerate(Nothing)
        closeWindow(m2)
        Threading.Thread.Sleep(2000)
        m1 = activateModel("rotor_core", 0)
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(11).Id
        a = {85}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 325, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 339, 74, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 341, 76, 0)
        constraints.Clear()


        '铆条
        asmcomp_2 = 插入零件_1(assembly, 1, read("article_riveting_path"))
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(12).Id
        a = {80}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 1632, 74, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 1636, 80, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 64, 69, 2)
        constraints.Clear()
        asmcomp_2 = 插入零件_1(assembly, 1, read("article_riveting_path"))
        feats = listModelItem_有弹窗(m1, "FEATURE")
        c = feats.Item(13).Id
        a = {80}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 1654, 80, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 1658, 74, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 2)
        constraints.Clear()

        feats = listModelItem(m1, "FEATURE")
        参考阵列(feats, 12)
        参考阵列(feats, 13)
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))



        刨视图("view_1", "XSEC0001", "fullPlane", 10)
        添加图幅注释(m2, read("T_MOTOR"))
        加入球标()
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)
        closeWindow(m8)
        m2 = activateModel(read("code"), 2)

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)
        mxs = 明细表(m2)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        Threading.Thread.Sleep(2000)
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub 封闭转子(localhost$, tabledase$, code As Integer, path$, imageName$)
        Dim a, aa As Double()
        m1 = openModel("asm", "E:\works\creo\template\rotor_core")
        m1 = activateModel("rotor_core", 0)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        partValue(m1)
        mysql_new2(localhost$, "creo", tabledase$, code)
        mysql_new(localhost$, "creo", "ex_ro_co_asm", read("exciter_rotor_id"))
        mysql_new4(localhost$, "creo", "rotor_shaft", read("rotor_shaft_id"))

        componentModel_1 = 固定零件(assembly, 0, read("rotor_winding_path")) '
        asmcomp_2 = 插入零件_1(assembly, 1, read("rotor_shaft_path")) '轴

        a = {80, 84, 80}
        aa = {83}
        constraints = 面面约束(asmcomp_2, a, aa, 70, 263, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 97, 294, 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "FRONT", 0)
        constraints.Clear()

        Dim c, d As Double

        If dr("exciter_rotor_bracket_path") = "0" Then

            asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_rotor_path")) '励磁机转子
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(7).Id
            a = {83}
            aa = {c， 84, 84}
            constraints = 面面约束(asmcomp_2, a, aa, 346, 67, 0)
            constraints = 面面约束(asmcomp_2, a, aa, 296, 6206, 0)
            'aa = {84}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "FRONT", 0)
            constraints.Clear()


        Else

            asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_rotor_path")) '励磁机转子
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(7).Id
            a = {83}
            aa = {c, 87}
            constraints = 面面约束(asmcomp_2, a, aa, 346, 574, 0)
            constraints = 面面约束(asmcomp_2, a, aa, 296, 657, 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "RIGHT", 0)
            constraints.Clear()
            '//////////////////////////////
        End If

        asmcomp_2 = 插入零件_1(assembly, 0, read("fan_path")) '风扇
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        a = {83}
        aa = {c, 87}
        constraints = 面面约束(asmcomp_2, a, aa, 260, 69, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 296, 97, 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 2)
        constraints.Clear()


        asmcomp_2 = 插入零件_1(assembly, 1, read("gimbals_path")) '平衡环
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        a = {80, 84, 83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 467, 76, 0)
        a = {80, 84, 85} '523
        constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0)
        constraints.Clear()

        ''标准件
        '垫圈-1 平衡环上
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(10).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1086, 24, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 69, 15, 0)
        constraints.Clear()

        '螺杆
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-a2-70-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(11).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 24, 24, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 10, 47, 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, read("balance_iron_path")) '平衡铁
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(12).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 214, 78, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 0)
        constraints.Clear()


        '平衡铁上
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-200hv-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 78, 24, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 69, 15, 0)
        constraints.Clear()
        ' 螺母 -3
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part3") + "-a2-70-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part3") + "-8级-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part3") + "-8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(14).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 214, 530, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 64, 319, 0)
        constraints.Clear()

        ''螺栓 -1
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(13).Id
        d = feats.Item(15).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 24, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 10, 47, 0)
        constraints.Clear()

        '弹性挡圈
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring1"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(16).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 229, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 296, 24, 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb_t894_" + read("check_ring2"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(17).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 502, 13, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 296, 24, 0)
        constraints.Clear()

        '键
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
        标准键数据(dr4("stepped_shaft5_diameter"))
        m2 = activate("gbt_1069", 1)
        Threading.Thread.Sleep(1000)
        setParamValue(m2, "d6", dr4("keyway3_length"), "浮点型") '长
        setParamValue(m2, "d5", B, "浮点型") '宽
        setParamValue(m2, "d4", T1 + T2, "浮点型") '深
        Threading.Thread.Sleep(1000)
        m2.Rename("gbt_1069_" + B.ToString + "X" + dr4("keyway3_length").ToString, True)
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        m1 = activateModel("rotor_core", 0)
        m1.Regenerate(Nothing)
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(18).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 912, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 922, 76, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 924, 78, 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
        标准键数据(dr4("stepped_shaft7_diameter"))
        m2 = activate("gbt_1069", 1)
        Threading.Thread.Sleep(1000)
        setParamValue(m2, "d6", dr4("keyway4_length"), "浮点型") '长
        setParamValue(m2, "d5", B, "浮点型") '宽
        setParamValue(m2, "d4", T1 + T2, "浮点型") '深
        Threading.Thread.Sleep(1000)
        m2.Rename("gbt_1069_" + B.ToString + "X" + dr4("keyway4_length").ToString, True)
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        m1 = activateModel("rotor_core", 0)
        m1.Regenerate(Nothing)
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(19).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 960, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 965, 76, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 967, 78, 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\key\gbt_1069")
        标准键数据(dr4("stepped_shaft3_diameter"))
        m2 = activate("gbt_1069", 1)
        Threading.Thread.Sleep(1000)
        setParamValue(m2, "d6", dr4("keyway2_length"), "浮点型") '长
        setParamValue(m2, "d5", B, "浮点型") '宽
        setParamValue(m2, "d4", T1 + T2, "浮点型") '深
        Threading.Thread.Sleep(1000)
        m2.Rename("gbt_1069_" + B.ToString + "X" + dr4("keyway2_length").ToString, True)
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        m1 = activateModel("rotor_core", 0)
        m1.Regenerate(Nothing)
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        a = {83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 826, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 836, 76, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 838, 78, 0)
        constraints.Clear()


        feats = listModelItem(m1, "FEATURE")

        参考阵列(feats, 10)
        参考阵列(feats, 11)
        参考阵列(feats, 12)
        参考阵列(feats, 13)
        参考阵列(feats, 14)
        参考阵列(feats, 15)
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.CommonName = read("NAME")
        m1.Rename(read("CODE"), True)
        m1.Regenerate(Nothing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, Val(Scale_drw(0)) / Val(Scale_drw(1)), "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, Val(Scale_drw(0)) / Val(Scale_drw(1)), "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, Val(Scale_drw(0)) / Val(Scale_drw(1)), "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, Val(Scale_drw(0)) / Val(Scale_drw(1)), "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, Val(Scale_drw(0)) / Val(Scale_drw(1)), "X", 0, 0, 1, REQUIREMENT, {100, 200}, {0, 0}, {0, 0}, {400, 500})
        End If

        添加图幅注释(m2, read("T_MOTOR"))
        刨视图("view_1", "XSEC0001", "fullPlane", 10)


        c = dr4("stepped_shaft1_length") + dr4("stepped_shaft3_length") + dr4("stepped_shaft4_length") + dr4("stepped_shaft5_length") + dr4("stepped_shaft6_length") + dr4("stepped_shaft7_length") + dr4("stepped_shaft8_length") + dr4("stepped_shaft9_length")
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)

        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        加入球标()
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)
        closeWindow(m8)
        m2 = activateModel(read("code"), 2)

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)

        mxs = 明细表(m2)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        Threading.Thread.Sleep(2000)
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 水冷总装(localhost$, tabledase$, ID As Integer, path$, imageName$)
        mysql_new2(localhost$, "creo", tabledase$, ID)
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        'deleteFileChangeModel("asm", "E:\works\creo\assembly\rotor_winding.asm", "rotor_winding.asm".Length)
        m1 = activateModel("start_asm", 0)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        partValue(m1)
        Dim a, aa As Double()
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path")) '转子
        a = {84， 87, 84, 84}
        aa = {87， 80}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        asmcomp_2 = 插入零件_1(assembly, 0, read("rear_cover_path")) '后端盖
        a = {84, 84}
        aa = {88, 84}
        constraints = 面面约束(asmcomp_2, a, aa, 149, 70, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 1080, 156, 0)
        constraints.Clear()
        '标准件1后端盖与机座
        '''''''''''''''''''''''''''''''
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-达克罗")
        End If
        a = {88, 84}
        aa = {89}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_12", "A_1")
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_12", "A_1", 0)
        constraints.Clear()

        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-达克罗")
        End If
        a = {89}
        aa = {90}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 10， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 24， 0)
        constraints.Clear()

        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-a2-70-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-达克罗")
        End If
        a = {90}
        aa = {91}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16， 0)
        constraints.Clear()
        feats = listModelItem(m1, "FEATURE")
        参考阵列(feats, 9)
        参考阵列(feats, 10)
        参考阵列(feats, 11)


        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        加入球标()
        添加图幅注释(m2, read("T_MOTOR"))
        刨视图("view_1", "XSEC0001", "fullPlane", 10)
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        添加bom新内容(ItemString, m8)
        closeWindow(m8)
        m2 = activateModel(read("code"), 2)


        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)


        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")









        mxs = 明细表(m2)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)


        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx")

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        Threading.Thread.Sleep(2000)
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()


    End Sub

    Public Sub creo_generator_assembly180_2(localhost$, tabledase$, ID As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase$, ID)
        mysql_new(localhost$, "creo", "rear_cover", read("rear_cover_id"))


        Dim a, aa, idc, idb, ida As Double()
        aa = {0}
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子总装配
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))
        Dim c, d As Double

        m2 = activateModel(read("rotor_code"), 0)
        feats = listModelItem(m2, "FEATURE")
        d = feats.Item(8).Id
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)



        a = {84, 87, 84, 84}
        If read("type") = 1 Then
            aa = {87, d, 84, 80} '单
        ElseIf read("type") = 2 Then
            aa = {87, d, 84, 80}
        End If
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '/////////////////////////////
        '前端盖
        If read("type") = 1 Then '单

            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path"))
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 137, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()

            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c, 379}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            End If

        ElseIf read("type") = 2 Then



            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path"))
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 99, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()

            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c, 379}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            End If





        End If
        '/////////////////////////////
        '后端盖
        asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        a = {84, 84, 83}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 73, 219, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '/////////////////////////////
        '防护罩  hou 
        asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(10).Id
        a = {c}
        aa = {d}
        idc = {308, 311}
        idb = {130, 150}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 0)
        constraints.Clear()
        '防护罩  前

        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c}
            aa = {d}
            If read("type") = 1 Then
                idc = {70, 142} '单支撑
            ElseIf read("type") = 2 Then
                idc = {74, 64} '双支撑
            End If
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()

        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c, 84}
            aa = {d}
            idc = {78, 64}
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        End If




        '标准件1前端盖与机座
        '''''''''''''''''''''''''''''''
        Dim material As String = ""
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
        End If

        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c} '后防护罩
            aa = {d}
            If read("type") = 1 Then
                constraints = 面面约束(asmcomp_2, a, aa, 1016, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
            ElseIf read("type") = 2 Then
                constraints = 面面约束(asmcomp_2, a, aa, 2163, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            End If
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_26", "A_1")
            a = {c, 572}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints.Clear()
        End If

        ''螺栓 -2
        If read("material_model1") = "1" Then
            If read("screw_pole1") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
            End If

        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints.Clear()

        '''''''''''''''''''
        '标准件2后端盖防护罩部分
        '''''''''''''''''''''''''''''''
        '垫圈
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(14).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 180, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints.Clear()

        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(14).Id
        d = feats.Item(15).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints.Clear()
        '螺钉
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(15).Id
        d = feats.Item(16).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18， 0)
        constraints.Clear()

        '/////////////////////////////////
        '后端盖固定
        '/////////////////////
        '垫圈
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(17).Id
        a = {c} '后端盖
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_13", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
        constraints.Clear()

        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(17).Id
        d = feats.Item(18).Id
        a = {c} '848
        aa = {d} '93
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints.Clear()

        '螺杆
        If read("material_model3") = "1" Then
            If read("screw_pole3") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(18).Id
        d = feats.Item(19).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints.Clear()


        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))  '轴承
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        a = {87, 87}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 682, 183， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 533, 193， 0)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))  '波形弹性垫圈
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        d = feats.Item(21).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

        ids = (New Cintseq)
        ids.Append(c)
        paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = paths.Leaf
        ids = (New Cintseq)
        ids.Append(d)
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, 185)
        compItem_2 = componentModel_2.GetItemByName(1, "TOP")

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(0)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        constraints.Clear()

        '/////////////////////


        asmcomp_2 = 插入零件_1(assembly, 0, read("junction_box_path")) '接线盒
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(22).Id, 123}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "RIGHT", 0)
        a = {84, 84, 670}
        aa = {modelItems.Item(22).Id, 123}
        constraints = 面面约束(asmcomp_2, a, aa, 2360, 146, 2) '侧面
        constraints = 面面约束(asmcomp_2, a, aa, 2355, 82, 0) '圆弧
        constraints.Clear()




        ' 防护罩与螺钉组
        'GB_T93_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(23).Id
        a = {c}
        aa = {d} '147
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(24).Id
        a = {c}
        aa = {d} '148
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear()
        'GB_T848_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(25).Id
        a = {c} '148
        aa = {d} '149
        constraints = 面面约束(asmcomp_2, a, aa, 2, 7, 0) '15
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(26).Id
        a = {c} '148
        aa = {d} '150
        constraints = 面面约束(asmcomp_2, a, aa, 2, 7, 0) '15
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        'M6
        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(25).Id
        d = feats.Item(27).Id
        a = {c} '149
        aa = {d} '151
        idc = {16, 2}
        idb = {16, 47}
        ida = {2, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(26).Id
        d = feats.Item(28).Id
        a = {c} '150
        aa = {d} '152
        idc = {16, 2}
        idb = {16, 47}
        ida = {2, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        'GB_T6170_M6 螺母
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(27).Id
        d = feats.Item(29).Id
        a = {c} '151
        aa = {d} '153
        idc = {16, 47}
        idb = {474, 456}
        ida = {1, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)

        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(28).Id
        d = feats.Item(30).Id
        a = {c}
        aa = {d}
        idc = {16, 47}
        idb = {474, 456}
        ida = {1, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
        constraints.Clear()

        If read("type") = 2 Then
            ''////////////////////////////双支撑
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2"))  '轴承
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(31).Id

            a = {87, 87}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 116, 183， 0) '轴
            constraints = 面面约束(asmcomp_2, a, aa, 170, 193， 0) '面
            constraints.Clear()

            'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer2"))  '波形弹性垫圈
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(31).Id
            d = feats.Item(32).Id
            a = {c}
            aa = {d}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

            ids = (New Cintseq)
            ids.Append(c)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            componentModel_1 = paths.Leaf
            ids = (New Cintseq)
            ids.Append(d)
            path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            componentModel_2 = path2.Leaf

            compItem_1 = componentModel_1.GetItemByID(1, 185)
            compItem_2 = componentModel_2.GetItemByName(1, "TOP")

            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            constraints.Clear()
            '////////////////////////////
        End If

        feats = listModelItem(m1, "FEATURE")
        feat = feats.Item(12)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()

        feat = feats.Item(13)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(14)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(15)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(16)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(17)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(18)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(19)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)
        添加bom新内容(ItemString, m1)
        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If

        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)



        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图2(m1, sheet_size, 0.5, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {400, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图2(m1, sheet_size, 0.5, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {400, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图2(m1, sheet_size, 0.5, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {400, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图2(m1, sheet_size, 0.5, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {400, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图2(m1, sheet_size, 0.5, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {400, 500}, {0, 0}, {800, 500})
        End If

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))


        添加图幅注释(m2, read("T_MOTOR"))
        If read("type") = 1 Then
            刨视图("view_1", "XSEC0001", "halfPlane", 31 + StringNumber / 4)
            AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (27 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (36 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (43 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (25 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        ElseIf read("type") = 2 Then
            刨视图("view_1", "XSEC0001", "halfPlane", 33 + StringNumber / 4)
            AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (29 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (38 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (45 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (27 + StringNumber / 4).ToString + "`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
            AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
            AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
        End If


        加入球标()
        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)


        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", path + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + "_MX.xlsx", path + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        'If read("ex_stator_path") <> "0" Then
        '    零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), path + "\" + read("ex_stator_code") + ".drw.1")
        '    零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        'End If
        'If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), path + "\" + read("front_cover_code") + ".drw.1")
        'ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), path + "\" + read("front_cover_code") + ".drw.1")
        'End If
        'If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), path + "\" + read("rear_cover_ccode") + ".drw.1")
        'ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), path + "\" + read("rear_cover_code") + ".drw.1")
        'End If
        '零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), path + "\" + read("round_mask_code") + ".drw.1")
        'If read("strip_mask1_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), path + "\" + read("strip_mask1_code") + ".drw.1")
        'End If
        'If read("strip_mask2_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), path + "\" + read("strip_mask2_code") + ".drw.1")
        'End If
        'If read("strip_mask_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), path + "\" + read("strip_mask_code") + ".drw.1")
        'End If

        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")




        mxs = 明细表(m2)
        tms = 图样目录表(path， read("code"))
        tjys = 通借用表(path， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path， read("code"))
        End If
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("ex_stator_path") <> "0" Then
            If Dir(path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If

        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx")
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub creo_generator_assembly200_2(localhost$, tabledase$, ID As Integer, path$, imageName$)

        mysql_new2(localhost$, "creo", tabledase$, ID)
        mysql_new(localhost$, "creo", "rear_cover", read("rear_cover_id"))
        If read("ex_stator_id") <> 0 Then
            mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read("ex_stator_id"))
            mysql_new4(localhost$, "creo", "ex_sta_co_asm", dr3("exciter_stator_core_id"))
            mysql_new5(localhost$, "creo", "exciter_stator", dr4("exciter_stator_id"))
        End If
        Dim a, aa, idc, idb, ida As Double()
        aa = {0}
        idc = {0}
        Dim c, d As Double
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm.3")

        m1 = activateModel("start_asm", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子总装配
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))
        m2 = activateModel(read("rotor_code"), 0)
        feats = listModelItem(m2, "FEATURE")
        d = feats.Item(8).Id
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)
        a = {84, 87, 84, 84}
        If read("type") = 1 Then
            aa = {87, d, 84, 80} '单
        ElseIf read("type") = 2 Then
            aa = {87, d, 84, 80} '双
        End If
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '/////////////////////////////
        '前端盖


        If read("type") = 1 Then


            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path")) '单支撑
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 137, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c, 379}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            End If

        ElseIf read("type") = 2 Then
            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path")) '双支撑
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 99, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "AA_1")
                constraints.Clear()
                'a = {84}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                'constraints.Clear()
            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 90}
                aa = {c, 379}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            End If

        End If

        '后端盖
        '/////////////////////////////
        If dr("bracket_type") = 2 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path")) '无凸起部分
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 219, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            '/////////////////////////////
            '防护罩
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 面面约束(asmcomp_2, a, aa, 308, 130, 0)

            a = {84}
            aa = {d}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "RIGHT", 2)

            constraints.Clear()

        ElseIf dr("bracket_type") = 1 Then
            '''''''''''有凸起部分
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id

            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 182, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            '防护罩  hou 
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 面面约束(asmcomp_2, a, aa, 269, 130, 0)
            a = {84}
            aa = {d}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "RIGHT", 2)
            constraints.Clear()
        End If


        '防护罩  前

        If InStr(read("front_cover_path"), ".prt.") <> 0 Then

            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c}
            aa = {d}
            If read("type") = 1 Then
                idc = {70, 142} '单支撑
            ElseIf read("type") = 2 Then
                idc = {74, 140} '双支撑
            End If
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 4072, 1, 1, "RIGHT", "", 0)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c, 84}
            aa = {d}
            idc = {78, 64}
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        End If



        '标准件1前端盖与机座
        '''''''''''''''''''''''''''''''
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
        End If


        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c} '后防护罩
            aa = {d}
            If read("type") = 1 Then
                constraints = 面面约束(asmcomp_2, a, aa, 1016, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 142, 10， 0)
            ElseIf read("type") = 2 Then

                constraints = 面面约束(asmcomp_2, a, aa, 2163, 16， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            End If
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_26", "A_1")
            a = {c, 572}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints.Clear()
        End If


        ''螺栓 -2
        If read("material_model1") = "1" Then
            If read("screw_pole1") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints.Clear()

        '标准件2后端盖防护罩部分
        '''''''''''''''''''''''''''''''
        '垫圈
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(14).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 181, 16， 0)
        constraints.Clear()


        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(14).Id
        d = feats.Item(15).Id
        a = {c} '848
        aa = {d} '93
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()

        '螺钉
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(15).Id
        d = feats.Item(16).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18， 0)
        constraints.Clear()

        '/////////////////////////////////
        '后端盖固定
        '标准件2后端盖防护罩部分
        '''''''''''''''''''''''''''''''
        '垫圈

        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(17).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 180, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints.Clear()


        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(17).Id
        d = feats.Item(18).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints.Clear()

        '螺杆
        If read("material_model3") = "1" Then
            If read("screw_pole3") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(18).Id
        d = feats.Item(19).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints.Clear()

        '///////////////////////////////////////////
        '单支撑
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))  '轴承
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        a = {87, 87}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 682, 183， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 533, 193， 0)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))  '波形弹性垫圈
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        d = feats.Item(21).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

        ids = (New Cintseq)
        ids.Append(c)
        paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = paths.Leaf
        ids = (New Cintseq)
        ids.Append(d)
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, 185)
        compItem_2 = componentModel_2.GetItemByName(1, "TOP")

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(0)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        constraints.Clear()

        '/////////////////////

        asmcomp_2 = 插入零件_1(assembly, 0, read("junction_box_path"))
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(22).Id, 123}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "RIGHT", 0)
        a = {84, 84, 1190}
        aa = {modelItems.Item(22).Id, 123}
        constraints = 面面约束(asmcomp_2, a, aa, 2360, 146, 2) '侧面
        constraints = 面面约束(asmcomp_2, a, aa, 2355, 82, 0) '圆弧
        constraints.Clear()


        ' 前端盖、防护罩与螺钉组
        'GB_T93_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(23).Id
        a = {c}
        aa = {d} '147
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(24).Id
        a = {c}
        aa = {d} '148
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear()
        'GB_T848_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(25).Id
        a = {c} '148
        aa = {d} '149
        constraints = 面面约束(asmcomp_2, a, aa, 7, 7, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(26).Id
        a = {c} '148
        aa = {d} '150
        constraints = 面面约束(asmcomp_2, a, aa, 7, 7, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(25).Id
        d = feats.Item(27).Id
        a = {c} '149
        aa = {d} '151
        idc = {16, 2}
        idb = {16, 47}
        ida = {2, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(26).Id
        d = feats.Item(28).Id
        a = {c} '150
        aa = {d} '152
        idc = {16, 2}
        idb = {16, 47}
        ida = {2, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        'GB_T6170_M6 螺母
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(27).Id
        d = feats.Item(29).Id
        a = {c}
        aa = {d}
        idc = {16, 47}
        idb = {474, 456}
        ida = {1, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(28).Id
        d = feats.Item(30).Id
        a = {c}
        aa = {d}
        idc = {16, 47}
        idb = {474, 456}
        ida = {1, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
        constraints.Clear()

        '励磁机定子
        If dr("bracket_type") = 1 Then
            If dr5("type") = 1 Then
                '////////////////////////////////////类型1
                asmcomp_2 = 插入零件_1(assembly, 0, read("ex_stator_path"))
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(9).Id
                d = feats.Item(31).Id
                a = {c}
                aa = {d, 84, 84}
                constraints = 面面约束(asmcomp_2, a, aa, 110, 75， 0) '轴
                constraints = 面面约束(asmcomp_2, a, aa, 2920, 65， 0) '面,70
                constraints = 面面约束(asmcomp_2, a, aa, 3352, 2316， 0) '孔
                constraints.Clear()
            ElseIf dr5("type") = 2 Then
                '////////////////////////////////////类型2
                asmcomp_2 = 插入零件_1(assembly, 0, read("ex_stator_path"))
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(9).Id
                d = feats.Item(31).Id
                a = {c}
                aa = {d, 84, 84}
                constraints = 面面约束(asmcomp_2, a, aa, 110, 74， 0) '轴
                constraints = 面面约束(asmcomp_2, a, aa, 2920, 64， 0) '面,70
                constraints = 面面约束(asmcomp_2, a, aa, 3352, 862， 0) '孔
                constraints.Clear()

            End If

            '////////////////////////////
            If dr5("type") = 2 Then
                '////////////////////////////////////类型1
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(31).Id
                d = feats.Item(32).Id
                a = {c, 84, 84} '后端盖
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 69, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 862, 16， 0)
                constraints.Clear()

            ElseIf dr5("type") = 1 Then
                '////////////////////////////////////类型2
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(31).Id
                d = feats.Item(32).Id
                a = {c, 84, 84}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 2285, 16， 0)
                constraints.Clear()
            End If

            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(32).Id
            d = feats.Item(33).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
            constraints.Clear()
            If read("material_model5") = "1" Then
                If read("screw_pole5") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_304")
                End If
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(33).Id
            d = feats.Item(34).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
            constraints.Clear()
        End If


        If read("type") = 2 Then

            If dr("bracket_type") = 1 Then


                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2"))  '轴承
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(7).Id
                d = feats.Item(35).Id
                a = {c, 87}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 682, 183， 0) '轴
                constraints = 面面约束(asmcomp_2, a, aa, 170, 193， 0) '面
                constraints.Clear()


                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer2"))  '波形弹性垫圈
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(35).Id
                d = feats.Item(36).Id
                a = {c}
                aa = {d}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

                ids = (New Cintseq)
                ids.Append(c)
                paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                componentModel_1 = paths.Leaf
                ids = (New Cintseq)
                ids.Append(d)
                path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                componentModel_2 = path2.Leaf

                compItem_1 = componentModel_1.GetItemByID(1, 185)
                compItem_2 = componentModel_2.GetItemByName(1, "TOP")

                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2
                constraints.Append(constraint)
                asmcomp_2.SetConstraints(constraints, Nothing)
                constraints.Clear()



            ElseIf dr("bracket_type") = 2 Then

                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2")) '轴承
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(7).Id
                d = feats.Item(31).Id
                a = {c, 83}
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 116, 183， 0) '轴
                constraints = 面面约束(asmcomp_2, a, aa, 170, 193， 0) '面
                constraints.Clear()


                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer2"))  '波形弹性垫圈
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(31).Id
                d = feats.Item(32).Id
                a = {c}
                aa = {d}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

                ids = (New Cintseq)
                ids.Append(c)
                paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                componentModel_1 = paths.Leaf
                ids = (New Cintseq)
                ids.Append(d)
                path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                componentModel_2 = path2.Leaf

                compItem_1 = componentModel_1.GetItemByID(1, 185)
                compItem_2 = componentModel_2.GetItemByName(1, "TOP")

                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
                constraint = (New CCpfcComponentConstraint).Create(0)
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2
                constraints.Append(constraint)
                asmcomp_2.SetConstraints(constraints, Nothing)
                constraints.Clear()

            End If
        End If


        feats = listModelItem(m1, "FEATURE")



        参考阵列(feats, 12)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 13)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 14)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 15)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 16)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 17)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 18)
        Threading.Thread.Sleep(500)
        参考阵列(feats, 19)
        Threading.Thread.Sleep(500)


        If dr("bracket_type") = 1 Then
            参考阵列(feats, 32)
            Threading.Thread.Sleep(500)
            参考阵列(feats, 33)
            Threading.Thread.Sleep(500)
            参考阵列(feats, 34)
            Threading.Thread.Sleep(500)
        End If



        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)

        添加bom新内容(ItemString, m1)

        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)

        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)



        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        End If

        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        添加图幅注释(m2, read("T_MOTOR"))
        If read("type") = 1 Then '单支撑

            If dr("bracket_type") = 1 Then '后端盖有突起
                刨视图("view_1", "XSEC0001", "halfPlane", 35 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (31 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (38 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (45 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (29 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

            Else


                刨视图("view_1", "XSEC0001", "halfPlane", 31 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (27 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (36 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (43 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (25 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")


            End If






        ElseIf read("type") = 2 Then


            If dr("bracket_type") = 1 Then
                刨视图("view_1", "XSEC0001", "halfPlane", 37 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (33 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (40 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (47 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (32 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            Else

                刨视图("view_1", "XSEC0001", "halfPlane", 33 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (29 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (38 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (45 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (27 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            End If
        End If


        加入球标()

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)



        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", path + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + "_MX.xlsx", path + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        'If read("ex_stator_path") <> "0" Then
        '    零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), path + "\" + read("ex_stator_code") + ".drw.1")
        '    零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        'End If
        'If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), path + "\" + read("front_cover_code") + ".drw.1")
        'ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), path + "\" + read("front_cover_code") + ".drw.1")
        'End If
        'If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), path + "\" + read("rear_cover_ccode") + ".drw.1")
        'ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), path + "\" + read("rear_cover_code") + ".drw.1")
        'End If
        '零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), path + "\" + read("round_mask_code") + ".drw.1")
        'If read("strip_mask1_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), path + "\" + read("strip_mask1_code") + ".drw.1")
        'End If
        'If read("strip_mask2_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), path + "\" + read("strip_mask2_code") + ".drw.1")
        'End If
        'If read("strip_mask_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), path + "\" + read("strip_mask_code") + ".drw.1")
        'End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")


        mxs = 明细表(m2)
        'tms = 图样目录表(path， read("code"))
        tjys = 通借用表(path， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path， read("code"))
        End If
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("ex_stator_path") <> "0" Then
            If Dir(path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        'read.Close()
        'mysqlcom.Dispose()
        mysqlcon.Close()
        'mysqlcon.Dispose()

    End Sub
    Public Sub creo_generator_assembly280_3(localhost$, tabledase$, ID As Integer, path$, imageName$) '单
        '单支撑
        mysql_new2(localhost$, "creo", tabledase$, ID)
        mysql_new(localhost$, "creo", "rear_cover", read("rear_cover_id"))
        'mysql_new6(localhost$, "creo", "stator_assembly", read("stator_id"))
        If read("ex_stator_id") <> 0 Then
            mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read("ex_stator_id"))
            mysql_new4(localhost$, "creo", "ex_sta_co_asm", dr3("exciter_stator_core_id"))
            mysql_new5(localhost$, "creo", "exciter_stator", dr4("exciter_stator_id"))
        End If
        Dim a, aa, idc, idb, ida As Double()
        Dim c, d As Double

        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子总装配
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))
        m2 = activateModel(read("rotor_path"), 0)
        feats = listModelItem(m2, "FEATURE")
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)
        a = {84, 87, 84, 84}
        aa = {87, feats.Item(8).Id, 84, 80} '单
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0) '单
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '/////////////////////////////

        '前端盖
        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path")) '单支撑
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            a = {84, 84, 90}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 332, 137, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            a = {84, 84, 90}
            aa = {c, 379}
            constraints = 面面约束(asmcomp_2, a, aa, 332, 64, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
            constraints.Clear()
        End If

        '后端盖
        '/////////////////////////////
        If dr("bracket_type") = 1 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path")) '无凸起部分
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 190, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "RIGHT", 2)
            constraints.Clear()
            '/////////////////////////////
            '防护罩
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            idb = {130}
            idc = {321}
            ida = {0, 0} '0
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
            constraints.Clear()
        ElseIf dr("bracket_type") = 2 Then
            '''''''''''有凸起部分
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 190, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "RIGHT", 2)
            constraints.Clear()
            '防护罩  hou 
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            idb = {150, 130} '149
            idc = {326, 321} '308
            ida = {0, 0} '0
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
            'a = {84}
            'aa = {90}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "FRONT", 0)
            constraints.Clear()
        End If



        '防护罩  前


        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c}
            aa = {d}
            idc = {151, 142}
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c, 84}
            aa = {d}
            idc = {78, 64}
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        End If

        '标准件1前端盖与机座
        '''''''''''''''''''''''''''''''
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
        End If


        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 1047, 16， 0)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(12).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_26", "A_1")
            a = {c, 572}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints.Clear()
        End If







        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()


        If read("material_model1") = "1" Then
            If read("screw_pole1") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(13).Id
        d = feats.Item(14).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()

        '''''''''''''''''''
        '标准件2后端盖防护罩部分
        '''''''''''''''''''''''''''''''
        '垫圈
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(15).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 181, 16， 0)
        constraints.Clear()

        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(15).Id
        d = feats.Item(16).Id
        a = {c} '848
        aa = {d} '93
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()
        '螺钉
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(16).Id
        d = feats.Item(17).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()


        '/////////////////////////////////
        '后端盖固定
        '/////////////////////
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(18).Id
        a = {c} '后端盖
        aa = {d}
        If dr("bracket_type") = 1 Then
            '/////////////////////////////////YOU凸起
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0) '315
            constraints = 面面约束(asmcomp_2, a, aa, 2073, 16， 0) '1514
        ElseIf dr("bracket_type") = 2 Then
            '/////////////////////////////////WU凸起
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 2107, 16， 0)
        End If
        constraints.Clear()



        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(18).Id
        d = feats.Item(19).Id
        a = {c} '848
        aa = {d} '93
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()
        '螺杆
        If read("material_model3") = "1" Then
            If read("screw_pole3") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(19).Id
        d = feats.Item(20).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()




        '单支撑
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1")) '轴承
        feats = listModelItem(m1, "FEATURE")
        'c = feats.Item(7).Id
        d = feats.Item(21).Id
        a = {87, 87}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 682, 183， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 533, 193， 0)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))  '波形弹性垫圈
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(21).Id
        d = feats.Item(22).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)

        ids = (New Cintseq)
        ids.Append(c)
        paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = paths.Leaf
        ids = (New Cintseq)
        ids.Append(d)
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, 185)
        compItem_2 = componentModel_2.GetItemByName(1, "TOP")

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(0)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        constraints.Clear()

        '/////////////////////

        ' 接线盒


        asmcomp_2 = 插入零件_1(assembly, 0, read("junction_box_path"))
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84, 1579}
        aa = {modelItems.Item(23).Id, 123}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
        constraints = 面面约束(asmcomp_2, a, aa, 913, 146, 2) '侧面
        constraints = 面面约束(asmcomp_2, a, aa, 469, 82, 0) '圆弧
        constraints.Clear()


        '////////////////////////////

        '前  防护罩
        ' 前端盖、防护罩与螺钉组
        'GB_T93_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(24).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(11).Id
        d = feats.Item(25).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear()
        'GB_T848_6 垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(26).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(25).Id
        d = feats.Item(27).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '螺栓
        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(26).Id
        d = feats.Item(28).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            If read("screw_pole4") = "GB5782" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole4") + "\" + "m" + read("standard_part4") + "x" + read("screw_pole_length4") + "_" + Replace(read("screw_pole4"), "GB", "gb") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(27).Id
        d = feats.Item(29).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        'GB_T6170_M6 螺母

        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(28).Id
        d = feats.Item(30).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 47, 456, 0, 6)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 474, 0, 0)
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(29).Id
        d = feats.Item(31).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 47, 456, 0, 6)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 474, 0, 0)
        constraints.Clear()


        '-----------------------------------------------------------------------------------------------------------
        '与基座配合的防护罩
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask1_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        a = {84, 84, 1579}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 518, 1454, 0)
        a = {84, 84}
        aa = {c}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 1458, 1, 1, "ADTM10", "", 2)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "AA_43", "DTM3", 9)
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "AA_48", "DTM3", 9)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 基座与防护罩
        '基座与防护罩
        '93垫圈与防护罩
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(33).Id
        a = {84, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_43", "A_1")
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(33).Id
        d = feats.Item(34).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        '螺钉
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(34).Id
        d = feats.Item(35).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '2----------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(36).Id

        a = {84, 84}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "AA_28", "A_1", 2)

        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(36).Id
        d = feats.Item(37).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(37).Id
        d = feats.Item(38).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '3-------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(39).Id
        a = {84, 84}
        aa = {d}
        '183
        constraints = 轴约束(asmcomp_2, a, aa, "AA_27", "A_1")
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(39).Id
        d = feats.Item(40).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(40).Id
        d = feats.Item(41).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '4------------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(42).Id
        a = {84, 84}
        aa = {d}    '186
        constraints = 轴约束(asmcomp_2, a, aa, "AA_42", "A_1")
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "AA_42", "A_1", 0)
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(42).Id
        d = feats.Item(43).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 2)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(43).Id
        d = feats.Item(44).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '//////////////////////
        If read("ex_stator_id") <> 0 Then
            '励磁机定子
            '////////////////////////////////////类型1
            asmcomp_2 = 插入零件_1(assembly, 0, read("ex_stator_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(45).Id
            a = {c}
            aa = {d, 84, 84}

            constraints = 面面约束(asmcomp_2, a, aa, 121, 75， 0) '轴
            constraints = 面面约束(asmcomp_2, a, aa, 7229, 65， 0) '面,
            constraints = 面面约束(asmcomp_2, a, aa, 9633, 2316， 0) '孔
            constraints.Clear()

            If dr5("type") = 2 Then
                '////////////////////////////////////类型1
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(45).Id
                d = feats.Item(46).Id
                a = {c, 84, 84} '后端盖
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 69, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 862, 16， 0)
                constraints.Clear()

            ElseIf dr5("type") = 1 Then
                '////////////////////////////////////类型2
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(45).Id
                d = feats.Item(46).Id
                a = {c, 84, 84} '后端盖
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 2285, 16， 0)
                constraints.Clear()
            End If

            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(46).Id
            d = feats.Item(47).Id
            a = {c} '848
            aa = {d} '93
            constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
            constraints.Clear()


            '螺杆
            If read("material_model5") = "1" Then
                If read("screw_pole5") = "GB5782" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_316l")
                Else
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_304")
                End If
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(47).Id
            d = feats.Item(48).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
            constraints.Clear()

        End If


        feats = listModelItem(m1, "FEATURE")

        feat = feats.Item(12)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(13)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()



        feat = feats.Item(14)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()


        feat = feats.Item(15)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(16)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(17)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(18)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(19)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

        feat = feats.Item(20)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()




        If read("ex_stator_id") <> 0 Then

            feat = feats.Item(46)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(47)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()

            feat = feats.Item(48)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()


        End If



        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)

        添加bom新内容(ItemString, m1)

        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If

        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)


        ExportJpg(path, imageName)
        'asm = CType(m1, IpfcAssembly)
        m1.Rename(read("CODE"), True)

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图2(m1, sheet_size, 0.35, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图2(m1, sheet_size, 0.35, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图2(m1, sheet_size, 0.35, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图2(m1, sheet_size, 0.35, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图2(m1, sheet_size, 0.35, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {350, 500}, {0, 0}, {800, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        添加图幅注释(m2, read("T_MOTOR"))

        If read("type") = 1 Then '单支撑

            If dr("bracket_type") = 1 Then '后端盖有突起
                刨视图("view_1", "XSEC0001", "halfPlane", 49 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (45 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (52 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (59 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (43 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

            Else


                刨视图("view_1", "XSEC0001", "halfPlane", 45 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (41 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (50 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (57 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (39 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")


            End If


        End If
        加入球标()

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)


        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", path + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + "_MX.xlsx", path + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        'If read("ex_stator_path") <> "0" Then
        '    零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), path + "\" + read("ex_stator_code") + ".drw.1")
        '    零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        'End If
        'If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), path + "\" + read("front_cover_code") + ".drw.1")
        'ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), path + "\" + read("front_cover_code") + ".drw.1")
        'End If
        'If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), path + "\" + read("rear_cover_ccode") + ".drw.1")
        'ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), path + "\" + read("rear_cover_code") + ".drw.1")
        'End If
        '零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), path + "\" + read("round_mask_code") + ".drw.1")
        'If read("strip_mask1_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), path + "\" + read("strip_mask1_code") + ".drw.1")
        'End If
        'If read("strip_mask2_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), path + "\" + read("strip_mask2_code") + ".drw.1")
        'End If
        'If read("strip_mask_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), path + "\" + read("strip_mask_code") + ".drw.1")
        'End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")
        Threading.Thread.Sleep(1000)
        mxs = 明细表(m2)
        Threading.Thread.Sleep(1000)
        tms = 图样目录表(path， read("code"))
        Threading.Thread.Sleep(1000)
        tjys = 通借用表(path， read("code"))
        Threading.Thread.Sleep(1000)
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path， read("code"))

        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path， read("code"))

        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))

        If read("ex_stator_path") <> "0" Then
            If Dir(path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub 'dan
    Public Sub creo_generator_assembly280_4(localhost$, tabledase$, ID As Integer, path$, imageName$) '双
        '双支撑
        mysql_new2(localhost$, "creo", tabledase$, ID)
        mysql_new(localhost$, "creo", "rear_cover", read("rear_cover_id"))
        If read("ex_stator_id") <> 0 Then
            mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read("ex_stator_id"))
            mysql_new4(localhost$, "creo", "ex_sta_co_asm", dr3("exciter_stator_core_id"))
            mysql_new5(localhost$, "creo", "exciter_stator", dr4("exciter_stator_id"))

        End If
        Dim c, d As Double
        Dim a, aa, idc, idb, ida As Double()
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)
        assembly = CType(m1, IpfcAssembly) '
        partValue(m1)
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子总装配
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))

        m2 = activateModel(read("rotor_path"), 0)
        feats = listModelItem(m2, "FEATURE")
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)
        a = {84, 87, 84, 84}
        aa = {87, feats.Item(8).Id, 84, 80} '单

        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0) '双
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()



        '/////////////////////////////
        '前端盖（双支撑）

        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path")) '单支撑
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            a = {84, 84, 90}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 332, 137, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
            asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path")) '装配件
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            a = {84, 84, 90}
            aa = {c, 379}
            constraints = 面面约束(asmcomp_2, a, aa, 332, 64, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
            constraints.Clear()
        End If

        '后端盖
        '/////////////////////////////
        If dr("bracket_type") = 1 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path")) '无凸起部分
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 149, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "RIGHT", 2)
            constraints.Clear()
            '/////////////////////////////
            '防护罩
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            idb = {130}
            idc = {321}
            ida = {0, 0} '0
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
            constraints.Clear()

        ElseIf dr("bracket_type") = 2 Then
            '''''''''''有凸起部分

            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id

            a = {84, 84, 83}
            aa = {c}
            constraints = 面面约束(asmcomp_2, a, aa, 73, 190, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "RIGHT", 2)
            constraints.Clear()
            '防护罩  hou 
            asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(10).Id
            a = {c}
            aa = {d}
            idb = {150, 130} '149
            idc = {326, 321} '308
            ida = {0, 0} '0
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            a = {84}
            aa = {d}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "FRONT", 0)
            constraints.Clear()
        End If

        '----------------------------------------------------------------------------------------------------------
        '-----------------------------------------------------------------------------------------------------------
        '接线盒与基座
        'asmcomp_2 = 插入零件_1(assembly, 0, "E:\works\creo\box_assembly\280\3sb-676-280")
        'MkDir("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString)
        'box_改名("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString, "E:\works\creo\box_assembly\280\3sb-676-280.asm", read("junction_box_name"))
        'm1 = activateModel("start_asm", 0)
        'modelItems = listModelItem(m1, "FEATURE")
        'c = feats.Item(11).Id

        'a = {84, 84}
        'aa = {c, 88}
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "TOP", 0)
        'a = {84, 84, 1579}
        'aa = {c, 80}
        'idc = {469, 472}
        'idb = {337, 3450}
        'ida = {2, 2}
        'constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        'constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 0, read("junction_box_path"))
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84, 1579}
        aa = {modelItems.Item(11).Id, 123}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
        constraints = 面面约束(asmcomp_2, a, aa, 913, 146, 2) '侧面
        constraints = 面面约束(asmcomp_2, a, aa, 469, 82, 0) '圆弧
        constraints.Clear()

        '-----------------------------------------------------------------------------------------------------------
        '防护罩与基座
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask1_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        a = {84, 84, 1579}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 518, 1454, 0)
        a = {84, 84}
        aa = {c}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 1458, 1, 1, "ADTM10", "", 2)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "AA_43", "DTM3", 9)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------

        '-----------------------------------------------------------------------------------------------------------
        ' 基座与防护罩
        '基座与防护罩
        '93垫圈与防护罩
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(13).Id
        a = {84, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_43", "A_1")
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(13).Id
        d = feats.Item(14).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16, 0)
        constraints.Clear()

        '螺钉
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-a2-50-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(14).Id
        d = feats.Item(15).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '2----------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(16).Id
        a = {84, 84}
        aa = {c}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "AA_28", "A_1", 2)
        a = {84, 84, 1579}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 518, 10, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(16).Id
        d = feats.Item(17).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16, 0)
        constraints.Clear()

        '螺钉
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-a2-50-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(17).Id
        d = feats.Item(18).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '3-------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(19).Id
        a = {84, 84}
        aa = {d}    '183
        constraints = 轴约束(asmcomp_2, a, aa, "AA_27", "A_1")

        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(19).Id
        d = feats.Item(20).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16, 0)
        constraints.Clear()

        '螺钉
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-a2-50-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        d = feats.Item(21).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '4------------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(22).Id
        a = {84, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_42", "A_1")
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-200hv-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer6") + "\d" + read("standard_part6") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(22).Id
        d = feats.Item(23).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16, 0)
        constraints.Clear()

        '螺钉
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-a2-50-316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-镀锌")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part6") + "_" + read("standard_part6_screw_nail6") + "-4_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(23).Id
        d = feats.Item(24).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 2)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()


        '标准件1前端盖与机座
        '''''''''''''''''''''''''''''''
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(25).Id
        a = {84, 84, 5626}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 10， 0)
        a = {84, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_53", "A_1")
        constraints.Clear()

        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(25).Id
        d = feats.Item(26).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16， 0)
        constraints.Clear()

        ''螺栓 -1


        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-a2-70-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(26).Id
        d = feats.Item(27).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()



        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(28).Id
        a = {84, 84, 5616}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 64, 10， 0)
        a = {84, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_52", "A_1")
        constraints.Clear()


        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(28).Id
        d = feats.Item(29).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16， 0)
        constraints.Clear()

        ''螺栓 -1
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-a2-70-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(29).Id
        d = feats.Item(30).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()

        '标准件2后端盖防护罩部分
        '''''''''''''''''''''''''''''''
        '垫圈
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-200hv-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-300hv-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(31).Id
        a = {c} '后防护罩
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 181, 16， 0)
        constraints.Clear()


        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-200hv-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-300hv-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(31).Id
        d = feats.Item(32).Id
        a = {c}
        aa = {d}

        constraints = 面面约束(asmcomp_2, a, aa, 7, 10， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 24， 0)
        constraints.Clear()


        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-50-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(33).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '/////////////////////////////////
        '后端盖固定
        '/////////////////////

        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-200hv-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-300hv-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(34).Id
        a = {c} '后端盖
        aa = {d}
        If read("type") = 2 Then
            '/////////////////////////////////无凸起
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 2107, 16， 0)

        ElseIf read("type") = 1 Then
            '/////////////////////////////////有凸起
            constraints = 面面约束(asmcomp_2, a, aa, 315, 2， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 1514, 16， 0)
        End If
        constraints.Clear()

        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-200hv-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(34).Id
        d = feats.Item(35).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 10， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 24， 0)
        constraints.Clear()

        '螺杆
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(35).Id
        d = feats.Item(36).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 24, 16， 0)
        constraints.Clear()



        ' 与轴承
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(37).Id

        a = {87, 87}
        aa = {c}
        idc = {533, 424}
        idb = {205, 233}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(37).Id
        d = feats.Item(38).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)
        constraints.Clear()

        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(39).Id

        a = {87, 87}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 116, 183， 0) '轴
        constraints = 面面约束(asmcomp_2, a, aa, 170, 193， 0) '面
        constraints.Clear()
        ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer2"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(39).Id
        d = feats.Item(40).Id
        a = {c}
        aa = {d}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)
        constraints.Clear()


        If read("ex_stator_id") <> 0 Then
            '励磁机定子
            '////////////////////////////////////类型1
            asmcomp_2 = 插入零件_1(assembly, 0, read("ex_stator_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(9).Id
            d = feats.Item(41).Id
            a = {c}
            aa = {d, 84, 84}

            constraints = 面面约束(asmcomp_2, a, aa, 121, 75， 0) '轴
            constraints = 面面约束(asmcomp_2, a, aa, 7229, 65， 0) '面,
            constraints = 面面约束(asmcomp_2, a, aa, 9633, 2316， 0) '孔
            constraints.Clear()

            If dr5("type") = 2 Then
                '////////////////////////////////////类型1
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-200hv-316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-300hv-镀锌")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-300hv-达克罗")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(41).Id
                d = feats.Item(42).Id
                a = {c, 84, 84} '后端盖
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 69, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 862, 16， 0)
                constraints.Clear()

            ElseIf dr5("type") = 1 Then
                '////////////////////////////////////类型2
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-200hv-316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-300hv-镀锌")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer5") + "\d" + read("standard_part5") + "-300hv-达克罗")
                End If
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(41).Id
                d = feats.Item(42).Id
                a = {c, 84, 84} '后端盖
                aa = {d}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 2， 0)
                constraints = 面面约束(asmcomp_2, a, aa, 2285, 16， 0)
                constraints.Clear()
            End If

            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(42).Id
            d = feats.Item(43).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 7, 10， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 16, 24， 0)
            constraints.Clear()


            '螺杆
            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-a2-70-316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-镀锌")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-达克罗")
            End If
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(43).Id
            d = feats.Item(44).Id
            a = {c}
            aa = {d}
            constraints = 面面约束(asmcomp_2, a, aa, 15, 47， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 24, 16， 0)
            constraints.Clear()

        End If



        feats = listModelItem(m1, "FEATURE")
        feat = feats.Item(25)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(26)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(27)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()


        feat = feats.Item(28)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(29)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(30)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(31)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(32)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(33)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(34)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(35)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()
        feat = feats.Item(36)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        selBuffer.Clear()

        If read("ex_stator_id") <> 0 Then

            feat = feats.Item(42)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

            selBuffer.Clear()
            feat = feats.Item(43)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

            selBuffer.Clear()
            feat = feats.Item(44)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

            selBuffer.Clear()

        End If

        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)

        添加bom新内容(ItemString, m1)
        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)

        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        添加图幅注释(m2, read("T_MOTOR"))




        If read("type") = 1 Then '单支撑


        ElseIf read("type") = 2 Then

            If dr("bracket_type") = 1 Then
                刨视图("view_1", "XSEC0001", "halfPlane", 45 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (41 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (48 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (55 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (39 + StringNumber / 4).ToString + "39`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            Else

                刨视图("view_1", "XSEC0001", "halfPlane", 41 + StringNumber / 4)
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (37 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (46 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (53 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dim`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (35 + StringNumber / 4).ToString + "`;")
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
            End If
        End If
        加入球标()

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)

        零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", imgPath$ + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_path") + "_MX.xlsx", imgPath$ + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        If read("ex_stator_path") <> "0" Then
            零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), path + "\" + read("ex_stator_code") + ".drw.1")

            零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        End If
        If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
            零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), path + "\" + read("front_cover_code") + ".drw.1")
        ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
            零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), path + "\" + read("front_cover_code") + ".drw.1")
        End If
        If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
            零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), path + "\" + read("rear_cover_ccode") + ".drw.1")
        ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
            零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), path + "\" + read("rear_cover_code") + ".drw.1")
        End If
        零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), path + "\" + read("round_mask_code") + ".drw.1")
        If read("strip_mask1_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), path + "\" + read("strip_mask1_code") + ".drw.1")
        End If
        If read("strip_mask2_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), path + "\" + read("strip_mask2_code") + ".drw.1")
        End If
        If read("strip_mask_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), path + "\" + read("strip_mask_code") + ".drw.1")
        End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)
        tms = 图样目录表(path， read("code"))
        tjys = 通借用表(path， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path， read("code"))
        End If
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("ex_stator_path") <> "0" Then
            If Dir(path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE")) '
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub '双

    Public Sub 加入球标()
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                    "~ Command `ProCmdDwgTblBlnShow`;")
    End Sub
    Public Function 是否外购(sources_mx) As Boolean
        是否外购 = False
        For i = 0 To sources_mx.Count - 1
            If sources_mx(i) = "外购件" Then
                是否外购 = True
            End If
        Next
        Return 是否外购
    End Function
    Public Function 是否标准(sources_mx) As Boolean
        是否标准 = False
        For i = 0 To sources_mx.Count - 1
            If sources_mx(i) = "标准件" Then
                是否标准 = True
            End If
        Next
        Return 是否标准
    End Function
    Public Function 明细表_new(model As IpfcModel) As ArrayList
        codes_mx.Clear()
        sheet_sizes_mx.Clear()
        conNames_mx.Clear()
        own_asm_mx.Clear()
        numbers_mx.Clear()
        numbers_mx.Clear()
        materials_mx.Clear()
        sin_weights_mx.Clear()
        con_weights_mx.Clear()
        remarks_mx.Clear()
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_mx.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames_mx.Add(GetTableInfo)
                End If
                If n = 4 Then
                    numbers_mx.Add(GetTableInfo)
                End If
                If n = 5 Then
                    materials_mx.Add(GetTableInfo)
                End If
                If n = 6 Then
                    sin_weights_mx.Add(GetTableInfo)
                End If
                If n = 7 Then
                    con_weights_mx.Add(GetTableInfo)
                End If
                If n = 8 Then
                    remarks_mx.Add(GetTableInfo)
                End If
            Next
        Next
        closeWindow(m1)
        Threading.Thread.Sleep(5000)
        m3 = activateModel(model.FullName, 0)
        models = session.ListModels()
        For z = 0 To codes_mx.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                If m2.FullName = codes_mx(z) Then
                    If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                        m1 = activateModel(codes_mx(z), 0)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(m3.FullName)
                        closeWindow(m1)
                    ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                        m1 = activateModel(codes_mx(z), 1)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(m3.FullName)
                        closeWindow(m1)
                    End If
                End If
            Next
        Next
        mxs.Add(codes_mx)
        mxs.Add(sheet_sizes_mx)
        mxs.Add(conNames_mx)
        mxs.Add(own_asm_mx)
        mxs.Add(numbers_mx)
        mxs.Add(numbers_mx)
        mxs.Add(materials_mx)
        mxs.Add(sin_weights_mx)
        mxs.Add(con_weights_mx)
        mxs.Add(remarks_mx)

        Return mxs

    End Function
    Public Function 外购表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-wg", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        Threading.Thread.Sleep(3000)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        Threading.Thread.Sleep(500)
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ' '‘’'msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_wg.Add(GetTableInfo)
                    ''‘’'msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_wg.Add(GetTableInfo)
                    ''‘’'msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    materials_wg.Add(GetTableInfo)
                    ''‘’'msgbox(materials(i - 1))
                End If
                If n = 5 Then
                    numbers_wg.Add(GetTableInfo)
                    ''‘’'msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_wg.Add(GetTableInfo)
                    ''‘’'msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_wg.Add(GetTableInfo)
                    ''‘’'msgbox(materials(i - 1))
                End If
            Next
        Next
        wgs.Add(codes_wg)
        wgs.Add(conNames_wg)
        wgs.Add(materials_wg)
        wgs.Add(numbers_wg)
        wgs.Add(remarks_wg)
        endApp()
        Return wgs

    End Function
    Public Function 标准表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-bz", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        Threading.Thread.Sleep(3000)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        Threading.Thread.Sleep(500)
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’'msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_bz.Add(GetTableInfo)
                    ''‘’'msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_bz.Add(GetTableInfo)
                    ''‘’'msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    materials_bz.Add(GetTableInfo)
                    ''‘’'msgbox(materials(i - 1))
                End If
                If n = 5 Then
                    numbers_bz.Add(GetTableInfo)
                    ''‘’'msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_bz.Add(GetTableInfo)
                    ''‘’'msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_bz.Add(GetTableInfo)
                    ''‘’'msgbox(materials(i - 1))
                End If
            Next
        Next
        bzs.Add(codes_bz)
        bzs.Add(conNames_bz)
        bzs.Add(materials_bz)
        bzs.Add(numbers_bz)
        bzs.Add(remarks_bz)
        endApp()
        Return bzs

    End Function
    Public Function 自制表(address$, asmName$, frmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        retrieveModel("frm", address + "/" + frmName)
        retrieveModel("drw", address + "/" + asmName)
        m1 = activateModel(asmName, 2)
        drawing = CType(drw, IpfcDrawing)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’'msgbox(TablesInfo)
        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_zz.Add(GetTableInfo)
                End If
            Next
        Next
        m3 = activateModel(asmName, 0)
        models = session.ListModels()
        For z = 0 To codes_zz.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                m2 = activateModel(m2.FullName, m2.Type)
                closeWindow(m2)
                If GetParamStringValue(m2, "SOURCE") = "自制件" Then
                    If m2.FullName = codes_zz(z) Then
                        If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                            m1 = activateModel(codes_zz(z), 0)
                            code_news_zz.Add(GetParamStringValue(m1, "PART_NUMBER"))
                            conNames_zz.Add(GetParamStringValue(m1, "PART_NAME"))
                            sources_zz.Add(GetParamStringValue(m1, "SOURCE"))
                            materials_zz.Add(GetParamStringValue(m1, "MATERIAL"))
                            sin_weights_zz.Add(GetParamDoubleValue(m1, "MASS"))
                            sheet_sizes_zz.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                            importances_zz.Add(GetParamStringValue(m1, "IMPORTANCE"))
                            remarks_zz.Add(GetParamStringValue(m1, "REMARK"))
                            own_asm_zz.Add(m3.FullName)
                            numbers_zz.Add(1)
                            closeWindow(m1)
                        ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                            m1 = activateModel(codes_zz(z), 1)
                            code_news_zz.Add(GetParamStringValue(m1, "PART_NUMBER"))
                            conNames_zz.Add(GetParamStringValue(m1, "PART_NAME"))
                            sources_zz.Add(GetParamStringValue(m1, "SOURCE"))
                            materials_zz.Add(GetParamStringValue(m1, "MATERIAL"))
                            sin_weights_zz.Add(GetParamDoubleValue(m1, "MASS"))
                            sheet_sizes_zz.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                            importances_zz.Add(GetParamStringValue(m1, "IMPORTANCE"))
                            remarks_zz.Add(GetParamStringValue(m1, "REMARK"))
                            own_asm_zz.Add(m3.FullName)
                            numbers_zz.Add(1)
                            closeWindow(m1)
                        End If
                    End If
                End If
            Next
        Next
        zzs.Add(code_news_zz)
        zzs.Add(conNames_zz)
        zzs.Add(own_asm_zz)
        zzs.Add(numbers_zz)
        zzs.Add(numbers_zz)
        zzs.Add(sources_zz)
        zzs.Add(materials_zz)
        zzs.Add(sin_weights_zz)
        zzs.Add(sheet_sizes_zz)
        zzs.Add(importances_zz)
        zzs.Add(remarks_zz)
        endApp()
        Return zzs

    End Function
    Public Function 明细表(model As IpfcModel) As ArrayList
        codes_mx.Clear()
        sheet_sizes_mx.Clear()
        conNames_mx.Clear()
        own_asm_mx.Clear()
        numbers_mx.Clear()
        numbers_mx.Clear()
        materials_mx.Clear()
        sin_weights_mx.Clear()
        con_weights_mx.Clear()
        remarks_mx.Clear()
        mxs.Clear()
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)


        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_mx.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames_mx.Add(GetTableInfo)
                End If
                If n = 4 Then
                    numbers_mx.Add(GetTableInfo)
                End If
                If n = 5 Then
                    materials_mx.Add(GetTableInfo)
                End If
                If n = 6 Then
                    sin_weights_mx.Add(GetTableInfo)
                End If
                If n = 7 Then
                    con_weights_mx.Add(GetTableInfo)
                End If
                If n = 8 Then
                    remarks_mx.Add(GetTableInfo)
                End If
            Next
        Next
        closeWindow(model)
        Threading.Thread.Sleep(5000)

        m3 = activateModel(model.FullName, 0)
        models = session.ListModels()



        For i = 0 To codes_mx.Count - 1
            codes_mx_new.Add(Replace(codes_mx(i), ".", "_"))
            codes_mx_new2.Add(Replace(codes_mx(i), "_", "."))
        Next
        For z = 0 To codes_mx.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                If m2.FullName = codes_mx_new(z) Then


                    If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                        m1 = activateModel(codes_mx_new(z), 0)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(Replace（m3.FullName, "_", "."))

                        closeWindow(m1)
                    ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                        m1 = activateModel(codes_mx_new(z), 1)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(Replace（m3.FullName, "_", "."))

                        closeWindow(m1)
                    End If
                End If
            Next
        Next
        mxs.Add(codes_mx_new2)
        mxs.Add(sheet_sizes_mx)
        mxs.Add(conNames_mx)
        mxs.Add(own_asm_mx)
        mxs.Add(numbers_mx)
        mxs.Add(numbers_mx)
        mxs.Add(materials_mx)
        mxs.Add(sin_weights_mx)
        mxs.Add(con_weights_mx)
        mxs.Add(remarks_mx)
        endApp()
        Return mxs

    End Function
    Public Function 通借用表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-tjy", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        Threading.Thread.Sleep(3000)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’'msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_tjy.Add(GetTableInfo)
                    ''‘’'msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_tjy.Add(GetTableInfo)
                    ' '‘’'msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    numbers_tjy.Add(GetTableInfo)
                    ''‘’'msgbox(numbers(i - 1))
                End If
                If n = 5 Then
                    materials_tjy.Add(GetTableInfo)
                    ' '‘’'msgbox(materials(i - 1))
                End If
                If n = 6 Then
                    sin_weights_tjy.Add(GetTableInfo)
                    ' '‘’'msgbox(sin_weights(i - 1))
                End If
                If n = 7 Then
                    con_weights_tjy.Add(GetTableInfo)
                    ''‘’'msgbox(con_weights(i - 1))
                End If
                If n = 8 Then
                    remarks_tjy.Add(GetTableInfo)
                    ' '‘’'msgbox(remarks(i - 1))
                End If
            Next
        Next
        tjys.Add(codes_tjy)
        tjys.Add(conNames_tjy)
        tjys.Add(materials_tjy)
        tjys.Add(numbers_tjy)
        tjys.Add(remarks_tjy)
        endApp()
        Return tjys

    End Function
    Public Function 图样目录表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-tm", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        Threading.Thread.Sleep(3000)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’'msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    sheet_sizes_tm.Add(GetTableInfo)
                    ''‘’'msgbox(sheet_sizes(i - 1))
                End If
                If n = 3 Then
                    codes_tm.Add(GetTableInfo)
                    ' '‘’'msgbox(codes(i - 1))
                End If
                If n = 4 Then
                    conNames_tm.Add(GetTableInfo)
                    ''‘’'msgbox(conNames(i - 1))
                End If
                If n = 5 Then
                    numbers_tm.Add(GetTableInfo)
                    ''‘’'msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_tm.Add(GetTableInfo)
                    ''‘’'msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_tm.Add(GetTableInfo)
                    ''‘’'msgbox(partTypes(i - 1))
                End If
            Next
        Next
        tms.Add(sheet_sizes_tm)
        tms.Add(codes_tm)
        tms.Add(conNames_tm)
        tms.Add(numbers_tm)
        tms.Add(remarks_tm)
        endApp()
        Return tms

    End Function

    Public Sub deleteFileChangeModel_new(modelType$, modelPath$, A1#)

        DeleteFoldeSubFF("E:\works\Creo\Process file\")
        fileBackup_new(modelType, modelPath, A1#)

        m1 = openModel(modelType, "E:\works\Creo\Process file\transition." + modelType + ".1")

    End Sub
    Public Sub fileBackup_new(modelType$, modelPath$, a1#)

        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        m1 = retrieveModel(modelType, modelPath)
        If modelType = "asm" Then
            m1 = activateModel(Right(modelPath, a1), 0)
        ElseIf modelType = "prt" Then
            m1 = activateModel(Right(modelPath, a1), 1)
        ElseIf modelType = "drw" Then
            m1 = activateModel(Right(modelPath, a1), 2)
        End If
        m1.Rename("transition", True)
        smodel = m1.Descr
        smodel.Path = "E:\works\Creo\Process file"
        m1.Backup(smodel)
        endApp()

    End Sub
    Public Sub 导入表(path$, name$, Optional tap$ = "", Optional code$ = "")
        Dim xlApp As New Excel.Application
        Dim xlBook As Microsoft.Office.Interop.Excel.Workbook
        Dim xlSheet As Microsoft.Office.Interop.Excel.Worksheet
        xlApp = CreateObject("Excel.Application")
        xlApp.Visible = False
        'xlBook = xlApp.Workbooks.Add
        On Error Resume Next
        '打开mx表
        If mxs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15MX.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (mxs(0).Count / 20) < 1 Then
                For i = 0 To mxs(0).Count - 1




                    mxs.Add(codes_mx_new2)
                    mxs.Add(sheet_sizes_mx)
                    mxs.Add(conNames_mx)
                    mxs.Add(own_asm_mx)
                    mxs.Add(numbers_mx)
                    mxs.Add(numbers_mx)
                    mxs.Add(materials_mx)
                    mxs.Add(sin_weights_mx)
                    mxs.Add(con_weights_mx)
                    mxs.Add(remarks_mx)


                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 1 < (mxs(0).Count / 20) < 2 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To mxs(0).Count - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(15 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 2 < (mxs(0).Count / 20) < 3 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To 40 - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(15 + i, 29).Value = mxs(9)(i)
                Next
                For i = 40 To mxs(0).Count - 1
                    xlSheet.Cells(25 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(25 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(25 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(25 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(25 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(25 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(25 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(25 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(25 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 3 < (mxs(0).Count / 20) < 4 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To 40 - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 40 To 60 - 1
                    xlSheet.Cells(25 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(25 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(25 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(25 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(25 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(25 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(25 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(25 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(25 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 60 To mxs(0).Count - 1
                    xlSheet.Cells(34 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(34 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(34 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(34 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(34 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(34 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(34 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(34 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(34 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(34 + i, 29).Value = mxs(9)(i)
                Next
            End If
            If (mxs(0).Count / 32) < 1 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
            ElseIf 1 < (mxs(0).Count / 32) < 2 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
            ElseIf 2 < (mxs(0).Count / 32) < 3 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
                xlSheet.Range("S89").Value = tap
                xlSheet.Range("X89").Value = code
            ElseIf 3 < (mxs(0).Count / 32) < 4 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
                xlSheet.Range("S89").Value = tap
                xlSheet.Range("X89").Value = code
                xlSheet.Range("S129").Value = tap
                xlSheet.Range("X129").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_MX" + ".xlsx")
            xlBook.Close()
        End If
        '打开bz表
        If bzs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15BZ.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (bzs(0).Count / 32) < 1 Then
                For i = 1 To bzs(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 1 < (bzs(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To bzs(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 2 < (bzs(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
                For i = 67 To bzs(0).Count - 1
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 3 < (bzs(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = bzs(4)(i)
                Next
                For i = 100 To bzs(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = bzs(4)(i)
                Next
            End If
            If (bzs(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (bzs(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (bzs(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (bzs(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_BZ" + ".xlsx")
            xlBook.Close()
        End If
        '打开WG表
        If wgs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15WG.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (wgs(0).Count / 32) < 1 Then
                For i = 1 To wgs(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 1 < (wgs(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To wgs(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 2 < (wgs(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
                For i = 67 To wgs(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 3 < (wgs(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = wgs(4)(i)
                Next
                For i = 100 To wgs(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = wgs(4)(i)
                Next
            End If

            If (wgs(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (wgs(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (wgs(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (wgs(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_WG" + ".xlsx")
            xlBook.Close()

        End If
        '打开TJ表
        If tjys.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15TJY.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (tjys(0).Count / 32) < 1 Then
                For i = 1 To tjys(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 1 < (tjys(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To tjys(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 2 < (tjys(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
                For i = 67 To tjys(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(22 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(22 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 3 < (tjys(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = tjys(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tjys(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tjys(4)(i)
                Next
                For i = 10 To tjys(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(32 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(32 + i, 14).Value = tjys(4)(i)
                Next
            End If


            If (tjys(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (tjys(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (tjys(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (tjys(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_TJY" + ".xlsx")
            xlBook.Close()
        End If
        '打开TM表
        If tms.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15TM.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (tms(0).Count / 32) < 1 Then
                For i = 1 To tms(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)

                Next
            ElseIf 1 < (tms(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To tms(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
            ElseIf 2 < (tms(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
                For i = 67 To tms(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(22 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(22 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tms(4)(i)
                Next
            ElseIf 3 < (tms(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(22 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(22 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tms(4)(i)
                Next
                For i = 100 To tms(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(32 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(32 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = tms(4)(i)
                Next
            End If
            Dim A1, A2, A3, A4, A0 As Double
            A1 = 0
            A2 = 0
            A3 = 0
            A4 = 0
            A0 = 0
            For i = 0 To tms(0).Count - 1
                If tms(0)(i) = "A1" Then
                    A1 = A1 + 1
                ElseIf tms(0)(i) = "A2" Then
                    A2 = A2 + 1
                ElseIf tms(0)(i) = "A3" Then
                    A3 = A3 + 1
                ElseIf tms(0)(i) = "A4" Then
                    A4 = A4 + 1
                ElseIf tms(0)(i) = "A0" Then
                    A0 = A0 + 1
                End If
            Next

            If (tms(0).Count / 32) < 1 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
            ElseIf 1 < (tms(0).Count / 32) < 2 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code

            ElseIf 2 < (tms(0).Count / 32) < 3 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H122").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H123").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H124").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code
                xlSheet.Range("H128").Value = tap
                xlSheet.Range("M127").Value = code
            ElseIf 3 < (tms(0).Count / 32) < 4 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H122").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H123").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H124").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H165").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H166").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H167").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code
                xlSheet.Range("H128").Value = tap
                xlSheet.Range("M127").Value = code
                xlSheet.Range("H171").Value = tap
                xlSheet.Range("M170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_TM" + ".xlsx")
            xlBook.Close()
        End If
        xlApp.Quit()
    End Sub

    Public Sub 明细表合并(path$, Optional path1$ = "", Optional path2$ = "", Optional path3$ = "", Optional path4$ = "", Optional path5$ = "")
        Dim xlApp As New Excel.Application
        Dim xlBook, xlBook2, xlBook3, xlBook4, xlBook5, xlBook6 As Microsoft.Office.Interop.Excel.Workbook
        Dim xlSheet, xlSheet2, xlSheet3, xlSheet4, xlSheet5, xlSheet6 As Microsoft.Office.Interop.Excel.Worksheet
        xlApp = CreateObject("Excel.Application")
        xlApp.Visible = True
        'xlBook = xlApp.Workbooks.Add
        On Error Resume Next
        '打开明细表
        xlBook = xlApp.Workbooks.Open(path)
        xlSheet = xlBook.Sheets("Sheet1")
        If path1$ <> "" Then
            '打开子装配明细表 定子
            xlBook2 = xlApp.Workbooks.Open(path1)
            xlSheet2 = xlBook2.Sheets("Sheet1")

            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet2.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet2.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next
                            Exit For
                        End If
                    Next
                    Exit For

                End If
            Next
        End If
        '打开子装配明细表 转子
        If path2$ <> "" Then
            xlBook3 = xlApp.Workbooks.Open(path2)
            xlSheet3 = xlBook3.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet3.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet3.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path3$ <> "" Then
            xlBook4 = xlApp.Workbooks.Open(path3)
            xlSheet4 = xlBook4.Sheets("Sheet1")

            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet4.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet4.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next

                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path4$ <> "" Then
            xlBook5 = xlApp.Workbooks.Open(path4)
            xlSheet5 = xlBook5.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet5.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet5.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value
                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path5$ <> "" Then
            xlBook6 = xlApp.Workbooks.Open(path5)
            xlSheet6 = xlBook6.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet6.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet6.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value
                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        xlBook.Save()
        xlBook.Close()
        xlApp.Quit()
    End Sub
    Public Sub 零件工程图转移（path$, Afterpath$）
        FileIO.FileSystem.CopyFile(path$, Afterpath$)
    End Sub

    Public Sub 装配体图纸转移（path$, Afterpath$, name$）

        FileIO.FileSystem.CopyDirectory(path$, Afterpath$ + "\" + name)
    End Sub
    Public Sub 生成文件夹（Afterpath$, name$）

        If Dir(Afterpath$ + "\" + name, vbDirectory) = "" Then
            MkDir(Afterpath$ + "\" + name)
        Else
            DeleteFoldeSubFF(Afterpath$ + "\" + name)
        End If

    End Sub
    Public Sub Pattern2(a$) '阵列


        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + a + "`;")

        ''‘’'msgbox(6)
        ' 根据参考阵列
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;\")
        AC.Session.RunMacro("8 ~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;\")
        AC.Session.RunMacro("8 ~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;\")
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;\")







        ' 根据轴阵列
        'AC.Session.RunMacro("0 ~ Command `ProCmdPattern` ; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` ``; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; @PAUSE_FOR_SCREEN_PICK; ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_axis_angle_push`; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node6`;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        Threading.Thread.Sleep(1000)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_2`;")

    End Sub
    Public Function StrstoTextlines(Texts$) As CpfcDetailTextLines
        '将String赋值给textLines
        StrstoTextlines = New CpfcDetailTextLines
        Strs = Split(Texts, Chr(10)) '根据回车符分割确定行数
        '根据行数创建对象并添加内容
        For i = 0 To Strs.Length - 1
            detailText = (New CCpfcDetailText).Create(Strs(Strs.Length - i - 1)) '注意顺序
            detailTexts = New CpfcDetailTexts
            detailTexts.Insert(0, detailText)
            textLine = (New CCpfcDetailTextLine).Create(detailTexts)
            StrstoTextlines.Insert(0, textLine)
        Next
    End Function
    Public Sub 无引线注释(drawing As IpfcDrawing, texts$, x#, y#, Optional z# = 0, Optional Angle# = 0)

        textLines = StrstoTextlines(texts)

        '由创建点选注释放置的位置
        position = (New CCpfcFreeAttachment).Create(CreatePoint(x, y, z))
        '设置Attachments
        allAttachments = (New CCpfcDetailLeaders).Create()
        allAttachments.ItemAttachment = position
        ' 设置 注释构造器（noteInstructions）  
        noteInstructions = (New CCpfcDetailNoteInstructions).Create(textLines)
        ' 注释角度
        noteInstructions.TextAngle = Angle
        noteInstructions.Leader = allAttachments
        '创建note并显示
        note = drawing.CreateDetailItem(noteInstructions)
        note.Show()

    End Sub

    Public Sub 选中球标(model As IpfcModel, i As Integer， j As Integer)
        selBuffer.Clear()
        modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
        '第一个球标
        note_Item_10 = modelItems.Item(i)
        detailItem10 = CType(note_Item_10, IpfcDetailItem)
        symItem10 = CType(detailItem10, IpfcDetailSymbolInstItem)
        detailSymbolDefInstructions10 = symItem10.GetInstructions(True)
        detailVariantTexts10 = detailSymbolDefInstructions10.TextValues
        detailVariantText10 = detailVariantTexts10.Item(0)
        compSelect_10 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果

        '第二个 球标
        note_Item_11 = modelItems.Item(j)
        detailItem11 = CType(note_Item_11, IpfcDetailItem)
        symItem11 = CType(detailItem11, IpfcDetailSymbolInstItem)
        detailSymbolDefInstructions11 = symItem11.GetInstructions(True)
        detailVariantTexts11 = detailSymbolDefInstructions11.TextValues
        detailVariantText11 = detailVariantTexts11.Item(0)
        compSelect_11 = (New CMpfcSelect).CreateModelItemSelection(note_Item_11, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果

        selBuffer.AddSelection(compSelect_10)
        selBuffer.AddSelection(compSelect_11)
        AC.Session.RunMacro("~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                                "~ Command `ProCmdDwgTblBlnQtyMrg`;") ' 合并球标     J的位置 排在 I的位置的后面 
        ''‘’'msgbox(detailVariantText10.Value)
        '选中表格内容(model)
        ''‘’'msgbox(ballmarks(i))
        ''‘’'msgbox(codes(i))
        ''‘’'msgbox(conNames(i))
        ''‘’'msgbox(numbers(i))
    End Sub

    Public Sub 修改注释字体大小(modelItems As IpfcModelItems, j#, size#)
        note_Item_10 = modelItems.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDtlSetTextHeight`  " + size.ToString + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 修改绘制尺寸值(feats As IpfcModelItems, j#， n#)
        asmItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ;~ Command `ProCmdPmaInpDimOverrideVal`  `" + n.ToString + "`;")
        selBuffer.Clear()
    End Sub
    Public Function 根据选中尺寸(model As IpfcModel, dimensionName$) As IpfcDimension
        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, dimensionName)
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension = CType(BaDimension, IpfcDimension)
        Return Dimension
    End Function
    Public Function 选中视图(view2dType$, view2DName$) As IpfcSelection
        If view2dType = "general" Then
            AC.Session.RunMacro("~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view2DName + " 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        ElseIf view2dType = "local" Then
            AC.Session.RunMacro("~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view2DName + " 92 0 101 -1 -1`;" +
                   "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        End If

        compSelect_1 = selBuffer.Contents.Item(0)
        selBuffer.Clear()
        Return compSelect_1
    End Function
    Public Sub 删除注释符号(feats As IpfcModelItems, j#)
        asmItem_1 = feats.Item(j)
        If asmItem_1.Type = 10 Then
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
            selBuffer.Clear()
        Else
            detailItem = CType(asmItem_1, IpfcDetailItem)
            detailItem.Delete()
        End If
    End Sub
    Public Sub 修改注释内容(feats As IpfcModelItems, j#, Optional tolValue# = 0.1, Optional datumSym$ = "A")
        asmItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        detailItem = CType(asmItem_1, IpfcDetailItem)
        DetailSymbolInstItem = CType(detailItem, IpfcDetailSymbolInstItem)
        symInstructions = DetailSymbolInstItem.GetInstructions(True)
        detailVariantTexts = symInstructions.TextValues
        detailVariantText = detailVariantTexts.Item(0)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        If detailVariantText.Value.Split("0")(0) = "n" Then
            AC.Session.RunMacro("8 ~ Select `drawing_sym_asynch` `tab_main` 1 `lay_var_text`;" +
                               "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.0`;" +
                               "~ Update `drawing_sym_asynch` `inp_gtolchar.0` `n" + tolValue.ToString + "`;" +
                               "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.1`;" +
                               "~ Update `drawing_sym_asynch` `inp_gtolchar.1` `" + datumSym + "`;" +
                               "~ Activate `drawing_sym_asynch` `OK_modif_push`;")
        Else
            AC.Session.RunMacro("8 ~ Select `drawing_sym_asynch` `tab_main` 1 `lay_var_text`;" +
                             "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.0`;" +
                             "~ Update `drawing_sym_asynch` `inp_gtolchar.0` `" + tolValue.ToString + "`;" +
                             "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.1`;" +
                             "~ Update `drawing_sym_asynch` `inp_gtolchar.1` `" + datumSym + "`;" +
                             "~ Activate `drawing_sym_asynch` `OK_modif_push`;")
        End If

    End Sub
    Public Sub 移动视图(view2dType$, view2DName$, x_view2D#, y_view2D#)
        selBuffer.AddSelection(选中视图(view2dType$, view2DName$))
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;" +
                          "~ Select `drawing_view` `options_list` 1 `Origin`;" +
                          "~ Update `drawing_view` `view_x_ip` `" + x_view2D.ToString + "`;" +
                          "~ FocusOut `drawing_view` `view_x_ip`;" +
                          "~ Update `drawing_view` `view_y_ip` `" + y_view2D.ToString + "`;" +
                          "~ FocusOut `drawing_view` `view_y_ip`;" +
                          "~ Activate `drawing_view` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Function 选中表格内容(model As IpfcModel) As ArrayList

        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        For n = 1 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 1 Then
                    ballmarks.Add(GetTableInfo)
                End If
                If n = 2 Then
                    codes.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames.Add(GetTableInfo) '
                End If
                If n = 4 Then
                    numbers.Add(GetTableInfo)
                End If
            Next
        Next
        contents.Add(ballmarks)
        contents.Add(codes)
        contents.Add(conNames)
        contents.Add(numbers)

        Return contents

    End Function

    Public Function 零件技术要求(drawing As IpfcDrawing, requirements As String(), note_location#()) As IpfcDrawing


        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)

        End If

        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function


    Public Function 工程图(m1 As IpfcModel, frmName$, viewScale#, section$, FRONT_view#, TOP_view#, RIGHT_view#, requirements As String(), note_location#(), FRONT_location#(), TOP_location#(), RIGHT_location#()) As IpfcDrawing
        ' 前视图FRONT 对应的截面为Z；右视图RIGHT 对应的截面为X；俯视图TOP 对应的截面为Y
        AC.Session.RunMacro("8 ~ Command `ProCmdXsecCsys" + section$ + "` ; ~ Activate `main_dlg_cur` `dashInst0.Done`;")
        ' 获得视图放置方向()
        view = m1.GetView("FRONT")
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        view_1 = m1.GetView("TOP")
        transform3D_1 = view_1.Transform
        transform3D_1 = transformNormalize(transform3D_1)

        view_2 = m1.GetView("RIGHT")
        transform3D_2 = view_2.Transform
        transform3D_2 = transformNormalize(transform3D_2)

        m1.Regenerate(Nothing)
        Threading.Thread.Sleep(500)

        ' 工程图
        ' 1、根据模板创建绘图，但是绘图是未激活的无法进行下一步操作
        ' 2、激活绘图，设定插入位置，转换矩阵 （注：激活视图与视图构造器之间时间太短的话会导致程序报错）
        ' 3、创建一般视图构造器，创建视图，刷新绘图
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, frmName, m1.Descr, drawingOptions)
        m2 = activate(m1.FullName, 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(500)
        ' 创建视图对象
        If FRONT_view# = 1 Then
            instrs = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(FRONT_location#(0), FRONT_location#(1)), transform3D)
        End If
        If TOP_view# = 1 Then
            instrs_1 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(TOP_location#(0), TOP_location#(1)), transform3D_1)
        End If
        If RIGHT_view# = 1 Then
            instrs_2 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(RIGHT_location#(0), RIGHT_location#(1)), transform3D_2)
        End If

        ' 更改视图比例
        If FRONT_view# = 1 Then
            instrs.Scale = viewScale
            view2D = drawing.CreateView(instrs)
            view2D.Name = "前视图"
        End If
        If TOP_view# = 1 Then
            instrs_1.Scale = viewScale
            view2D = drawing.CreateView(instrs_1)
            view2D.Name = "俯视图"
        End If
        If RIGHT_view# = 1 Then
            instrs_2.Scale = viewScale
            view2D = drawing.CreateView(instrs_2)
            view2D.Name = "右视图"
        End If

        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 10 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 11 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 12 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10) + Chr(10) + "    12." + requirements(11)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 13 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10) + Chr(10) + "    12." + requirements(11) + Chr(10) + "    13." + requirements(12)
        End If

        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function
    Public Function 工程图2(m1 As IpfcModel, frmName$, viewScale#, section$, FRONT_view#, TOP_view#, RIGHT_view#, requirements As String(), note_location#(), FRONT_location#(), TOP_location#(), RIGHT_location#()) As IpfcDrawing
        ' 前视图FRONT 对应的截面为Z；右视图RIGHT 对应的截面为X；俯视图TOP 对应的截面为Y
        AC.Session.RunMacro("8 ~ Command `ProCmdXsecCsys" + section$ + "` ; ~ Activate `main_dlg_cur` `dashInst0.Done`;")
        ' 获得视图放置方向()
        view = m1.GetView("FRONT")
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        view_1 = m1.GetView("TOP")
        transform3D_1 = view_1.Transform
        transform3D_1 = transformNormalize(transform3D_1)

        view_2 = m1.GetView("LEFT")
        transform3D_2 = view_2.Transform
        transform3D_2 = transformNormalize(transform3D_2)

        m1.Regenerate(Nothing)
        Threading.Thread.Sleep(500)

        ' 工程图
        ' 1、根据模板创建绘图，但是绘图是未激活的无法进行下一步操作
        ' 2、激活绘图，设定插入位置，转换矩阵 （注：激活视图与视图构造器之间时间太短的话会导致程序报错）
        ' 3、创建一般视图构造器，创建视图，刷新绘图
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, frmName, m1.Descr, drawingOptions)
        m2 = activate(m1.FullName, 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(500)
        ' 创建视图对象
        If FRONT_view# = 1 Then
            instrs = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(FRONT_location#(0), FRONT_location#(1)), transform3D)
        End If
        If TOP_view# = 1 Then
            instrs_1 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(TOP_location#(0), TOP_location#(1)), transform3D_1)
        End If
        If RIGHT_view# = 1 Then
            instrs_2 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(RIGHT_location#(0), RIGHT_location#(1)), transform3D_2)
        End If

        ' 更改视图比例
        If FRONT_view# = 1 Then
            instrs.Scale = viewScale
            view2D = drawing.CreateView(instrs)
            view2D.Name = "前视图"
        End If
        If TOP_view# = 1 Then
            instrs_1.Scale = viewScale
            view2D = drawing.CreateView(instrs_1)
            view2D.Name = "俯视图"
        End If
        If RIGHT_view# = 1 Then
            instrs_2.Scale = viewScale
            view2D = drawing.CreateView(instrs_2)
            view2D.Name = "左视图"
        End If

        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)

        End If

        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function

    Public Sub 带绕组转子铁芯工程图(m1 As IpfcModel, frmName$, viewScale#)
        AC.Session.RunMacro("8 ~ Command `ProCmdXsecCsysX` ; ~ Activate `main_dlg_cur` `dashInst0.Done`;")
        ' 获得视图放置方向()
        view = m1.GetView("FRONT")
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        view_1 = m1.GetView("TOP")
        transform3D_1 = view_1.Transform
        transform3D_1 = transformNormalize(transform3D_1)

        view_2 = m1.GetView("RIGHT")
        transform3D_2 = view_2.Transform
        transform3D_2 = transformNormalize(transform3D_2)

        m1.Regenerate(Nothing)
        Threading.Thread.Sleep(1000)
        ' 工程图
        ' 1、根据模板创建绘图，但是绘图是未激活的无法进行下一步操作
        ' 2、激活绘图，设定插入位置，转换矩阵 （注：激活视图与视图构造器之间时间太短的话会导致程序报错）
        ' 3、创建一般视图构造器，创建视图，刷新绘图
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, frmName, m1.Descr, drawingOptions)
        m2 = activate(m1.FullName, 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(1000)
        ' 创建视图对象
        instrs = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(700, 500), transform3D)
        'instrs_1 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(400, 300), transform3D_1)
        instrs_2 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(300, 500), transform3D_2)

        ' 更改视图比例
        instrs.Scale = 1 / viewScale
        'instrs_1.Scale = 0.1
        instrs_2.Scale = 1 / viewScale

        ' 在绘图（Drawing）内增加视图（View）  更改视图名称
        view2D = drawing.CreateView(instrs)
        view2D.Name = "前视图"
        'view2D = drawing.CreateView(instrs_1)
        'view2D.Name = "俯视图"
        view2D = drawing.CreateView(instrs_2)
        view2D.Name = "右视图"
        AC.Session.RunMacro("8 ~ Command `ProCmdDwgTblBlnShow`;")

        ' 插入符号(drawing, "D:\Creo\trail_dir\proe_stds\symbol\粗糙度符号\", "roughness_height", "2.5", "standard", 400, 600, 1.2)
        texts = "技术要求:" + Chr(10) + "    1.端面与轴孔中心线垂直度允差≤0.05" + Chr(10) + "    2.棱边倒角C1" + Chr(10) + "    3.未注公差尺寸的机械偏差按GB/T1804-m级精度"
        无引线注释(drawing, texts, 100, 200, 0, 0)
        '刨视图("view_2", "XSEC0001")

    End Sub
    Public Sub 刨视图(view$, sectionName$, planeModel$， Optional rePlanNumber# = 11)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中布局 如果要选中视图则需要先选中布局（暂时是这样）
        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中对应的视图 其中 view$ = view_2 中的数字可以控制哪一个视图
        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 -1 -1 -1`;")
        '' 视图属性操作 如果需要对视图进行下一步操作，则需要进入视图属性界面
        'AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        If planeModel = "fullPlane" Then
            ' 创建刨视图 在视图属性中创建刨视图其中 XSEC0001 为刨视图截面
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `options_list` 1 `Section`;" +
                               " ~ Select `drawing_view` `sec_options_rad` 1 `cross_sec`;" +
                               " ~ Activate `drawing_view` `add_section`;" +
                               " ~ FocusIn `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Open `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Close `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Select `drawing_view` `xsection_table:sec_name:0` 1 `" + sectionName + "`;" +
                               " ~ Activate `drawing_view` `psh_ok`;")
        ElseIf planeModel = "halfPlane" Then
            ' 创建半刨视图 在视图属性中创建刨视图其中 sectionName$ = XSEC0001 为刨视图截面
            ' 选择半刨参考面 node11 逆序排列
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `options_list` 1 `Section`;" +
                                "~ Select `drawing_view` `sec_options_rad` 1 `cross_sec`;" +
                                "~ Activate `drawing_view` `add_section`;" +
                                "~ FocusIn `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Open `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Close `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Select `drawing_view` `xsection_table:sec_name:0` 1 `" + sectionName + "`;" +
                                "~ Open `drawing_view` `xsection_table:sec_vis:0`;" +
                                "~ Close `drawing_view` `xsection_table:sec_vis:0`;" +
                                "~ Select `drawing_view` `xsection_table:sec_vis:0` 1 `Half`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + rePlanNumber.ToString + "`;" +
                                "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                                "~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER` " +
                                "`main_dlg_w1:PHTLeft.AssyTree:<NULL>`;~ Activate `drawing_view` `psh_apply`;" +
                                "~ Activate `drawing_view` `psh_ok`;")
        End If

    End Sub
    Public Sub 半视图(view$， Optional rePlanNumber# = 11)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中布局 如果要选中视图则需要先选中布局（暂时是这样）
        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中对应的视图 其中 view$ = view_2 中的数字可以控制哪一个视图
        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 -1 -1 -1`;")
        '' 视图属性操作 如果需要对视图进行下一步操作，则需要进入视图属性界面
        'AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")

        ' 创建刨视图 在视图属性中创建刨视图其中 XSEC0001 为刨视图截面
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `options_list` 1 `Vis`;" +
                                "~ Open `drawing_view` `view_vis_op`;" +
                                "~ Close `drawing_view` `view_vis_op`;" +
                                "~ Select `drawing_view` `view_vis_op` 1 `Half View`;" +
                                "~ Open `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Close `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + rePlanNumber.ToString + "`;" +
                                "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                                "~ Activate `drawing_view` `psh_ok`;")


    End Sub
    Public Sub 显示尺寸(view$, rowNumber%)
        ' 选中布局 如果要选中视图则需要先选中布局（暂时是这样）
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        ' 选中对应的视图 其中view_2 中的数字可以控制哪一个视图
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 -1 -1 -1`;")
        ' 显示模型注释界面
        AC.Session.RunMacro("~ Command `ProCmdDwgShowAllAnnots` ;")
        ' 显示视图中的尺寸 通过row0 控制不同的尺寸
        AC.Session.RunMacro("~ Select `show_model_annotations` `tbl_dim` 2 `row" + rowNumber.ToString + "` `show`;~ Activate `show_model_annotations` `psh_ok`;")
    End Sub
    Public Sub Pattern1(a$)
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + a + "`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
        '根据轴阵列
        AC.Session.RunMacro("0 ~ Command `ProCmdPattern` ; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` ``; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; @PAUSE_FOR_SCREEN_PICK; ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_axis_angle_push`; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
    End Sub
    Public Sub 方向阵列(number#, diastance#)
        ''‘’'msgbox(6)
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node10`;\")
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_dir`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst` `" + number.ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_num_inst`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr` `" + diastance.ToString + "`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_dir_1_incr`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")


    End Sub
    Public Function Drwing_Rename(partName$, NewName$) As IpfcModel


        m2 = activateModel(partName$, 1)
        'm2.CommonName = Com_name
        'Threading.Thread.Sleep(1000)
        'm2.Regenerate(Nothing)
        'Threading.Thread.Sleep(1000)
        m5 = activateModel(partName$, 2)
        添加图幅注释(m5， read("T_MOTOR"))
        m5.Rename(NewName$, True)
        m2.Rename(NewName$, True)
        closeWindow(m5)
        closeWindow(m2)
        Threading.Thread.Sleep(1000)
        Return m5

    End Function
    Public Sub box_改名(path$, part_path$, name$)
        Dim requirements As String()
        Dim path1 As String
        path1 = path + "\parts"
        Dim lis1, lis2, list3 As String() ', list_1， list_2, list_3
        Dim string_1, string_2, string_3 As Istringseq
        Dim str, str2, str3, str_1, str_2, str_3, str_three, str_address As String
        Dim number1 As Integer = 0
        Dim j As Integer = 0
        ' openModel("asm", dress)
        list3 = part_path.Split("\")
        str_1 = list3(0) + "\" + list3(1) + "\" + list3(2) + "\" + list3(3) + "\" + list3(4)
        m8 = activateModel(Left(list3(5), 11), 0)
        ' retrieveModel("drw", str_1 + "\" + Left(list3(6), 11))
        'string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1)
        string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1) '"E:\works\creo\box_assembly\180"
        string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1)
        For Each str2 In string_2
            lis2 = str2.Split("\")
            str_2 = Left(lis2.Last, 11)
            str_three = Left(lis2.Last, 3)
            If str_three <> "3sb" Then
                If str_2 = "8sb-150-007" Then
                    m2 = activateModel(str_2, 1)
                    m2.Rename(name + "-0" + j.ToString(), True)
                Else
                    m5 = retrieveModel("drw", str2)
                    m4 = Drwing_Rename(str_2, name + "-0" + j.ToString())
                    drawing = CType(m4, IpfcDrawing)
                    smodel = drawing.Descr
                    smodel.Path = path1
                    drawing.Backup(smodel)
                End If
            ElseIf str_three = "3sb" Then
                m2 = retrieveModel("drw", str2)
                m2 = activateModel（str2, 0)
                m5 = activateModel(str2, 2)
                添加图幅注释(m5， read("T_MOTOR"))
                m5.Rename(name, True)
                m2.Rename(name, True)
                closeWindow(m5)
                closeWindow(m2)
            End If
            j += 1
        Next
        m2 = activateModel(name, 2) 'read("junction_box_name")
        drawing = CType(m2, IpfcDrawing)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        mxs = 明细表_new(m2)
        closeWindow(m2)
        导入表(path, name)
        生成文件夹(read("filepath"), read("CODE")) '
        Threading.Thread.Sleep(1500)
        装配体图纸转移(path， read("filepath"), read("CODE"))

    End Sub
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="asmcomp_2"></param>插入的元件特征
    ''' <param name="a"></param>固定元件的特征ID
    ''' <param name="s"></param>插入元件的特征ID
    ''' <param name="idc#"></param>固定元件特征ID
    ''' <param name="idb#"></param>插入元件特征ID
    ''' <param name="type_1#"></param>固定元件的配合方法
    ''' <param name="type_2#"></param>固定元件的配合方法
    ''' <param name="Name_1$"></param>固定元件的基准面轴的名称
    ''' <param name="Name_2$"></param>固定元件的基准面轴的名称
    ''' <param name="ida#"></param>配合类型
    ''' <param name="distance#"></param>配合距离
    ''' <returns></returns>
    Public Function 装配约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc#, idb#, type_1#, type_2#, Name_1$, Name_2$, ida#, Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next

        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf
        If type_1 = 1 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 4 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 1 And type_2 = 4 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 4 And type_2 = 4 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 1 And type_2 = 2 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 2 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 2 And type_2 = 2 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        End If

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(ida) '重合=0
        If ida = 3 Or ida = 1 Then
            constraint.Offset = distance
        End If
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function

    ''' <summary>
    ''' 装配轴轴对齐
    ''' </summary>
    ''' <param name="asmcomp_2"></param>需要添加约束的组件
    ''' <param name="s"></param>需要配合约束的组件实体
    ''' <param name="a"></param>需要添加约束的组件实体
    ''' <param name="axisName_1$"></param>配合约束的组件轴名称
    ''' <param name="axisName_2$"></param>添加约束的组件轴名称
    ''' <returns></returns>
    Public Function 轴约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, axisName_1$, axisName_2$) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf   ' 后插入组件
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf     ' 前插入组件

        compItem_1 = componentModel_1.GetItemByName(4, axisName_1)
        compItem_2 = componentModel_2.GetItemByName(4, axisName_2)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(EpfcComponentConstraintType.EpfcASM_CONSTRAINT_ALIGN)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints

    End Function
    Public Function 轴约束2(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, axisName_1$, axisName_2$) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf   ' 后插入组件
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf     ' 前插入组件

        compItem_1 = componentModel_1.GetItemByName(4, axisName_1)
        compItem_2 = componentModel_2.GetItemByName(4, axisName_2)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(0)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints

    End Function
    Public Function 面面约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc As Double, idb As Double, ida As Double， Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, idc)
        compItem_2 = componentModel_2.GetItemByID(1, idb)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
        constraint = (New CCpfcComponentConstraint).Create(ida) '重合=0
        If ida = 3 Or ida = 1 Then
            constraint.Offset = distance
        End If
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function
    Public Function manyID(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc() As Double, idb() As Double, ida() As Double， Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path2 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path2.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        For i = 0 To idc.Length - 1
            compItem_1 = componentModel_1.GetItemByID(1, idc(i))
            compItem_2 = componentModel_2.GetItemByID(1, idb(i))
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path2)
            constraint = (New CCpfcComponentConstraint).Create(ida(i)) '重合=0
            If ida(i) = 3 Or ida(i) = 1 Then
                constraint.Offset = distance
            End If
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
        Next
        Return constraints
    End Function
    Public Function 插入零件_1(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcComponentFeat

        smodel_2 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_2 = AC.Session.RetrieveModel(smodel_2)
        'transform3D_1 = 零件位置(assembly, componentModel_1, "FRONT")
        asmcomp_2 = assembly.AssembleComponent(componentModel_2, Nothing)
        'assembly.Display()
        AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
        AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型  
        Return asmcomp_2

    End Function
    Public Function 插入零件_2(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcComponentFeat

        smodel_2 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_2 = AC.Session.RetrieveModel(smodel_2)
        'transform3D_1 = 零件位置(assembly, componentModel_1, "FRONT")
        asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
        'assembly.Display()
        AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
        AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型  
        Return asmcomp_2
    End Function
    Public Function 固定零件(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcSolid
        smodel_1 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()
        Return componentModel_1

    End Function
    Public Sub 插入固定零件(name_11$, code_11$, MATERIAL_11$)
        固定零件(assembly, 1, "E:\works\creo\template\start_part")
        m2 = activateModel("start_part", 1)
        m2.CommonName = name_11 '名称
        m2.Rename(code_11, True) '代号
        setParamValue(m2, "MATERIAL", MATERIAL_11, "字符串") '材料

        closeWindow(m2)
    End Sub
    Public Sub 添加bom新内容(ItemString As String(), m8 As IpfcModel)


        For i = 0 To ItemString.Length / 4 - 1
            插入固定零件(ItemString(0 + 4 * i), ItemString(1 + 4 * i), ItemString(2 + 4 * i))
        Next
        modelItems = listModelItem(m8, "FEATURE")
        For i = 1 To ItemString.Length / 4
            If ItemString(4 * （i） - 1) = 1 Then
                '阵列(modelItems.Item(modelItems.Count - 2 * i), m8, ItemString(4 * （i） - 1))
            Else
                阵列(modelItems.Item(modelItems.Count - 2 * i), m8, ItemString(4 * （i） - 1))
            End If

        Next

        '插入固定零件(ItemString(0), ItemString(1), ItemString(2)) '3
        'If ItemString.Length > 7 Then
        '    插入固定零件(ItemString(4), ItemString(5), ItemString(6)) '7
        'End If
        'If ItemString.Length > 11 Then
        '    插入固定零件(ItemString(8), ItemString(9), ItemString(10)) '11
        'End If
        'If ItemString.Length > 15 Then
        '    插入固定零件(ItemString(12), ItemString(13), ItemString(14)) '15
        'End If
        'If ItemString.Length > 19 Then
        '    插入固定零件(ItemString(16), ItemString(17), ItemString(18)) '19
        'End If
        'If ItemString.Length > 23 Then
        '    插入固定零件(ItemString(20), ItemString(21), ItemString(22)) '23
        'End If
        'If ItemString.Length > 27 Then
        '    插入固定零件(ItemString(24), ItemString(25), ItemString(26)) '27
        'End If
        'If ItemString.Length > 31 Then
        '    插入固定零件(ItemString(28), ItemString(29), ItemString(30)) '31
        'End If
        'If ItemString.Length > 35 Then
        '    插入固定零件(ItemString(32), ItemString(33), ItemString(34)) '35
        'End If
        'If ItemString.Length > 39 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38)) '39
        'End If
        'If ItemString.Length > 43 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 47 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 51 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 55 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 59 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 63 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 67 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 71 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 75 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'If ItemString.Length > 79 Then
        '    插入固定零件(ItemString(36), ItemString(37), ItemString(38))
        'End If
        'modelItems = listModelItem(m8, "FEATURE")
        '阵列(modelItems.Item(modelItems.Count - 2), m8, ItemString(3))
        'If ItemString.Length > 7 Then
        '    阵列(modelItems.Item(modelItems.Count - 4), m8, ItemString(7))
        'End If
        'If ItemString.Length > 11 Then
        '    阵列(modelItems.Item(modelItems.Count - 6), m8, ItemString(11))
        'End If
        'If ItemString.Length > 15 Then
        '    阵列(modelItems.Item(modelItems.Count - 8), m8, ItemString(15))
        'End If
        'If ItemString.Length > 19 Then
        '    阵列(modelItems.Item(modelItems.Count - 10), m8, ItemString(19))
        'End If
        'If ItemString.Length > 23 Then
        '    阵列(modelItems.Item(modelItems.Count - 12), m8, ItemString(23))
        'End If
        'If ItemString.Length > 27 Then
        '    阵列(modelItems.Item(modelItems.Count - 14), m8, ItemString(27))
        'End If
        'If ItemString.Length > 31 Then
        '    阵列(modelItems.Item(modelItems.Count - 16), m8, ItemString(31))
        'End If
        'If ItemString.Length > 35 Then
        '    阵列(modelItems.Item(modelItems.Count - 18), m8, ItemString(35))
        'End If
        'If ItemString.Length > 39 Then
        '    阵列(modelItems.Item(modelItems.Count - 20), m8, ItemString(39))
        'End If
    End Sub
    Public Sub 阵列(compItem_1 As IpfcModelItem, model As IpfcModel, paramValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                            "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                            "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `" + paramValue + "`;" +
                            "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `" + paramValue + "`;" +
                            "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst`;" +
                             "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()
        RegenerateModel(model)
    End Sub
    Public Sub 轴阵列()

        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

    End Sub

    Public Sub 轴阵列2()

        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `2`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `2`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst`;" +
                                "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr` `180`;" +
                                "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr` `180`;" +
                                "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

    End Sub
    Public Function 干涉检查（m1 As IpfcModel） As String


        Dim globalEvaluator As IpfcGlobalEvaluator
        Dim globalInterferences As IpfcGlobalInterferences
        Dim selParts As IpfcSelectionPair
        Dim sel1, sel2 As IpfcSelection
        Dim selItem1, selItem2 As IpfcModel
        Dim volume As IpfcInterferenceVolume
        Dim ret As String = ""
        Dim LTEM1, LTEM2 As String


        globalEvaluator = (New CMpfcInterference).CreateGlobalEvaluator(CType(m1, IpfcAssembly))
        globalInterferences = globalEvaluator.ComputeGlobalInterference(True)
        If Not (globalInterferences Is Nothing) Then
            For Each interference As IpfcGlobalInterference In globalInterferences
                selParts = interference.SelParts
                sel1 = selParts.Sel1
                sel2 = selParts.Sel2
                selItem1 = sel1.SelModel
                selItem2 = sel2.SelModel
                volume = interference.Volume

                LTEM1 = GetParamValue(selItem1, "SOURCE")
                LTEM2 = GetParamValue(selItem2, "SOURCE")
                If LTEM1 = "自制件" And LTEM2 = "自制件" Then

                    ret = ret + selItem1.InstanceName + "和" + selItem2.InstanceName + "发生干涉，干涉量为：" + volume.ComputeVolume.ToString() + Chr(13)
                End If

            Next
        Else
            ret = m1.InstanceName + "未发生干涉."
        End If




        Return ret

    End Function
    Public Sub 创建文本(filepath$, Str1$)
        If Not System.IO.File.Exists(filepath) Then
            System.IO.File.WriteAllText(filepath, Str1)
        End If
    End Sub

    Public Function GetParamValue(model As IpfcModel, paramName$) As String
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            gsvalue = iparamValue.StringValue
        End If
        Return gsvalue

    End Function
    Public Sub closeWindow(model As IpfcModel)
        window = session.CreateModelWindow(model)
        window.Close()
        'AC.Session.RunMacro("8 ~ Command `ProCmdWinCloseGroup`;")
    End Sub
    Public Sub 撑块绝缘修改(length#, thinkcess#)
        setParamValue(m2, "d5", thinkcess#, "浮点型") '撑块厚度
        setParamValue(m2, "d6", length#, "浮点型") '撑块长度

    End Sub
    Public Sub 冲片厚度(part$, thickness#， type#)
        Threading.Thread.Sleep(2000)
        m2 = activateModel(part, 1)

        If type = 1 Then
            setParamValue(m2, "d6", thickness, "浮点型")
        ElseIf type = 2 Then
            setParamValue(m2, "d6", thickness, "浮点型")
        ElseIf type = 3 Then
            setParamValue(m2, "d6", thickness, "浮点型")
        End If
        setParamValue(m2, "REMARK", "1", "字符串")
    End Sub
    Public Function listModelItem_有弹窗(model As IpfcModel, ModelItemType$) As IpfcModelItems
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        If ModelItemType = "FEATURE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_FEATURE) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_SURFACE)
        ElseIf ModelItemType = "EDGE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_EDGE)
        ElseIf ModelItemType = "AXIS" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_AXIS)
        ElseIf ModelItemType = "DATUM_POINT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_POINT)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_QUILT)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_CURVE)
        ElseIf ModelItemType = "DIMENSION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DIMENSION)
        ElseIf ModelItemType = "NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_NOTE)
        ElseIf ModelItemType = "DTL_NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_NOTE)
        End If
        'features = model.ListFeaturesByType(True, EpfcFeatureType.EpfcFEATTYPE_HOLE)


        For i = 0 To feats.Count - 1
            asmItem_1 = feats.Item(i)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
            selBuffer.AddSelection(compSelect_1)
            If asmItem_1.GetName IsNot Nothing Then
                MsgBox("检索号：" + i.ToString + Chr(13) + Chr(10) + asmItem_1.GetName + Chr(13) + Chr(10) + "特征ID：" + asmItem_1.Id.ToString)
            Else
                MsgBox("检索号：" + i.ToString + Chr(13) + Chr(10) + "特征ID：" + asmItem_1.Id.ToString)
            End If

            selBuffer.Clear()
        Next
        Return feats
    End Function
    Public Function 参考阵列(feats As IpfcModelItems， j#)

        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;~ Open `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Close `main_dlg_cur` `maindashInst0.ui_pat_ref_type`;~ Select `main_dlg_cur` `maindashInst0.ui_pat_ref_type` 1 `both`;~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

    End Function
    Public Function listModelItem_1(model As IpfcModel, ModelItemType$, name$) As IpfcModelItem
        Dim aaa As IpfcModelItem
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()

        If ModelItemType = "FEATURE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_FEATURE, name) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_SURFACE, name)
        ElseIf ModelItemType = "EDGE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_EDGE, name)
        ElseIf ModelItemType = "AXIS" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_AXIS, name)
        ElseIf ModelItemType = "DATUM_POINT" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_POINT, name)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_QUILT, name)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_CURVE, name)
        ElseIf ModelItemType = "DIMENSION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, name)
        ElseIf ModelItemType = "REF_DIMENSION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_REF_DIMENSION, name)
        ElseIf ModelItemType = "SYM_DEFINITION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_SYM_DEFINITION, name)
        ElseIf ModelItemType = "NOTE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_NOTE, name)
        ElseIf ModelItemType = "DTL_NOTE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_NOTE, name)
        ElseIf ModelItemType = "DTL_SYM_INSTANCE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE) '符号（球标）
        ElseIf ModelItemType = "EpfcModelItemType_nil" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcModelItemType_nil) '所有的尺寸
        End If


        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(aaa, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_1)
        If aaa.GetName IsNot Nothing Then
            ''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + aaa.GetName + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        Else
            ''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        End If

        selBuffer.Clear()

        Return aaa
    End Function
    Public Function listModelItem(model As IpfcModel, ModelItemType$) As IpfcModelItems
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        If ModelItemType = "FEATURE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_FEATURE) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_SURFACE)
        ElseIf ModelItemType = "EDGE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_EDGE)
        ElseIf ModelItemType = "AXIS" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_AXIS)
        ElseIf ModelItemType = "DATUM_POINT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_POINT)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_QUILT)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_CURVE)
        ElseIf ModelItemType = "DIMENSION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DIMENSION)
        ElseIf ModelItemType = "NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_NOTE)
        ElseIf ModelItemType = "DTL_NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_NOTE)
        End If
        ' features = model.ListFeaturesByType(True, EpfcFeatureType.EpfcFEATTYPE_HOLE)
        For i = 0 To feats.Count - 1
            asmItem_1 = feats.Item(i)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
            selBuffer.AddSelection(compSelect_1)
            selBuffer.Clear()
        Next
        Return feats
    End Function
    Public Sub Pattern(a$) '阵列
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + a + "`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
        ''‘’'msgbox(2)
        ' 根据参考阵列
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        ' 根据轴阵列
        'AC.Session.RunMacro("0 ~ Command `ProCmdPattern` ; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` ``; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; @PAUSE_FOR_SCREEN_PICK; ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_axis_angle_push`; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node6`;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        Threading.Thread.Sleep(1000)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_2`;")

    End Sub
    Public Sub RegenerateModel(m1 As IpfcModel)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        ElseIf m1.Type = EpfcModelType.EpfcMDL_DRAWING Then
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Review_control_btn` 1;" +
                                "~ Command `ProCmdDwgRegenModel`;")
        End If
    End Sub
    Public Sub ExportJpg(path$, name$)

        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_View_control_btn` 1;\")
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `View:casc340798662`;\")
        AC.Session.RunMacro("8 ~ Close `main_dlg_cur` `View:casc340798662`;\")
        AC.Session.RunMacro("8 ~ Command `ProCmdNamedViewsGalSelect`  `Standard Orientation`;")
        Threading.Thread.Sleep(2000)
        Dim currentwindow As IpfcWindow
        Dim jpegoption As IpfcJPEGImageExportInstructions
        currentwindow = AC.Session.CurrentWindow
        '设置导出jpg文件的宽度和高度，这里设置为当前打开窗体可视面积的宽和高对应的比例
        jpegoption = (New CCpfcJPEGImageExportInstructions).Create(currentwindow.GraphicsAreaWidth * 10, currentwindow.GraphicsAreaHeight * 10)
        '设置导出jpg文件的dpi
        jpegoption.DotsPerInch = EpfcDotsPerInch.EpfcRASTERDPI_600
        '设置导出jpg文件的像素
        jpegoption.ImageDepth = EpfcRasterDepth.EpfcRASTERDEPTH_24
        '导出jpg
        currentwindow.ExportRasterImage(path + "\image\" + name + ".jpg", jpegoption)
    End Sub
    Public Sub mysql_new3(localhost$, database$， table$, Optional Code$ = "")
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        dr3 = mysqlcom.ExecuteReader()
        'read.GetValues(values1)
        dr3.Read()
        If Code$ = "" Then
            Do Until dr3.GetString("id") = 1
                dr3.Read()
            Loop
        Else
            Do Until dr3.GetString("id") = Code
                dr3.Read()
            Loop
        End If

        'dr3.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()

    End Sub
    Public Sub mysql_new4(localhost$, database$， table$, Optional Code$ = "")
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        dr4 = mysqlcom.ExecuteReader()
        'read.GetValues(values1)
        dr4.Read()
        If Code$ = "" Then
            Do Until dr4.GetString("id") = 1
                dr4.Read()
            Loop
        Else
            Do Until dr4.GetString("id") = Code
                dr4.Read()
            Loop
        End If
        'dr4.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new_chen(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read = mysqlcom.ExecuteReader()
        read.Read()
        Do Until read("ID") = id
            read.Read()
        Loop
        'read.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new_chen1(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read1 = mysqlcom.ExecuteReader()
        read1.Read()
        Do Until read1("ID") = id
            read1.Read()
        Loop
        'read1.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new_chen2(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read2 = mysqlcom.ExecuteReader()
        read2.Read()
        Do Until read2("ID") = id
            read2.Read()
        Loop
        'read2.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new_chen3(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read3 = mysqlcom.ExecuteReader()
        read3.Read()
        Do Until read3("ID") = id
            read3.Read()
        Loop
        'read3.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new(localhost$, database$, table$, Optional ID$ = "")
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        dr = mysqlcom.ExecuteReader()
        dr.Read()
        Do Until dr("ID") = ID
            dr.Read()
        Loop
        'dr.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub 标准键数据(轴直径 As Integer)

        If 6 < 轴直径 And 轴直径 <= 8 Then
            B = 2
            T1 = 1.2
            T2 = 1.0
        ElseIf 8 < 轴直径 And 轴直径 <= 10 Then
            B = 3
            T1 = 1.8
            T2 = 1.4
        ElseIf 10 < 轴直径 And 轴直径 <= 12 Then
            B = 4
            T1 = 2.5
            T2 = 1.8
        ElseIf 12 < 轴直径 And 轴直径 <= 17 Then
            B = 5
            T1 = 3
            T2 = 2.3
        ElseIf 17 < 轴直径 And 轴直径 <= 22 Then
            B = 6
            T1 = 3.5
            T2 = 2.8
        ElseIf 22 < 轴直径 And 轴直径 <= 30 Then
            B = 8
            T1 = 4
            T2 = 3.3
        ElseIf 30 < 轴直径 And 轴直径 <= 38 Then
            B = 10
            T1 = 5
            T2 = 3.3
        ElseIf 38 < 轴直径 And 轴直径 <= 44 Then
            B = 12
            T1 = 5
            T2 = 3.3
        ElseIf 44 < 轴直径 And 轴直径 <= 50 Then
            B = 14
            T1 = 5.5
            T2 = 3.8
        ElseIf 50 < 轴直径 And 轴直径 <= 58 Then
            B = 16
            T1 = 6
            T2 = 4.3
        ElseIf 58 < 轴直径 And 轴直径 <= 65 Then
            B = 18
            T1 = 7
            T2 = 4.4
        ElseIf 65 < 轴直径 And 轴直径 <= 75 Then
            B = 20
            T1 = 7.5
            T2 = 4.9
        ElseIf 75 < 轴直径 And 轴直径 <= 85 Then
            B = 22
            T1 = 9
            T2 = 5.4
        ElseIf 85 < 轴直径 And 轴直径 <= 95 Then
            B = 25
            T1 = 9
            T2 = 5.4
        ElseIf 95 < 轴直径 And 轴直径 <= 110 Then
            B = 28
            T1 = 10
            T2 = 6.4
        ElseIf 110 < 轴直径 And 轴直径 <= 130 Then
            B = 32
            T1 = 11
            T2 = 7.4
        ElseIf 130 < 轴直径 And 轴直径 <= 150 Then
            B = 36
            T1 = 12
            T2 = 8.4
        ElseIf 150 < 轴直径 And 轴直径 <= 170 Then
            B = 40
            T1 = 13
            T2 = 9.4
        ElseIf 170 < 轴直径 And 轴直径 <= 200 Then
            B = 45
            T1 = 15
            T2 = 10.4
        ElseIf 200 < 轴直径 And 轴直径 <= 230 Then
            B = 50
            T1 = 17
            T2 = 11.4
        ElseIf 230 < 轴直径 And 轴直径 <= 260 Then
            B = 56
            T1 = 20
            T2 = 12.4
        ElseIf 260 < 轴直径 And 轴直径 <= 290 Then
            B = 63
            T1 = 20
            T2 = 12.4
        ElseIf 290 < 轴直径 And 轴直径 <= 330 Then
            B = 70
            T1 = 22
            T2 = 14.4
        ElseIf 330 < 轴直径 And 轴直径 <= 380 Then
            B = 80
            T1 = 25
            T2 = 15.4
        ElseIf 380 < 轴直径 And 轴直径 <= 440 Then
            B = 90
            T1 = 28
            T2 = 17.4
        ElseIf 440 < 轴直径 And 轴直径 <= 500 Then
            B = 100
            T1 = 31
            T2 = 19.4
        End If



        'Return
    End Sub
    Public Sub deleteFeature(model As IpfcModel, id#)
        'Dim SuppressOperation As IpfcSuppressOperation
        s1 = CType(model, IpfcSolid)
        feat = model.GetFeatureById(id)
        DeleteOperation = feat.CreateDeleteOp()

        DeleteOperation.Clip = True  '是否删除该特征后的所有选项，本例设置为真。其余的删除选项请查看帮助文档。
        'SuppressOperation.AllowGroupMembers = True
        'SuppressOperation.AllowChildGroupMembers = True
        FeatureOperations.Append(DeleteOperation) '生产删除操作的重生选项

        regenInstructions = (New CCpfcRegenInstructions).Create(True, True, Nothing)
        regenInstructions.UpdateInstances = False ' //是否更新内存

        s1.ExecuteFeatureOps(FeatureOperations, regenInstructions) 'regenInstructions是可选选项，也可以直接设置为Nothing
        FeatureOperations.Clear()


    End Sub
    Public Sub deleteFeature_阵列(model As IpfcModel, id#)
        modelItems = listModelItem(model, "FEATURE")
        compItem_1 = componentModel_1.GetItemByID(1, id)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)


    End Sub
    Public Sub mysql_new5(localhost$, database$， table$, Optional ID$ = "")
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        dr5 = mysqlcom.ExecuteReader()
        'read.GetValues(values1)
        dr5.Read()
        If ID = "" Then
            Do Until dr5.GetString("id") = 1
                dr5.Read()
            Loop
        Else
            Do Until dr5.GetString("ID") = ID
                dr5.Read()
            Loop
        End If
        'dr5.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub
    Public Sub mysql_new6(localhost$, database$， table$, Optional ID$ = "")
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        '//打开数据库连接
        mysqlcon.Open()
        '//sql查询
        mysqlcom = New MySqlCommand("select * from " + table, mysqlcon)
        dr6 = mysqlcom.ExecuteReader()
        'read.GetValues(values1)
        dr6.Read()
        If ID = "" Then
            Do Until dr6.GetString("id") = 1
                dr6.Read()
            Loop
        Else
            Do Until dr6.GetString("ID") = ID
                dr6.Read()
            Loop
        End If
    End Sub
    Public Sub openAPP(VersionNumber#)
        If VersionNumber = 2.0 Then
            AC = CcAC.Start("C:\Users\Public\Desktop\Creo Parametric 2.0", ".")
        ElseIf VersionNumber = 7.0 Then
            AC = CcAC.Start("C:\Users\Public\Desktop\parametric.exe", ".")
        End If
        AC.Session.LoadConfigFile("D:\Creo\trail_dir\creodraw.pro")
        AC.Session.ChangeDirectory("D:\Creo\trail_dir")
    End Sub
    Public Sub endApp()

        If Not AC Is Nothing Then
            If AC.IsRunning Then
                AC.End()
            End If
        End If

    End Sub
    Public Sub setWorkDirectory()

    End Sub
    Public Sub listModelTeatures()

    End Sub
    Public Function GetParamDoubleValue(model As IpfcModel, paramName$) As Double

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            DimensValue = iparamValue.DoubleValue
        End If

        Return DimensValue

    End Function
    Public Function GetParamStringValue(model As IpfcModel, paramName$) As String

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            StringValue = iparamValue.StringValue
        End If

        Return StringValue

    End Function
    Public Function activateModel(partName$, modelType#) As IpfcModel

        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            model = session.GetModel(partName, modelType)
            window = session.CreateModelWindow(model)
            model.Display()
            window.Activate()
            'model.Regenerate(Nothing)
            'AC.Session.RunMacro("mapkey 1 ~ Command `ProCmdEnvShadedEdges` ;")
            'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")
            AC.Session.CurrentWindow.Refresh()
            'model = AC.Session.RetrieveModel(smodel)
            ''显示零件
            'model.Display()
            ''激活当前窗体
            'AC.Session.CurrentWindow.Activate()
        End If
        activateModel = model

    End Function
    Public Function Drw_activateModel(partName$, modelType#) As IpfcDrawing

        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            drawing = session.GetModel(partName, modelType)

            window = session.CreateModelWindow(drawing)
            drawing.Display()
            window.Activate()
            'drawing.Regenerate(Nothing)
            'solid = CType(model, IpfcSolid)
            AC.Session.CurrentWindow.Refresh()
        End If
        Drw_activateModel = drawing

    End Function
    Public Function activate(partName$, modelType#) As IpfcModel
        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            model = session.GetModel(partName, modelType)
            window = session.CreateModelWindow(model)
            model.Display()
            window.Activate()
        End If
        activate = model

    End Function
    Public Function retrieveModel(modelType$, modelPath$) As IpfcModel
        If modelType = "asm" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_ASSEMBLY, modelPath, Nothing)
        ElseIf modelType = "prt" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_PART, modelPath, Nothing)
        ElseIf modelType = "frm" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DWG_FORMAT, modelPath, Nothing)
        ElseIf modelType = "drw" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)

        End If
        model = AC.Session.RetrieveModel(smodel) '载入模型

    End Function
    ''' <summary>
    ''' 添加参数
    ''' </summary>
    ''' <param name="model">模块</param>
    ''' <param name="paramName$">参数名</param>
    ''' <param name="paramValue$">参数值</param>
    ''' <param name="paramType$">参数类型</param>
    Public Sub addParam(model As IpfcModel, paramName$, paramValue$， paramType$)

        If model IsNot Nothing Then
            If (paramType = "浮点型") Then
                iparamValue = (New CMpfcModelItem).CreateDoubleParamValue(Double.Parse(paramValue))
            ElseIf (paramType = "整型") Then
                iparamValue = (New CMpfcModelItem).CreateIntParamValue(Int32.Parse(paramValue))
            ElseIf (paramType = "字符串") Then
                iparamValue = (New CMpfcModelItem).CreateStringParamValue(paramValue)
            ElseIf (paramType = "布尔型") Then
                iparamValue = (New CMpfcModelItem).CreateBoolParamValue(Boolean.Parse(paramValue))
            Else
                iparamValue = (New CMpfcModelItem).CreateNoteParamValue(Long.Parse(paramValue))
            End If

            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameterOwner.CreateParam(paramName, iparamValue)
        End If

    End Sub
    ''' <summary>
    ''' 修改参数
    ''' </summary>
    ''' <param name="model"></param>
    ''' <param name="paramName$"></param>
    ''' <param name="paramValue$"></param>
    ''' <param name="paramType$"></param>
    Public Sub setParamValue(model As IpfcModel, paramName$, paramValue$， paramType$， Optional angle# = 0)

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            If paramType = "浮点型" Then
                iparamValue.DoubleValue = Double.Parse(paramValue)
            ElseIf paramType = "字符串" Then
                iparamValue.StringValue = paramValue
            ElseIf paramType = "布尔型" Then
                iparamValue.BoolValue = Boolean.Parse(paramValue)
            ElseIf paramType = "角度" Then
                iparamValue.DoubleValue = angle
            Else
                iparamValue.BoolValue = Long.Parse(paramValue)
            End If

            iParameter.SetScaledValue(iparamValue, Nothing)
            'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")

        End If

    End Sub

    Public Sub setParamValue2(model As IpfcModel, paramName$, paramValue$， paramType$， Optional angle# = 0)
        Dim ip1 As IpfcBaseParameter
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)

            iparamValue = iParameter.GetScaledValue
            ip1 = CType(iParameter, IpfcBaseParameter)
            If paramType = "浮点型" Then
                iparamValue.DoubleValue = Double.Parse(paramValue)
            ElseIf paramType = "字符串" Then
                iparamValue.StringValue = paramValue
            ElseIf paramType = "布尔型" Then
                iparamValue.BoolValue = Boolean.Parse(paramValue)
            ElseIf paramType = "角度" Then
                iparamValue.DoubleValue = angle
            Else
                iparamValue.BoolValue = Long.Parse(paramValue)
            End If
            'If paramValue < 0 Then
            '    iparamValue.DoubleValue = Abs(Double.Parse(paramValue))
            'End If
            '    Dim Unit1 As IpfcUnit
            ' iParameter.SetScaledValue(iparamValue, Nothing)
            ip1.Value = iparamValue
            'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")

        End If

    End Sub
    Public Sub partValue(m1 As IpfcModel)

        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("NAME") <> "" Then
            m1.CommonName = read("NAME")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK") = "A" Then
            setParamValue(m1, "MARK_A", read("MARK"), "字符串")
        ElseIf read("MARK") = "B" Then
            setParamValue(m1, "MARK_B", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If

    End Sub
    Public Sub deleteParam(model As IpfcModel, paramName$)

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iParameter.Delete()
        End If
    End Sub
    Public Sub regenerate(model As IpfcModel) '激活模块

        model.Regenerate(Nothing)
        AC.Session.CurrentWindow.Refresh()

    End Sub
    '删除文件夹下面的所有内容：包括文件，文件夹。
    Public Sub DeleteFoldeSubFF(ByVal fpath As String)

        For Each fd As String In Directory.GetDirectories(fpath)
            DeleteFolder(fd)
        Next
        For Each fi As String In Directory.GetFiles(fpath)
            DeleteFile(fi)
        Next
    End Sub
    '删除文件。
    Public Sub DeleteFile(ByVal fpath As String)
        If IO.File.Exists(fpath) Then
            '删除文件file的方法1:删除到回收站里面。
            My.Computer.FileSystem.DeleteFile(fpath, FileIO.UIOption.OnlyErrorDialogs, FileIO.RecycleOption.SendToRecycleBin, FileIO.UICancelOption.DoNothing)
            '删除文件file的方法2:直接从硬盘上删除。
            'IO.File.Delete(fpath)
        End If
    End Sub
    '删除文件夹。
    Public Sub DeleteFolder(ByVal folder As String)
        If IO.Directory.Exists(folder) Then
            '删除文件夹folder的方法1:删除到回收站里面。
            My.Computer.FileSystem.DeleteDirectory(folder, FileIO.UIOption.OnlyErrorDialogs, FileIO.RecycleOption.SendToRecycleBin, FileIO.UICancelOption.DoNothing)
            '删除文件夹folder的方法2:直接从硬盘上删除。
            'IO.Directory.Delete(folder, True)
        End If
    End Sub
    Public Sub fileBackup(modelType$, modelPath$, A1#)

        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")

        m1 = retrieveModel(modelType, modelPath)
        ''‘’'msgbox(Right(modelPath, A1))
        If modelType = "asm" Then
            m1 = activateModel(Right(modelPath, A1), 0)
        ElseIf modelType = "prt" Then
            m1 = activateModel(Right(modelPath, A1), 1)
        ElseIf modelType = "drw" Then
            m1 = activateModel(Right(modelPath, A1), 2)
        End If

        m1.Rename("transition", True)
        smodel = m1.Descr
        smodel.Path = "E:\works\Creo\Process file"
        m1.Backup(smodel)
        endApp()

    End Sub
    Public Function openModel(modelType$, modelPath$) As IpfcModel


        'AC = (New CCpfcAsyncConnection).Connect(Nothing, Nothing, Nothing, Nothing)
        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")

        AC.End()

        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")

        'AC.Session.ChangeDirectory("D:\Proe_STD_JXTH")
        m1 = retrieveModel(modelType, modelPath)













    End Function
    Public Function openModel_new(modelType$, modelPath$) As IpfcModel


        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        'AC.Session.ChangeDirectory("D:\Creo\trail_dir\proe_stds")
        m1 = retrieveModel(modelType, modelPath)


    End Function
    Public Sub deleteFileChangeModel(modelType$, modelPath$, A1#)

        DeleteFoldeSubFF("E:\works\Creo\Process file\")
        fileBackup(modelType, modelPath, A1#)

        m1 = openModel(modelType, "E:\works\Creo\Process file\transition." + modelType + ".1")

    End Sub
    Public Function openDrawing(drwFormat$, modelPath$) As IpfcModel

        If drwFormat = "a0" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a1" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a2" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a3" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DWG_FORMAT, modelPath, Nothing)
        ElseIf drwFormat = "a4" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        End If
        model = AC.Session.RetrieveModel(smodel) '载入模型
        model.Display()
        AC.Session.CurrentWindow.Activate() '激活模型
        openDrawing = model

    End Function
    Public Function CreatePoint(x#, y#, Optional z# = 0) As IpfcPoint3D

        p3d = New CpfcPoint3D
        p3d.Set(0, x)
        p3d.Set(1, y)
        p3d.Set(2, z)
        Return p3d

    End Function
    Public Function CreateTransfromMatrix() As IpfcTransform3D

        matrix = New CpfcMatrix3D
        For i = 0 To 3
            For j = 0 To 3
                If i = j Then
                    matrix.Set(i, j, 1.0)
                Else
                    matrix.Set(i, j, 0.0)
                End If
            Next
        Next
        transform3D_1 = (New CCpfcTransform3D).Create(matrix)
        Return transform3D_1

    End Function
    Public Function matrixNormalize(matrix As IpfcMatrix3D) As IpfcMatrix3D
        Dim scale As Double
        Dim row, col As Integer

        matrix.Set(3, 0, 0.0)
        matrix.Set(3, 1, 0.0)
        matrix.Set(3, 2, 0.0)

        scale = Math.Sqrt(matrix.Item(0, 0) * matrix.Item(0, 0) + matrix.Item(0, 1) *
                      matrix.Item(0, 1) + matrix.Item(0, 2) * matrix.Item(0, 2))

        For row = 0 To 2
            For col = 0 To 2
                matrix.Set(row, col, matrix.Item(row, col) / scale)
            Next
        Next

        matrixNormalize = matrix

    End Function
    Public Function transformNormalize(transform3D_1 As IpfcTransform3D) As IpfcTransform3D

        matrix = transform3D_1.Matrix
        transform3D_1 = (New CCpfcTransform3D).Create(matrixNormalize(matrix))
        Return transform3D_1
        ' Return (New CCpfcTransform3D).Create(matrixNormalize(matrix))

    End Function
    Public Function createDrawingFromTemplate(template$) As IpfcDrawing

        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        session = AC.Session
        model = session.CurrentModel
        drawing = session.CreateDrawingFromTemlate(model.FullName, template, model.Descr, drawingOptions)
        createDrawingFromTemplate = drawing

    End Function
    Public Function listViews(drawing As IpfcDrawing) As IpfcView2Ds


        view2Ds = drawing.List2DViews
        For i = 0 To view2Ds.Count - 1

            view2D = view2Ds.Item(i)
            viewName = view2D.Name
            sheetNo = view2D.GetSheetNumber
            solid = view2D.GetModel
            solidDesc = solid.Descr

            outline = view2D.Outline
            Scale = view2D.Scale
            viewdisplay = view2D.Display
            displayStyle = "unknown"

            Select Case viewdisplay.Style
                Case EpfcDisplayStyle.EpfcDISPSTYLE_DEFAULT
                    displayStyle = "default"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_HIDDEN_LINE
                    displayStyle = "hidden line"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_NO_HIDDEN
                    displayStyle = "no hidden"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_SHADED
                    displayStyle = "shaded"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_WIREFRAME
                    displayStyle = "wireframe"
            End Select

        Next

        Return view2Ds
    End Function

    Public Sub mysql_new2(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read = mysqlcom.ExecuteReader()
        read.Read()
        Do Until read("ID") = id
            read.Read()
        Loop
        'read.Close()
        'mysqlcom.Dispose()
        'mysqlcon.Close()
        'mysqlcon.Dispose()
    End Sub



End Class

