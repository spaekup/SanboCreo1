Imports System.Math
Imports System.Runtime.InteropServices
Imports MySql.Data.MySqlClient
Imports pfcls
Imports System.IO
Imports System.Configuration
Imports System.Collections.Generic
Imports Excel = Microsoft.Office.Interop.Excel







Public Class Stator

    Dim AC As IpfcAsyncConnection = Nothing
    Dim CcAC As New CCpfcAsyncConnection
    Dim iparamValue As IpfcParamValue
    Dim iParameterOwner As IpfcParameterOwner
    Dim iParameter As IpfcParameter
    Dim window As IpfcWindow
    Dim session As IpfcSession
    Dim basession As IpfcBaseSession
    Dim smodel, smodel_1, smodel_2, md, md1, md2, md3, md4, md5, md6, md7, md8, md9, solidDesc As IpfcModelDescriptor
    Dim drw, model, models_1, m, m1, m2, m3, m4, m5, m6, m7, m8, m9, solid As IpfcModel
    Dim models As IpfcModels
    Dim assembly, assembly_1 As IpfcAssembly
    Dim part, ComponentModel, componentModel_1, componentModel_2, componentModel_3, componentModel_4, s, s1, s2, s3, s4, s5, s6, s7, s8, s9 As IpfcSolid
    Dim asmcomp, asmcomp_1, asmcomp_2, asmcomp_3, asmcomp_4, asmcomp_5, asmcomp_6, asmcomp_7, asmcomp_8, asmcomp_9 As IpfcComponentFeat
    Dim constraints, constraints1 As IpfcComponentConstraints
    Dim asmItem_1, asmItem_2, asmItem_3, cellnote, DimItem,
        compItem_1, compItem_2, compItem_3, compItem_4, compItem_5, compItem_6,
    note_Item_1, note_Item_2, note_Item_3, note_Item_4, note_Item_5, note_Item_6,
    note_Item_7, note_Item_8, note_Item_9, note_Item_10, note_Item_11, note_Item_12 As IpfcModelItem
    Dim modelItemOwner As IpfcModelItemOwner
    Dim feats， modelItems As IpfcModelItems
    Dim ids, idz As Cintseq
    Dim path_1, paths, pa, Path As IpfcComponentPath
    Dim seBuffer, compSelect_1, compSelect_2, compSelect_3， compSelect_4, compSelect_5， compSelect_6， compSelect_10， compSelect_11 As IpfcSelection
    Dim feat As IpfcFeature
    Dim features As IpfcFeatures
    Dim selBuffer As IpfcSelectionBuffer
    Dim DeleteOperation As IpfcDeleteOperation
    Dim FeatureOperations As New CpfcFeatureOperations
    Dim regenInstructions As IpfcRegenInstructions
    Dim constraint， constraint1, constraint2 As IpfcComponentConstraint
    Dim matrix, matrix_1, matrix_2, matrix_3 As New CpfcMatrix3D
    Dim transform3D, transform3D_1, transform3D_2 As IpfcTransform3D
    Dim M3d As IpfcMatrix3D
    Dim outline As IpfcOutline3D
    Dim excludes As IpfcModelItemTypes
    Dim Scale As Double
    Dim se As IpfcSession

    ' 工程图
    Dim p3d As IpfcPoint3D
    Dim view, view_1, view_2, name_view As IpfcView
    Dim viewer As IpfcViewOwner
    Dim instrs, instrs_1, instrs_2 As IpfcGeneralViewCreateInstructions
    Dim drawingOptions As New CpfcDrawingCreateOptions
    Dim viewdisplay As IpfcViewDisplay
    Dim view2Ds As IpfcView2Ds
    Dim view2D As IpfcView2D = Nothing
    Dim drawing, drawing1 As IpfcDrawing
    Dim drwFormat As IpfcDrawingFormat
    Dim BaDimensions As IpfcBaseDimensions
    Dim BaDimension, BaDimension_1, BaDimension_2 As IpfcBaseDimension
    Dim Dimension, Dimension1, Dimension2, Dimension3, Dimension4, Dimension5, Dimension6, Dimension7, Dimension8, Dimension9 As IpfcDimension
    Dim Dimension2D As IpfcDimension2D
    Dim DiTolerance As IpfcDimTolerance
    Dim limits_S, limitsS As IpfcDimTolSymmetric '设置不显示后面数字
    Dim limits_P, limitsPM As IpfcDimTolPlusMinus '设置显示后面数字
    Dim limitstab As IpfcDimTolISODIN
    Dim TolTableType As EpfcToleranceTableType
    Dim detailText As IpfcDetailText
    Dim detailTexts As CpfcDetailTexts
    Dim textLine As IpfcDetailTextLine
    Dim textLines As CpfcDetailTextLines
    Dim noteInstructions, detailNoteInstructions As IpfcDetailNoteInstructions
    Dim note, detailNoteItem As IpfcDetailNoteItem
    Dim Attachment As IpfcAttachment
    Dim position As IpfcFreeAttachment
    Dim allAttachments As IpfcDetailLeaders = Nothing
    Dim leader As IpfcParametricAttachment = Nothing
    Dim attachments As CpfcAttachments
    Dim varText As IpfcDetailVariantText
    Dim symbolDefinition As IpfcDetailSymbolDefItem
    Dim symbolDefAttachment As IpfcSymbolDefAttachment = Nothing
    Dim symInstructions, detailSymbolDefInstructions， detailSymbolDefInstructions10， detailSymbolDefInstructions11 As IpfcDetailSymbolInstInstructions
    Dim FamMember As IpfcFamilyMember
    Dim FamMemberCols As IpfcFamilyTableColumns
    Dim FamMemberRows As IpfcFamilyTableRows
    Dim detailItem， detailItem10， detailItem11 As IpfcDetailItem
    Dim DetailSymbolInstItem As IpfcDetailSymbolInstItem
    Dim detailVariantTexts， detailVariantTexts10， detailVariantTexts11 As IpfcDetailVariantTexts
    Dim detailVariantText， detailVariantText10， detailVariantText11 As IpfcDetailVariantText
    Dim symItem， symItem10， symItem11 As IpfcDetailSymbolInstItem
    Dim mouse As IpfcMouseStatus

    Dim DraDimShowInstructions As IpfcDrawingDimensionShowInstructions
    Dim ComDimShowInstructions As IpfcComponentDimensionShowInstructions
    Dim DimShowInstructions As IpfcDimensionShowInstructions

    Dim TablesInfo As String = ""
    Dim tableOwner As IpfcTableOwner
    Dim tables As IpfcTables
    Dim table As IpfcTable
    Dim tablecell As IpfcTableCell
    Dim GetTableInfo As String = ""

    ' 数据库
    Dim mysqlcon, Dmysqlcon, connect1, connect2, connect3, connect4 As MySqlConnection
    Dim mysqlcom, Dmysqlcom, cursor1, cursor2, cursor3, cursor4 As MySqlCommand
    Public rd, read, read1, read2, read3, read4, read5, read6, read7 As MySqlDataReader
    Dim fff As MySqlParameter
    Dim ffff As MySqlParameterCollection
    Dim database_name1, database_name2, database_name3, database_name4, database_name5,
            table_name1, table_name2, table_name3, table_name4, table_name5,
            updata1, updata2, updata3,
            updata4, updata5, updata6, updata7, updata8, updata9, updata10, updata11, updata12, updata13,
            updata14, updata15, updata16, updata17, updata18 As String
    Dim values1, values2, values3, values4, values5 As Object()

    Dim ID As Integer = 1
    Dim ColSymbols, FamRow, codes, code_news, conNames, materials, partTypes, numbers, sin_weights, con_weights, remarks, boms, wgs, bzs, mxs, zzs, tjys, tms, sources, importances, sheet_sizes， own_asm, own_asm_numbers， ballmarks, contents As New ArrayList()
    Dim codes_wg, codes_wg_new, conNames_wg, own_asm_wg, numbers_wg, partTypes_wg, materials_wg, sin_weights_wg, sheet_sizes_wg, importances_wg, remarks_wg, sources_wg, own_asm_numbers_wg As New ArrayList()
    Dim codes_bz, codes_bz_new, conNames_bz, own_asm_bz, numbers_bz, partTypes_bz, materials_bz, sin_weights_bz, sheet_sizes_bz, importances_bz, remarks_bz, sources_bz, own_asm_numbers_bz As New ArrayList()
    Dim codes_zz, codes_zz_new, conNames_zz, own_asm_zz, numbers_zz, partTypes_zz, materials_zz, sin_weights_zz, sheet_sizes_zz, importances_zz, remarks_zz, sources_zz, own_asm_numbers_zz, code_news_zz As New ArrayList()
    Dim codes_mx, codes_mx_new, codes_mx_new2, conNames_mx, own_asm_mx, numbers_mx, partTypes_mx, materials_mx, sin_weights_mx, sheet_sizes_mx, importances_mx, remarks_mx, sources_mx, own_asm_numbers_mx, code_news_mx, con_weights_mx As New ArrayList()
    Dim codes_tjy, codes_tjy_new, conNames_tjy, own_asm_tjy, numbers_tjy, partTypes_tjy, materials_tjy, sin_weights_tjy, sheet_sizes_tjy, importances_tjy, remarks_tjy, sources_tjy, own_asm_numbers_tjy, code_news_tjy, con_weights_tjy As New ArrayList()
    Dim codes_tm, codes_tm_new, conNames_tm, own_asm_tm, numbers_tm, partTypes_tm, materials_tm, sin_weights_tm, sheet_sizes_tm, importances_tm, remarks_tm, sources_tm, own_asm_numbers_tm, code_news_tm As New ArrayList()

    Dim DimensValue, DimensValue1, DimensValue2, DimensValue3, DimensValue4, DimensValue5, DimensValue6, DimensValue7, DimensValue8, DimensValue9,
            DimensValue10, DimensValue11, DimensValue12, DimensValue13, DimensValue14, num(), number(), aa(), a(), idc(), idb(), ida(), B, T1, T2, T3, T4, T5, T6, T7, T8, T9 As Double
    Dim texts, StringValue, name, column， viewName， displayStyle， axisName(), DatumName(), Strs(), sheet_size As String
    Dim sheetNo, row, col， i, j As Integer
    Dim Shownumber As Boolean





    Public Sub mysql_new(localhost$, tabledase$, ID#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=creo;pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read = mysqlcom.ExecuteReader()
        read.Read()
        Do Until read("ID") = ID
            read.Read()
        Loop

    End Sub
    Public Sub mysql_new1(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read1 = mysqlcom.ExecuteReader()
        read1.Read()
        Do Until read1("ID") = id
            read1.Read()
        Loop
    End Sub
    Public Sub mysql_new2(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read2 = mysqlcom.ExecuteReader()
        read2.Read()
        Do Until read2("ID") = id
            read2.Read()
        Loop
    End Sub
    Public Sub mysql_new3(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read3 = mysqlcom.ExecuteReader()
        read3.Read()
        Do Until read3("ID") = id
            read3.Read()
        Loop
    End Sub
    Public Sub mysql_new4(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read4 = mysqlcom.ExecuteReader()
        read4.Read()
        Do Until read4("ID") = id
            read4.Read()
        Loop
    End Sub
    Public Sub mysql_new5(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read5 = mysqlcom.ExecuteReader()
        read5.Read()
        Do Until read5("ID") = id
            read5.Read()
        Loop
    End Sub
    Public Sub mysql_new6(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read6 = mysqlcom.ExecuteReader()
        read6.Read()
        Do Until read6("ID") = id
            read6.Read()
        Loop
    End Sub
    Public Sub mysql_new7(localhost$, database$, tabledase$, id#)
        mysqlcon = New MySqlConnection("server=" + localhost + ";userid=root" & ";password=@L19991014abc" & ";database=" + database + ";pooling=false")
        mysqlcon.Open()
        mysqlcom = New MySqlCommand("select * from " + tabledase, mysqlcon)
        read7 = mysqlcom.ExecuteReader()
        read7.Read()
        Do Until read7("ID") = id
            read7.Read()
        Loop
    End Sub
    Public Sub openAPP(VersionNumber#)
        If VersionNumber = 2.0 Then
            AC = CcAC.Start("C:\Users\Public\Desktop\Creo Parametric 2.0", ".")
        ElseIf VersionNumber = 7.0 Then
            AC = CcAC.Start("C:\Users\Public\Desktop\parametric.exe", ".")
        End If
        AC.Session.LoadConfigFile("D:\Creo\trail_dir\config.pro")
        AC.Session.ChangeDirectory("D:\Creo\trail_dir")
    End Sub
    Public Sub endApp()

        If Not AC Is Nothing Then
            If AC.IsRunning Then
                AC.End()


            End If
        End If

    End Sub
    Public Sub setWorkDirectory()

    End Sub
    Public Sub listModelTeatures()

    End Sub
    Public Function activateModel(partName$, modelType#) As IpfcModel

        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            model = session.GetModel(partName, modelType)
            window = session.CreateModelWindow(model)
            model.Display()
            window.Activate()

            'model.Regenerate(Nothing)
            AC.Session.CurrentWindow.Refresh()
        End If
        activateModel = model

    End Function
    Public Function Drw_activateModel(partName$, modelType#) As IpfcDrawing

        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            drawing = session.GetModel(partName, modelType)

            window = session.CreateModelWindow(drawing)
            drawing.Display()
            window.Activate()
            'drawing.Regenerate(Nothing)
            'solid = CType(model, IpfcSolid)
            AC.Session.CurrentWindow.Refresh()
        End If
        Drw_activateModel = drawing

    End Function
    Public Function activate(partName$, modelType#) As IpfcModel
        If Not AC Is Nothing And AC.IsRunning Then
            session = AC.Session
            model = session.GetModel(partName, modelType)
            window = session.CreateModelWindow(model)
            model.Display()
            window.Activate()
        End If
        activate = model

    End Function
    Public Function retrieveModel(modelType$, modelPath$) As IpfcModel
        If modelType = "asm" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_ASSEMBLY, modelPath, Nothing)
        ElseIf modelType = "prt" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_PART, modelPath, Nothing)
        ElseIf modelType = "drw" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf modelType = "frm" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DWG_FORMAT, modelPath, Nothing)

        End If
        model = AC.Session.RetrieveModel(smodel) '载入模型

    End Function

    Public Sub Pattern(a#) '阵列
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + a.ToString + "`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
        ' 根据参考阵列
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        ' 根据轴阵列
        'AC.Session.RunMacro("0 ~ Command `ProCmdPattern` ; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` ``; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; @PAUSE_FOR_SCREEN_PICK; ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_axis_angle_push`; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node6`;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
    End Sub
    Public Function selection(a#) As IpfcModelItem

        selection = AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + a.ToString + "`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")

    End Function
    ''' <summary>
    ''' 插入需要的符号 像粗糙度、形位公差、某些尺寸修饰、基准等等
    ''' </summary>
    ''' <param name="drawing"></param>视图
    ''' <param name="path$"></param>符号路径（不包含符号文件名称）
    ''' <param name="name$"></param>文件内部符号名称
    ''' <param name="text$"></param>符号名称下的 值
    ''' <param name="symbolname$"></param>符号文件名称
    ''' <param name="x#"></param>插入符号的X位置
    ''' <param name="y#"></param>插入符号的Y位置
    ''' <param name="ScaledHeight#"></param>插入符号的尺寸大小
    Public Sub 插入符号(drawing As IpfcDrawing, path$, name$, text$, symbolname$, x#, y#, ScaledHeight#)

        Dim Symbolpath As String = path$ '符号文件所在目录
        ' name 为符号名称 即为字典内的key text 为 key 下内容
        Dim Texts As New Dictionary(Of String, String) From {{name$, text$}}

        position = (New CCpfcFreeAttachment).Create(CreatePoint(x, y))

        '设置Attachments

        allAttachments = SetAttatchements(leader, position)

        '加载符号文件，注意这里没有进行校验
        symbolDefinition = drawing.RetrieveSymbolDefinition(symbolname$, CObj(Symbolpath), Nothing, True)

        '初始化并设置symInstructions的值
        symInstructions = (New CCpfcDetailSymbolInstInstructions).Create(symbolDefinition)
        '设置文字
        symInstructions.TextValues = SetDetailVariantTexts(Texts)
        '设置高度
        symInstructions.ScaledHeight = ScaledHeight#
        '设置三个显示方式的重要属性
        symInstructions.DefAttachment = symbolDefAttachment
        symInstructions.InstAttachment = allAttachments
        symInstructions.AttachOnDefType = pfcls.EpfcSymbolDefAttachmentType.EpfcSYMDEFATTACH_FREE
        '创建symItem并显示
        symItem = drawing.CreateDetailItem(symInstructions)
        symItem.Show()
        drawing.RegenerateSheet(drawing.CurrentSheetNumber)
        AC.Session.UIClearMessage()
        '-------------------------------------------------------------
    End Sub
    Public Sub 插入有引线符号(drawing As IpfcDrawing, selectedEdge As IpfcSelection， path$, name$, text$, symbolname$, x#, y#, ScaledHeight#)

        Dim Symbolpath As String = path$ '符号文件所在目录
        ' name 为符号名称 即为字典内的key text 为 key 下内容
        Dim Texts As New Dictionary(Of String, String) From {{name$, text$}}
        '选符号放置的位置
        Attachment = (New CCpfcFreeAttachment).Create(CreatePoint(x, y))
        '初始化leader
        leader = (New CCpfcParametricAttachment).Create(selectedEdge)
        '设置SymbolDefAttachment
        symbolDefAttachment = SetSymbolDefAttachment(EpfcSymbolDefAttachmentType.EpfcSYMDEFATTACH_NORMAL_TO_ITEM, selectedEdge)
        '生成引出对象序列，这里只设置一个
        '设置Attachments
        allAttachments = SetAttatchements(leader, Attachment)

        '加载符号文件，注意这里没有进行校验
        symbolDefinition = drawing.RetrieveSymbolDefinition(symbolname$, CObj(Symbolpath), Nothing, True)

        '初始化并设置symInstructions的值
        symInstructions = (New CCpfcDetailSymbolInstInstructions).Create(symbolDefinition)
        '设置文字
        symInstructions.TextValues = SetDetailVariantTexts(Texts)
        '设置高度
        symInstructions.ScaledHeight = ScaledHeight#
        '设置三个显示方式的重要属性
        symInstructions.DefAttachment = symbolDefAttachment
        symInstructions.InstAttachment = allAttachments
        symInstructions.AttachOnDefType = pfcls.EpfcSymbolDefAttachmentType.EpfcSYMDEFATTACH_FREE
        '创建symItem并显示
        symItem = drawing.CreateDetailItem(symInstructions)
        symItem.Show()
        drawing.RegenerateSheet(drawing.CurrentSheetNumber)
        AC.Session.UIClearMessage()
        '-------------------------------------------------------------
    End Sub
    Private Function SetSymbolDefAttachment(ByVal AttachOnDefType As EpfcSymbolDefAttachmentType, ByVal selectedObject As IpfcSelection) As IpfcSymbolDefAttachment
        Return (New CCpfcSymbolDefAttachment).Create(AttachOnDefType, selectedObject.Point)
    End Function
    Public Sub 无引线注释(drawing As IpfcDrawing, texts$, x#, y#, Optional z# = 0, Optional Angle# = 0)

        textLines = StrstoTextlines(texts)

        '由创建点选注释放置的位置
        position = (New CCpfcFreeAttachment).Create(CreatePoint(x, y, z))
        '设置Attachments
        allAttachments = (New CCpfcDetailLeaders).Create()
        allAttachments.ItemAttachment = position
        ' 设置 注释构造器（noteInstructions）  
        noteInstructions = (New CCpfcDetailNoteInstructions).Create(textLines)
        ' 注释角度
        noteInstructions.TextAngle = Angle
        noteInstructions.Leader = allAttachments
        '创建note并显示
        note = drawing.CreateDetailItem(noteInstructions)
        note.Show()

    End Sub
    Public Sub 有引线注释(drawing As IpfcDrawing, selectedEdge As IpfcSelection, texts$, x#, y#, Optional z# = 0, Optional Angle# = 0)

        textLines = StrstoTextlines(texts)
        '由创建点选注释放置的位置
        position = (New CCpfcFreeAttachment).Create(CreatePoint(x, y, z))

        '相比自由注解添加的步骤
        'run一个IpfcParametricAttachment
        leader = (New CCpfcParametricAttachment).Create(selectedEdge)
        '生成引出对象序列，这里只设置一个
        attachments = New CpfcAttachments
        attachments.Insert(0, leader)

        '设置Attachments
        allAttachments = (New CCpfcDetailLeaders).Create()
        allAttachments.ItemAttachment = position
        '相比自由注解添加的步骤
        allAttachments.Leaders = attachments

        ' 设置 注释构造器（noteInstructions）  
        noteInstructions = (New CCpfcDetailNoteInstructions).Create(textLines)
        ' 注释角度
        noteInstructions.TextAngle = Angle
        noteInstructions.Leader = allAttachments
        '创建note并显示
        note = drawing.CreateDetailItem(noteInstructions)
        note.Show()
    End Sub
    Public Function StrstoTextlines(Texts$) As CpfcDetailTextLines
        '将String赋值给textLines
        StrstoTextlines = New CpfcDetailTextLines
        Strs = Split(Texts, Chr(10)) '根据回车符分割确定行数
        '根据行数创建对象并添加内容
        For i = 0 To Strs.Length - 1
            detailText = (New CCpfcDetailText).Create(Strs(Strs.Length - i - 1)) '注意顺序
            detailTexts = New CpfcDetailTexts
            detailTexts.Insert(0, detailText)
            textLine = (New CCpfcDetailTextLine).Create(detailTexts)
            StrstoTextlines.Insert(0, textLine)
        Next
    End Function
    Public Sub 修改注释字体大小(modelItems As IpfcModelItems, j#, size#)
        note_Item_10 = modelItems.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDtlSetTextHeight`  " + size.ToString + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 添加公差(model As IpfcModel, dimension_Name$, Tolerance_Type$, Deviation_code$, Deviation_num$, Optional Deviation_value# = 0, Optional up_Deviation# = 0, Optional down_Deviation# = 0)

        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, dimension_Name)
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        BaDimensions = (New CpfcBaseDimensions)
        BaDimensions.Append(BaDimension)
        DimTolerance(asmItem_1, Tolerance_Type$, Deviation_code$, Deviation_num$, Deviation_value#, up_Deviation#, down_Deviation#)


    End Sub
    Public Sub DimTolerance(asmItem_1 As IpfcModelItem, Tolerance_Type$, Deviation_code$, Deviation_num$, Deviation_value#, up_Deviation#, down_Deviation#)
        name = Deviation_code
        column = Deviation_num
        Shownumber = True

        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension = CType(BaDimension, IpfcDimension)

        If Tolerance_Type = "Symmetric" Then
            limits_S = (New CCpfcDimTolSymmetric).Create(Deviation_value)
            Dimension.Tolerance = limits_S
        ElseIf Tolerance_Type = "PlusMinus" Then
            limits_P = (New CCpfcDimTolPlusMinus).Create(up_Deviation, down_Deviation) '注意down_Deviation的正负号
            Dimension.Tolerance = limits_P
        ElseIf Tolerance_Type = "Shaft_Hole" Then
            '设置是否显示后面的数字
            If Shownumber = True Then
                limitsPM = (New CCpfcDimTolPlusMinus).Create(up_Deviation, down_Deviation)
                Dimension.Tolerance = limitsPM
            Else
                limitsS = (New CCpfcDimTolSymmetric).Create(Deviation_value)
                Dimension.Tolerance = limitsS
            End If
            '设置公差表模式
            Select Case name.First
                Case "A" To "Z"
                    TolTableType = EpfcToleranceTableType.EpfcTOLTABLE_HOLES
                Case "a" To "z"
                    TolTableType = EpfcToleranceTableType.EpfcTOLTABLE_SHAFTS
            End Select
            limitstab = (New CCpfcDimTolISODIN).Create(TolTableType, name, CInt(column))
            Dimension.Tolerance = limitstab
        End If

    End Sub
    Private Function SetAttatchements(ByVal leader As IpfcAttachment, ByVal position As IpfcAttachment, Optional selectedEdge As IpfcSelection = Nothing) As IpfcDetailLeaders

        SetAttatchements = (New CCpfcDetailLeaders).Create()
        SetAttatchements.ItemAttachment = position
        SetAttatchements.ElbowLength = Nothing
        If (leader IsNot Nothing) Then
            leader = (New CCpfcParametricAttachment).Create(selectedEdge)
            attachments = New CpfcAttachments
            attachments.Insert(0, leader)
            SetAttatchements.Leaders = attachments
        End If
        Return SetAttatchements
    End Function
    Private Function SetDetailVariantTexts(ByVal Dicts As Dictionary(Of String, String)) As CpfcDetailVariantTexts

        If Dicts.Count > 0 Then
            SetDetailVariantTexts = New CpfcDetailVariantTexts
            For Each text As KeyValuePair(Of String, String) In Dicts
                varText = (New CCpfcDetailVariantText).Create(text.Key, text.Value)
                SetDetailVariantTexts.Append(varText)
            Next
        Else
            SetDetailVariantTexts = Nothing
        End If
        Return SetDetailVariantTexts
    End Function
    Public Function 工程图(m1 As IpfcModel, frmName$, viewScale#, section$, FRONT_view#, TOP_view#, RIGHT_view#, requirements As String(), note_location#(), FRONT_location#(), TOP_location#(), RIGHT_location#()) As IpfcDrawing
        ' 前视图FRONT 对应的截面为Z；右视图RIGHT 对应的截面为X；俯视图TOP 对应的截面为Y
        AC.Session.RunMacro("8 ~ Command `ProCmdXsecCsys" + section$ + "` ; ~ Activate `main_dlg_cur` `dashInst0.Done`;")
        ' 获得视图放置方向()
        view = m1.GetView("FRONT")
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        view_1 = m1.GetView("TOP")
        transform3D_1 = view_1.Transform
        transform3D_1 = transformNormalize(transform3D_1)

        view_2 = m1.GetView("RIGHT")
        transform3D_2 = view_2.Transform
        transform3D_2 = transformNormalize(transform3D_2)

        m1.Regenerate(Nothing)
        Threading.Thread.Sleep(500)

        ' 工程图
        ' 1、根据模板创建绘图，但是绘图是未激活的无法进行下一步操作
        ' 2、激活绘图，设定插入位置，转换矩阵 （注：激活视图与视图构造器之间时间太短的话会导致程序报错）
        ' 3、创建一般视图构造器，创建视图，刷新绘图
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, frmName, m1.Descr, drawingOptions)
        m2 = activate(m1.FullName, 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(500)
        ' 创建视图对象
        If FRONT_view# = 1 Then
            instrs = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(FRONT_location#(0), FRONT_location#(1)), transform3D)
        End If
        If TOP_view# = 1 Then
            instrs_1 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(TOP_location#(0), TOP_location#(1)), transform3D_1)
        End If
        If RIGHT_view# = 1 Then
            instrs_2 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(RIGHT_location#(0), RIGHT_location#(1)), transform3D_2)
        End If

        ' 更改视图比例
        If FRONT_view# = 1 Then
            instrs.Scale = viewScale
            view2D = drawing.CreateView(instrs)
            view2D.Name = "前视图"
        End If
        If TOP_view# = 1 Then
            instrs_1.Scale = viewScale
            view2D = drawing.CreateView(instrs_1)
            view2D.Name = "俯视图"
        End If
        If RIGHT_view# = 1 Then
            instrs_2.Scale = viewScale
            view2D = drawing.CreateView(instrs_2)
            view2D.Name = "右视图"
        End If


        'If UBound(requirements） - LBound(requirements） + 1 = 1 Then
        '    texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        'ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
        'End If
        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 10 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 11 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 12 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10) + Chr(10) + "    12." + requirements(11)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 13 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8) + Chr(10) + "    10." + requirements(9) + Chr(10) + "    11." + requirements(10) + Chr(10) + "    12." + requirements(11) + Chr(10) + "    13." + requirements(12)
        End If
        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function
    Public Function 工程图2(m1 As IpfcModel, frmName$, viewScale#, section$, FRONT_view#, TOP_view#, RIGHT_view#, requirements As String(), note_location#(), FRONT_location#(), TOP_location#(), RIGHT_location#()) As IpfcDrawing
        ' 前视图FRONT 对应的截面为Z；右视图RIGHT 对应的截面为X；俯视图TOP 对应的截面为Y
        AC.Session.RunMacro("8 ~ Command `ProCmdXsecCsys" + section$ + "` ; ~ Activate `main_dlg_cur` `dashInst0.Done`;")
        ' 获得视图放置方向()
        view = m1.GetView("FRONT")
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        view_1 = m1.GetView("TOP")
        transform3D_1 = view_1.Transform
        transform3D_1 = transformNormalize(transform3D_1)

        view_2 = m1.GetView("LEFT")
        transform3D_2 = view_2.Transform
        transform3D_2 = transformNormalize(transform3D_2)

        m1.Regenerate(Nothing)
        Threading.Thread.Sleep(500)

        ' 工程图
        ' 1、根据模板创建绘图，但是绘图是未激活的无法进行下一步操作
        ' 2、激活绘图，设定插入位置，转换矩阵 （注：激活视图与视图构造器之间时间太短的话会导致程序报错）
        ' 3、创建一般视图构造器，创建视图，刷新绘图
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, frmName, m1.Descr, drawingOptions)
        m2 = activate(m1.FullName, 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(500)
        ' 创建视图对象
        If FRONT_view# = 1 Then
            instrs = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(FRONT_location#(0), FRONT_location#(1)), transform3D)
        End If
        If TOP_view# = 1 Then
            instrs_1 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(TOP_location#(0), TOP_location#(1)), transform3D_1)
        End If
        If RIGHT_view# = 1 Then
            instrs_2 = (New CCpfcGeneralViewCreateInstructions).Create(m1, 1, CreatePoint(RIGHT_location#(0), RIGHT_location#(1)), transform3D_2)
        End If

        ' 更改视图比例
        If FRONT_view# = 1 Then
            instrs.Scale = viewScale
            view2D = drawing.CreateView(instrs)
            view2D.Name = "前视图"
        End If
        If TOP_view# = 1 Then
            instrs_1.Scale = viewScale
            view2D = drawing.CreateView(instrs_1)
            view2D.Name = "俯视图"
        End If
        If RIGHT_view# = 1 Then
            instrs_2.Scale = viewScale
            view2D = drawing.CreateView(instrs_2)
            view2D.Name = "左视图"
        End If

        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)

        End If

        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function

    Public Function 零件技术要求(drawing As IpfcDrawing, requirements As String(), note_location#()) As IpfcDrawing


        If UBound(requirements） - LBound(requirements） + 1 = 1 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 2 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 3 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 4 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 5 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 6 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 7 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 8 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7)
        ElseIf UBound(requirements） - LBound(requirements） + 1 = 9 Then
            texts = "      技术要求:" + Chr(10) + "    1." + requirements(0) + Chr(10) + "    2." + requirements(1) + Chr(10) + "    3." + requirements(2) + Chr(10) + "    4." + requirements(3) + Chr(10) + "    5." + requirements(4) + Chr(10) + "    6." + requirements(5) + Chr(10) + "    7." + requirements(6) + Chr(10) + "    8." + requirements(7) + Chr(10) + "    9." + requirements(8)

        End If

        无引线注释(drawing, texts, note_location(0), note_location(1), 0, 0)

        Return drawing
    End Function
    Public Sub 刨视图(view$, sectionName$, planeModel$， Optional rePlanNumber# = 11)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Annotate_control_btn` 0;")
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中布局 如果要选中视图则需要先选中布局（暂时是这样）
        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        '' 选中对应的视图 其中 view$ = view_2 中的数字可以控制哪一个视图
        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 -1 -1 -1`;")
        '' 视图属性操作 如果需要对视图进行下一步操作，则需要进入视图属性界面
        'AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        If planeModel = "fullPlane" Then
            ' 创建刨视图 在视图属性中创建刨视图其中 XSEC0001 为刨视图截面
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `options_list` 1 `Section`;" +
                               " ~ Select `drawing_view` `sec_options_rad` 1 `cross_sec`;" +
                               " ~ Activate `drawing_view` `add_section`;" +
                               " ~ FocusIn `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Open `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Close `drawing_view` `xsection_table:sec_name:0`;" +
                               " ~ Select `drawing_view` `xsection_table:sec_name:0` 1 `" + sectionName + "`;" +
                               " ~ Activate `drawing_view` `psh_ok`;")
        ElseIf planeModel = "halfPlane" Then
            ' 创建半刨视图 在视图属性中创建刨视图其中 sectionName$ = XSEC0001 为刨视图截面
            ' 选择半刨参考面 node11 逆序排列
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;" +
                                "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 2 -1 -1`;" +
                                "~ Command `ProCmdEditProperties@PopupMenuTree` ;" +
                                "~ Select `drawing_view` `options_list` 1 `Section`;" +
                                "~ Select `drawing_view` `sec_options_rad` 1 `cross_sec`;" +
                                "~ Activate `drawing_view` `add_section`;" +
                                "~ FocusIn `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Open `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Close `drawing_view` `xsection_table:sec_name:0`;" +
                                "~ Select `drawing_view` `xsection_table:sec_name:0` 1 `" + sectionName + "`;" +
                                "~ Open `drawing_view` `xsection_table:sec_vis:0`;" +
                                "~ Close `drawing_view` `xsection_table:sec_vis:0`;" +
                                "~ Select `drawing_view` `xsection_table:sec_vis:0` 1 `Half`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + rePlanNumber.ToString + "`;" +
                                "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                                "~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER` `main_dlg_w2:PHTLeft.AssyTree:<NULL>`;" +
                                "~ Activate `drawing_view` `psh_apply`;" +
                                "~ Activate `drawing_view` `psh_ok`;")
        End If

    End Sub
    Public Sub 选中球标(model As IpfcModel, i As Integer, j As Integer)
        selBuffer.Clear()
        modelItems = listModelItem(model, "DTL_SYM_INSTANCE")
        '第一个球标
        note_Item_10 = modelItems.Item(i)
        detailItem10 = CType(note_Item_10, IpfcDetailItem)
        symItem10 = CType(detailItem10, IpfcDetailSymbolInstItem)
        detailSymbolDefInstructions10 = symItem10.GetInstructions(True)
        detailVariantTexts10 = detailSymbolDefInstructions10.TextValues
        detailVariantText10 = detailVariantTexts10.Item(0)
        compSelect_10 = (New CMpfcSelect).CreateModelItemSelection(note_Item_10, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_10)
        '第二个 球标
        note_Item_11 = modelItems.Item(j)
        detailItem11 = CType(note_Item_11, IpfcDetailItem)
        symItem11 = CType(detailItem11, IpfcDetailSymbolInstItem)
        detailSymbolDefInstructions11 = symItem11.GetInstructions(True)
        detailVariantTexts11 = detailSymbolDefInstructions11.TextValues
        detailVariantText11 = detailVariantTexts11.Item(0)
        compSelect_11 = (New CMpfcSelect).CreateModelItemSelection(note_Item_11, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果

        AC.Session.RunMacro("~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                                "~ Command `ProCmdDwgTblBlnQtyMrg`;") ' 合并球标     J的位置 排在 I的位置的后面 
        selBuffer.AddSelection(compSelect_10)
        selBuffer.AddSelection(compSelect_11)
        ''‘’''msgbox(detailVariantText10.Value)
        '选中表格内容(model)
        ''‘’''msgbox(ballmarks(i))
        ''‘’''msgbox(codes(i))
        ''‘’''msgbox(conNames(i))
        ''‘’''msgbox(numbers(i))
    End Sub
    Private Sub Reg_Csheet()
        drawing = AC.Session.CurrentModel
        If Isdrawding() = True Then
            drawing = CType(drawing, IpfcDrawing)
            drawing.RegenerateSheet(drawing.CurrentSheetNumber)
        End If
    End Sub
    Private Function Isdrawding() As Boolean
        Try
            If AC.Session.CurrentModel Is Nothing Then
                Isdrawding = False
            ElseIf (AC.Session.CurrentModel.Type = EpfcModelType.EpfcMDL_DRAWING) Then
                Isdrawding = True
            Else
                Isdrawding = False
            End If
        Catch ex As Exception
            ''‘’''msgbox(ex.Message.ToString + Chr(13) + ex.StackTrace.ToString)
            Isdrawding = False
        End Try
    End Function
    Public Function 选中表格内容(model As IpfcModel) As ArrayList

        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        For n = 1 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 1 Then
                    ballmarks.Add(GetTableInfo)
                End If
                If n = 2 Then
                    codes.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames.Add(GetTableInfo) '
                End If
                If n = 4 Then
                    numbers.Add(GetTableInfo)
                End If
            Next
        Next
        contents.Add(ballmarks)
        contents.Add(codes)
        contents.Add(conNames)
        contents.Add(numbers)

        Return contents

    End Function
    Public Sub 显示尺寸(view$, rowNumber%)
        ' 选中布局 如果要选中视图则需要先选中布局（暂时是这样）
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Layout_control_btn` 1;")
        ' 选中对应的视图 其中view_2 中的数字可以控制哪一个视图
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view + " 92 0 -1 -1 -1`;")
        ' 显示模型注释界面
        AC.Session.RunMacro("~ Command `ProCmdDwgShowAllAnnots` ;")
        ' 显示视图中的尺寸 通过row0 控制不同的尺寸
        AC.Session.RunMacro("~ Select `show_model_annotations` `tbl_dim` 2 `row" + rowNumber.ToString + "` `show`;~ Activate `show_model_annotations` `psh_ok`;")

        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        AC.Session.RunMacro("~ Select `mod_dim_new_asynch` `opt_tol_table` 1 `None`;")
        AC.Session.RunMacro("~ Select `mod_dim_new_asynch` `opt_tol_mode` 1 `Plus Minus`;")
        AC.Session.RunMacro("8 ~ Update `mod_dim_new_asynch` `inp_iso_upper_tol` `+0.4`;~ FocusOut `mod_dim_new_asynch` `inp_iso_upper_tol`;~ Update `mod_dim_new_asynch` `inp_iso_lower_tol` `-0.2`; ~ FocusOut `mod_dim_new_asynch` `inp_iso_lower_tol`;")
        AC.Session.RunMacro("8 ~ FocusOut `mod_dim_new_asynch` `inp_iso_lower_tol`;~ Activate `mod_dim_new_asynch` `psh_ok`;")

    End Sub
    Public Sub closeWindow(model As IpfcModel)
        window = session.CreateModelWindow(model)
        window.Close()
    End Sub
    Public Function Drwing_Rename(partName$, NewName$) As IpfcModel


        m2 = activateModel(partName$, 1)
        'm2.CommonName = Com_name
        'Threading.Thread.Sleep(1000)
        'm2.Regenerate(Nothing)
        'Threading.Thread.Sleep(1000)
        m5 = activateModel(partName$, 2)
        添加图幅注释(m5， read("T_MOTOR"))
        m5.Rename(NewName$, True)
        m2.Rename(NewName$, True)
        RegenerateModel(m5)
        closeWindow(m5)
        closeWindow(m2)
        Threading.Thread.Sleep(1000)
        Return m5

    End Function

    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="asmcomp_2"></param>插入的元件特征
    ''' <param name="a"></param>固定元件的特征ID
    ''' <param name="s"></param>插入元件的特征ID
    ''' <param name="idc#"></param>固定元件特征ID
    ''' <param name="idb#"></param>插入元件特征ID
    ''' <param name="type_1#"></param>固定元件的特征项目类型
    ''' <param name="type_2#"></param>插入元件的特征项目类型
    ''' <param name="Name_1$"></param>固定元件的基准面轴的名称
    ''' <param name="Name_2$"></param>插入元件的基准面轴的名称
    ''' <param name="ida#"></param>配合类型
    ''' <param name="distance#"></param>配合距离
    ''' <returns></returns>
    Public Function 装配约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc#, idb#, type_1#, type_2#, Name_1$, Name_2$, ida#, Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        Path = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = Path.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf
        If type_1 = 1 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 4 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 1 And type_2 = 4 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 4 And type_2 = 4 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 1 And type_2 = 2 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 2 And type_2 = 1 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        ElseIf type_1 = 2 And type_2 = 2 Then
            If Name_1 = "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            ElseIf Name_1 = "" And Name_2 <> "" Then
                compItem_1 = componentModel_1.GetItemByID(type_1, idc)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            ElseIf Name_1 <> "" And Name_2 = "" Then
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByID(type_2, idb)
            Else
                compItem_1 = componentModel_1.GetItemByName(type_1, Name_1)
                compItem_2 = componentModel_2.GetItemByName(type_2, Name_2)
            End If
        End If

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Path)
        constraint = (New CCpfcComponentConstraint).Create(ida) '重合=0
        If ida = 3 Or ida = 1 Then
            constraint.Offset = distance
        End If
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function
    Public Function 插入零件_1(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcComponentFeat

        smodel_2 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_2 = AC.Session.RetrieveModel(smodel_2)
        transform3D_1 = 零件位置(assembly, componentModel_1, "FRONT")
        asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
        'assembly.Display()
        AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
        AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型  
        Return asmcomp_2
    End Function
    Public Function 插入零件_2(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcComponentFeat

        smodel_2 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_2 = AC.Session.RetrieveModel(smodel_2)
        'transform3D_1 = 零件位置(assembly, componentModel_1, "FRONT")
        asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
        'assembly.Display()
        AC.Session.CurrentWindow.Activate() '激活当前窗口的模型 
        AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型  
        Return asmcomp_2
    End Function
    Public Function 固定零件(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcSolid
        smodel_1 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()
        Return componentModel_1
    End Function
    Public Sub 插入固定零件(name_11$, code_11$, MATERIAL_11$)
        固定零件(assembly, 1, "E:\works\creo\template\start_part.prt")
        m9 = activateModel("start_part", 1)
        m9.CommonName = name_11 '名称
        m9.Rename(code_11, True) '代号
        setParamValue(m9, "MATERIAL", MATERIAL_11, "字符串") '材料
        RegenerateModel(m9)
        closeWindow(m9)
    End Sub
    Public Sub 添加bom新内容(ItemString As String(), m8 As IpfcModel)


        For i = 0 To ItemString.Length / 4 - 1
            插入固定零件(ItemString(0 + 4 * i), ItemString(1 + 4 * i), ItemString(2 + 4 * i))
        Next
        modelItems = listModelItem(m8, "FEATURE")
        For i = 1 To ItemString.Length / 4
            If ItemString(4 * （i） - 1) = 1 Then
                '阵列(modelItems.Item(modelItems.Count - 2 * i), m8, ItemString(4 * （i） - 1))
            Else
                阵列(modelItems.Item(modelItems.Count - 2 * i), m8, ItemString(4 * （i） - 1))
            End If

        Next


    End Sub
    Public Function 固定基座(assembly As IpfcAssembly, componentType#, componentPath$) As IpfcSolid
        smodel_1 = (New CCpfcModelDescriptor).Create(componentType, componentPath, Nothing)
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints

        ids = (New Cintseq)
        ids.Append(84)
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)

        compItem_1 = assembly.GetItemByName(1, "ASM_RIGHT")
        compItem_2 = componentModel_1.GetItemByName(1, "ASM_FRONT")
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)
        constraint = (New CCpfcComponentConstraint).Create(2)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)

        compItem_3 = assembly.GetItemByName(1, "ASM_TOP")
        compItem_4 = componentModel_1.GetItemByName(1, "ASM_TOP")
        compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, Nothing)
        compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)
        constraint1 = (New CCpfcComponentConstraint).Create(2)
        constraint1.AssemblyReference = compSelect_3
        constraint1.ComponentReference = compSelect_4
        constraints.Append(constraint1)

        compItem_5 = assembly.GetItemByName(1, "ASM_FRONT")
        compItem_6 = componentModel_1.GetItemByName(1, "ASM_RIGHT")
        compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(compItem_5, Nothing)
        compSelect_6 = (New CMpfcSelect).CreateModelItemSelection(compItem_6, Nothing)
        constraint2 = (New CCpfcComponentConstraint).Create(2)
        constraint2.AssemblyReference = compSelect_5
        constraint2.ComponentReference = compSelect_6
        constraints.Append(constraint2)

        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()

        Return componentModel_1
    End Function
    Public Function 零件位置(assembly As IpfcAssembly, componentModel_1 As IpfcSolid, datumName$) As IpfcTransform3D
        excludes = New CpfcModelItemTypes
        excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
        excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
        excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
        viewer = CType(componentModel_1, IpfcViewOwner)
        view = viewer.GetView(datumName)
        transform3D_1 = view.Transform
        outline = assembly.EvalOutline(transform3D_1, excludes)
        p3d = outline.Item(1)
        Return transform3D_1
    End Function
    Public Function threeID(asmcomp_2 As IpfcComponentFeat, s() As Double, a() As Double, idc() As Double, idb() As Double, ida() As Double， Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path_1.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        For i = 0 To idc.Length - 1
            compItem_1 = componentModel_1.GetItemByID(1, idc(i))
            compItem_2 = componentModel_2.GetItemByID(1, idb(i))
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path_1)
            constraint = (New CCpfcComponentConstraint).Create(ida(i)) '重合=0
            If ida(i) = 3 Or ida(i) = 1 Then
                constraint.Offset = distance
            End If
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
        Next
        Return constraints
    End Function

    Public Function 基准面约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, DatumName_1$, DatumName_2$) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path_1.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        compItem_1 = componentModel_1.GetItemByName(1, DatumName_1)
        compItem_2 = componentModel_2.GetItemByName(1, DatumName_2)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path_1)
        constraint = (New CCpfcComponentConstraint).Create(2)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function

    ''' <summary>
    ''' 装配轴轴对齐
    ''' </summary>
    ''' <param name="asmcomp_2"></param>需要添加约束的组件
    ''' <param name="s"></param>需要配合约束的组件实体
    ''' <param name="a"></param>需要添加约束的组件实体
    ''' <param name="axisName_1$"></param>配合约束的组件轴名称
    ''' <param name="axisName_2$"></param>添加约束的组件轴名称
    ''' <returns></returns>
    Public Function 轴约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, axisName_1$, axisName_2$) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path_1.Leaf   ' 后插入组件
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf     ' 前插入组件

        compItem_1 = componentModel_1.GetItemByName(4, axisName_1)
        compItem_2 = componentModel_2.GetItemByName(4, axisName_2)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path_1)
        constraint = (New CCpfcComponentConstraint).Create(EpfcComponentConstraintType.EpfcASM_CONSTRAINT_ALIGN)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function
    Public Function 面面约束(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc As Double, idb As Double, ida As Double， Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path_1.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, idc)
        compItem_2 = componentModel_2.GetItemByID(1, idb)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path_1)
        constraint = (New CCpfcComponentConstraint).Create(ida) '重合=0
        If ida = 3 Or ida = 1 Then
            constraint.Offset = distance
        End If
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Activate()
        AC.Session.CurrentWindow.Refresh()
        Return constraints
    End Function
    Public Function manyID(asmcomp_2 As IpfcComponentFeat, a() As Double, s() As Double, idc() As Double, idb() As Double, ida() As Double， Optional distance# = 0) As IpfcComponentConstraints
        ids = (New Cintseq)
        For i = 0 To s.Length - 1
            ids.Append(s(i))
        Next
        path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = path_1.Leaf
        ids.Clear()
        For i = 0 To a.Length - 1
            ids.Append(a(i))
        Next
        pa = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = pa.Leaf

        For i = 0 To idc.Length - 1
            compItem_1 = componentModel_1.GetItemByID(1, idc(i))
            compItem_2 = componentModel_2.GetItemByID(1, idb(i))
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, pa)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, path_1)
            constraint = (New CCpfcComponentConstraint).Create(ida(i)) '重合=0
            If ida(i) = 3 Or ida(i) = 1 Then
                constraint.Offset = distance
            End If
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            AC.Session.CurrentWindow.Activate()
            AC.Session.CurrentWindow.Refresh()
        Next
        Return constraints
    End Function
    Public Sub 转动到指定位置(model As IpfcModel, transfromName$)
        transform3D = (New CCpfcTransform3D).Create(Nothing)
        For i = 0 To 3
            For j = 0 To 3
                transform3D.Matrix.Set(i, j, 0)
            Next
        Next

        view = model.GetView(transfromName)
        transform3D = view.Transform
        transform3D = transformNormalize(transform3D)

        '' 前视图矩阵: [[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]
        'transform3D.Matrix.Set(3, 3, 1)
        'transform3D.Matrix.Set(0, 0, 1)
        'transform3D.Matrix.Set(1, 1, 1)
        'transform3D.Matrix.Set(2, 2, 1)

        CType(model, IpfcViewOwner).GetCurrentView.Transform = transform3D
        AC.Session.CurrentWindow.Refresh()
        AC.Session.CurrentWindow.Repaint()
    End Sub
    ''' <summary>
    ''' 修改参数
    ''' </summary>
    ''' <param name="model"></param>
    ''' <param name="paramName$"></param>
    ''' <param name="paramValue$"></param>
    ''' <param name="paramType$"></param>
    Public Sub setParamValue(model As IpfcModel, paramName$, paramValue$， paramType$， Optional angle# = 0)
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            If paramType = "浮点型" Then
                iparamValue.DoubleValue = Double.Parse(paramValue)
            ElseIf paramType = "字符串" Then
                iparamValue.StringValue = paramValue
            ElseIf paramType = "布尔型" Then
                iparamValue.BoolValue = Boolean.Parse(paramValue)
            ElseIf paramType = "角度" Then
                iparamValue.DoubleValue = angle
            Else
                iparamValue.BoolValue = Long.Parse(paramValue)
            End If
            iParameter.SetScaledValue(iparamValue, Nothing)
            'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")
        End If

    End Sub

    Public Sub setTextValue(model As IpfcModel, paramName$， paramType$， Optional angle# = 0)
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue

            iParameter.SetScaledValue(iparamValue, Nothing)

        End If

    End Sub

    ''' <summary>
    ''' 删除参数
    ''' </summary>
    ''' <param name="model"></param>
    ''' <param name="paramName$"></param>
    ''' <param name="paramValue$"></param>
    ''' <param name="paramType$"></param>
    Public Sub DelParamValue(model As IpfcModel, paramName$, paramValue$， paramType$， Optional angle# = 0)
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iParameter.Delete()

        End If

    End Sub
    Public Sub addParam(model As IpfcModel, paramName$, paramValue$， paramType$)

        If model IsNot Nothing Then
            If (paramType = "浮点型") Then
                iparamValue = (New CMpfcModelItem).CreateDoubleParamValue(Double.Parse(paramValue))
            ElseIf (paramType = "整型") Then
                iparamValue = (New CMpfcModelItem).CreateIntParamValue(Int32.Parse(paramValue))
            ElseIf (paramType = "字符串") Then
                iparamValue = (New CMpfcModelItem).CreateStringParamValue(paramValue)
            ElseIf (paramType = "布尔型") Then
                iparamValue = (New CMpfcModelItem).CreateBoolParamValue(Boolean.Parse(paramValue))
            Else
                iparamValue = (New CMpfcModelItem).CreateNoteParamValue(Long.Parse(paramValue))
            End If

            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameterOwner.CreateParam(paramName, iparamValue)
        End If

    End Sub
    Public Function GetParamDoubleValue(model As IpfcModel, paramName$) As Double

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            DimensValue = iparamValue.DoubleValue
        End If

        Return DimensValue

    End Function
    Public Function GetParamStringValue(model As IpfcModel, paramName$) As String

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            StringValue = iparamValue.StringValue
        End If

        Return StringValue

    End Function
    Public Sub RegenerateModel(m1 As IpfcModel)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        ElseIf m1.Type = EpfcModelType.EpfcMDL_DRAWING Then
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Review_control_btn` 1;" +
                                "~ Command `ProCmdDwgRegenModel`;")
        End If
    End Sub
    Public Sub partValue(m1 As IpfcModel)

        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("NAME") <> "" Then
            setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK") = "A" Then
            setParamValue(m1, "MARK_A", read("MARK"), "字符串")
        ElseIf read("MARK") = "B" Then
            setParamValue(m1, "MARK_B", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If

    End Sub
    Public Sub partValue_1(m1 As IpfcModel)

        If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If

        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If

    End Sub
    Public Sub partValue_new(model As IpfcModel)
        Dim paramName As String()
        Dim paramValue As String()
        paramName = {"SOURCE", "MATERIAL", "REMARK", "SHEET_SIZE",
                "DESCRIPTION", "OPT_LEVEL", "MARK", "MARK_A", "MARK_B",
                 "VERSION", "MATERIAL_CODE", "MT_LEVEL"}
        paramValue = {read("SOURCE"), read("MATERIAL"), read("REMARK"), read("SHEET_SIZE"),
                read("DESCRIPTION"), read("OPT_LEVEL"), read("MARK"), read("MARK_A"),
                read("MARK_B")， read("VERSION"), read("MATERIAL_CODE"), read("MT_LEVEL")}

        If model IsNot Nothing Then
            For i = 0 To paramName.Count - 1

                iParameterOwner = CType(model, IpfcParameterOwner)
                iParameter = iParameterOwner.GetParam(paramName(i))
                iparamValue = iParameter.GetScaledValue
                iparamValue.StringValue = paramValue(i)
                iParameter.SetScaledValue(iparamValue, Nothing)

                'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")
            Next
        End If

    End Sub
    Public Function listModelItem_1(model As IpfcModel, ModelItemType$, name$) As IpfcModelItem
        Dim aaa As IpfcModelItem
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()

        If ModelItemType = "FEATURE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_FEATURE, name) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_SURFACE, name)
        ElseIf ModelItemType = "EDGE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_EDGE, name)
        ElseIf ModelItemType = "AXIS" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_AXIS, name)
        ElseIf ModelItemType = "DATUM_POINT" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_POINT, name)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_QUILT, name)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_CURVE, name)
        ElseIf ModelItemType = "DIMENSION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, name)
        ElseIf ModelItemType = "REF_DIMENSION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_REF_DIMENSION, name)
        ElseIf ModelItemType = "SYM_DEFINITION" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_SYM_DEFINITION, name)
        ElseIf ModelItemType = "NOTE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_NOTE, name)
        ElseIf ModelItemType = "DTL_NOTE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_NOTE, name)
        ElseIf ModelItemType = "DTL_SYM_INSTANCE" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE) '符号（球标）
        ElseIf ModelItemType = "EpfcModelItemType_nil" Then
            aaa = model.GetItemByName(EpfcModelItemType.EpfcModelItemType_nil) '所有的尺寸
        End If


        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(aaa, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_1)
        If aaa.GetName IsNot Nothing Then
            '''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + aaa.GetName + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        Else
            '''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        End If

        selBuffer.Clear()

        Return aaa
    End Function
    Public Function listModelItem_2(model As IpfcModel, ModelItemType$, id$) As IpfcModelItem
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        Dim aaa As IpfcModelItem
        If ModelItemType = "FEATURE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_FEATURE, id) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_SURFACE, id)
        ElseIf ModelItemType = "EDGE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_EDGE, id)
        ElseIf ModelItemType = "AXIS" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_AXIS, id)
        ElseIf ModelItemType = "DATUM_POINT" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_POINT, id)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_QUILT, id)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_CURVE, id)
        ElseIf ModelItemType = "DIMENSION" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_DIMENSION, id)
        ElseIf ModelItemType = "REF_DIMENSION" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_REF_DIMENSION, id)
        ElseIf ModelItemType = "SYM_DEFINITION" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_DTL_SYM_DEFINITION, id)
        ElseIf ModelItemType = "NOTE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_NOTE, id)
        ElseIf ModelItemType = "DTL_NOTE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_DTL_NOTE, id)
        ElseIf ModelItemType = "DTL_SYM_INSTANCE" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE) '符号（球标）
        ElseIf ModelItemType = "EpfcModelItemType_nil" Then
            aaa = model.GetItemById(EpfcModelItemType.EpfcModelItemType_nil) '所有的尺寸
        End If
        If aaa.GetName IsNot Nothing Then
            '''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + aaa.GetName + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        Else
            '''msgbox("检索号：" + i.ToString + Chr(13) + Chr(10) + "特征ID：" + aaa.Id.ToString)
        End If

        selBuffer.Clear()

        Return aaa
    End Function

    Public Function listModelItem_有弹窗(model As IpfcModel, ModelItemType$) As IpfcModelItems
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()

        If ModelItemType = "FEATURE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_FEATURE) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_SURFACE)
        ElseIf ModelItemType = "EDGE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_EDGE)
        ElseIf ModelItemType = "AXIS" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_AXIS)
        ElseIf ModelItemType = "DATUM_POINT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_POINT)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_QUILT)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_CURVE)
        ElseIf ModelItemType = "DIMENSION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DIMENSION)
        ElseIf ModelItemType = "REF_DIMENSION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_REF_DIMENSION)
        ElseIf ModelItemType = "SYM_DEFINITION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_SYM_DEFINITION)
        ElseIf ModelItemType = "NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_NOTE)
        ElseIf ModelItemType = "DTL_NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_NOTE)
        ElseIf ModelItemType = "DTL_SYM_INSTANCE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE) '符号（球标）
        ElseIf ModelItemType = "EpfcModelItemType_nil" Then
            feats = model.ListItems(EpfcModelItemType.EpfcModelItemType_nil) '所有的尺寸
        End If
        ' features = model.ListFeaturesByType(True, EpfcFeatureType.EpfcFEATTYPE_HOLE)
        For i = 0 To feats.Count - 1
            asmItem_1 = feats.Item(i)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
            selBuffer.AddSelection(compSelect_1)
            If asmItem_1.GetName IsNot Nothing Then
                MsgBox("检索号：" + i.ToString + Chr(13) + Chr(10) + asmItem_1.GetName + Chr(13) + Chr(10) + "特征ID：" + asmItem_1.Id.ToString)
            Else
                MsgBox("检索号：" + i.ToString + Chr(13) + Chr(10) + "特征ID：" + asmItem_1.Id.ToString)
            End If

            selBuffer.Clear()
        Next
        Return feats
    End Function
    Public Function listModelItem(model As IpfcModel, ModelItemType$) As IpfcModelItems
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        If ModelItemType = "FEATURE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_FEATURE) 'EpfcModelItemType.EpfcITEM_FEATURE
        ElseIf ModelItemType = "SURFACE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_SURFACE)
        ElseIf ModelItemType = "EDGE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_EDGE)
        ElseIf ModelItemType = "AXIS" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_AXIS)
        ElseIf ModelItemType = "DATUM_POINT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_POINT)
        ElseIf ModelItemType = "DATUM_QUILT" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_QUILT)
        ElseIf ModelItemType = "DATUM_CURVE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_CURVE)
        ElseIf ModelItemType = "DIMENSION" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DIMENSION)
        ElseIf ModelItemType = "NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_NOTE)
        ElseIf ModelItemType = "DTL_NOTE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_NOTE)
        ElseIf ModelItemType = "DTL_SYM_INSTANCE" Then
            feats = model.ListItems(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE)
        End If
        ' features = model.ListFeaturesByType(True, EpfcFeatureType.EpfcFEATTYPE_HOLE)
        For i = 0 To feats.Count - 1
            asmItem_1 = feats.Item(i)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
            selBuffer.AddSelection(compSelect_1)
            selBuffer.Clear()
        Next
        Return feats
    End Function
    Public Sub 修改注释(feats As IpfcModelItems, j#, noteValue$)
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDwgEditValue` ;" + noteValue + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 修改注释_name(feat As IpfcModelItem, noteValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdDwgEditValue` ;" + noteValue + ";")
        selBuffer.Clear()
    End Sub
    Public Sub 修改注释2(feat As IpfcModelItem, noteValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(feat, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub 尺寸删除(asmItem_1 As IpfcModelItem)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdEditDelete@PopupMenuGraphicWinStack`;")
        selBuffer.Clear()
    End Sub
    Public Sub 零件工程图转移（path$, Afterpath$）
        FileIO.FileSystem.CopyFile(path$, Afterpath$)

    End Sub
    Public Sub 装配体图纸转移（path$, Afterpath$, name$）


        FileIO.FileSystem.CopyDirectory(path$, Afterpath$ + "\" + name)
    End Sub

    Public Sub 生成文件夹（Afterpath$, name$）

        If Dir(Afterpath$ + "\" + name, vbDirectory) = "" Then
            MkDir(Afterpath$ + "\" + name)
        Else
            DeleteFoldeSubFF(Afterpath$ + "\" + name)
        End If

    End Sub
    Public Sub 添加图幅注释(model As IpfcModel, str$)
        Dim SheetInfo As IpfcSheetOwner
        Dim width1 As Integer
        SheetInfo = CType(model, IpfcSheetOwner)
        width1 = SheetInfo.GetSheetInfo(1).Width
        model.Import("E:\works\creo\config\creodtl.dtl", (New CCpfcDWGSetupImportInstructions).Create())
        drawing = CType(model, IpfcDrawing)
        If width1 = 210 Then 'A4

            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If

            无引线注释(drawing, texts, 208, 395, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 420 Then 'A3
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 5, 407, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 594 Then 'A2
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 319, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 841 Then 'A1
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 259, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        ElseIf width1 = 1189 Then 'A0
            If str.Length > 6 Then
                texts = str.Substring(0, 6) + Chr(10) + str.Substring(6, str.Length - 6)
            Else
                texts = str
            End If
            无引线注释(drawing, texts, 2, 187, 0, 0)
            modelItems = listModelItem(model, "DTL_NOTE")
            note_Item_1 = modelItems.Item(modelItems.Count - 1)
            修改注释字体大小(modelItems, modelItems.Count - 1, 3.5)
        End If

    End Sub
    Public Sub 加入球标()
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                    "~ Command `ProCmdDwgTblBlnShow`;")
    End Sub
    'Public Function 球标排序(model As IpfcModel, dimensionName$)
    '    asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE, dimensionName)
    '    BaDimension = CType(asmItem_1, IpfcBaseDimension)
    '    Dimension = CType(BaDimension, IpfcDimension)
    '    For i = 0 To selections.Contents.Count - 1
    '        selectBalloon = selections.Contents.Item(i)
    '        modelItems = selectBalloon.SelItem
    '        '国标化球标将球标变成了一个可以访问的DTL_SYM_INSTANCE，未国标化操作的球标无法完成以下操作
    '        If modelitem Is Nothing Then
    '            Continue For
    '        End If
    '        If modelItems.Type = EpfcModelItemType.EpfcITEM_DTL_SYM_INSTANCE Then
    '            item = CType(modelitem, IpfcDetailSymbolInstItem)
    '            '获得原始球标放置的信息
    '            detailSymbolDefInstructions = item.GetInstructions(True)
    '            leaders = detailSymbolDefInstructions.InstAttachment
    '            Attachment = leaders.ItemAttachment
    '            '修改放置位置横坐标值为选中的坐标
    '            If palcement = Placement.Horizon Then
    '                Attachment.AttachmentPoint.Set(1, point.Item(1))
    '            Else
    '                Attachment.AttachmentPoint.Set(0, point.Item(0))
    '            End If
    '            leaders.ItemAttachment = Attachment
    '            detailSymbolDefInstructions.InstAttachment = leaders
    '            '球标重新放置放置
    '            item.Modify(detailSymbolDefInstructions)
    '        End If
    '        Catch ex As Exception
    '    Next
    'End Function
    Public Sub 外形尺寸（number#, order#, size#， Optional order2# = 0, Optional order3# = 0, Optional order4# = 0） '####   number#一级零件填1      order# 模型树顺序   size#尺寸的顺序  
        If number# = 1 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order.ToString + "`;" +
                                "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` ```show`;`;`;" +
                                "~ Arm `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Select `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                                "~ Activate `show_model_annotations` `psh_ok`;")
        ElseIf number# = 2 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order2.ToString + "`;" +
                                "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` ```show`;`;`;" +
                                "~ Arm `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Select `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                                "~ Activate `show_model_annotations` `psh_ok`;")
        ElseIf number# = 3 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order2.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order2.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order3.ToString + "`;" +
                                "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` ```show`;`;`;" +
                                "~ Arm `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Select `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                                "~ Activate `show_model_annotations` `psh_ok`;")
        ElseIf number# = 4 Then
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order2.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order2.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order3.ToString + "`;" +
                                "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + order3.ToString + "`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + order4.ToString + "`;" +
                                "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` ```show`;`;`;" +
                                "~ Arm `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Select `show_model_annotations` `tbl_dim` 2 `row" + size.ToString + "` `show`;" +
                                "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                                "~ Activate `show_model_annotations` `psh_ok`;")
        End If


    End Sub
    Public Sub 修改绘制尺寸值(feats As IpfcModelItems, j#， n#)
        asmItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ;~ Command `ProCmdPmaInpDimOverrideVal`  `" + n.ToString + "`;")
        selBuffer.Clear()
    End Sub
    Public Sub change_txt_note_text(feats As IpfcModelItems, j#, noteValue$)
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub change_txt_note_text2(feat As IpfcModelItem, noteValue$)
        compItem_1 = feat
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties` ;" +
                            "~ Update `note_text_asynch` `txt_note_text` `" + noteValue + "`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ FocusIn `note_text_asynch` `txt_note_text`;" +
                            "~ FocusOut `note_text_asynch` `txt_note_text`;" +
                            "~ Activate `note_text_asynch` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub change_text_note_text2(feats As IpfcModelItems, j#, noteValue$)
        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("Command `ProCmdPmaChkSldPnlGtolTxt`  1;" +
                            "~~ Trail `main_dlg_cur` `Geometric_Tolerance:ProCmdPmaChkSldPnlGtolTxt`" +
                            "~ Input `ProCmdPmaChkSldPnlGtolTxt__panel` `PH.abv_txt_area`" + noteValue +
                            "~ Update `ProCmdPmaChkSldPnlGtolTxt__panel` `PH.abv_txt_area` ;")
        AC.Session.RunMacro(" ~ Trail `main_dlg_cur` `Geometric_Tolerance:ProCmdPmaChkSldPnlGtolTxt`")
        AC.Session.RunMacro("  `RibbonPanelsOnActivate_ProCmdPmaChkSldPnlGtolTxt` ``")
        selBuffer.Clear()

    End Sub
    Public Sub 修改绘制尺寸值_new(asmItem_1 As IpfcModelItem， n#)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPmaChkSldPnlDimTxt`  1;" +
                            "~ Trail `main_dlg_cur` `Dimension_Properties:ProCmdPmaChkSldPnlDimTxt` " +
                            "`RibbonPanelsOnActivate_ProCmdPmaChkSldPnlDimTxt` ``;" +
                            "~ Command `ProCmdPmaInpDimPrefix`  `" + n.ToString + "Xn`;")
        selBuffer.Clear()
    End Sub
    Public Sub 修改绘制尺寸值_new2(asmItem_1 As IpfcModelItem， n#)
        selBuffer.Clear()
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPmaChkSldPnlDimTxt`  1;" +
                            "~ Trail `main_dlg_cur` `Dimension_Properties:ProCmdPmaChkSldPnlDimTxt` " +
                            "`RibbonPanelsOnActivate_ProCmdPmaChkSldPnlDimTxt` ``;" +
                            "~ Command `ProCmdPmaInpDimPrefix`  `" + n.ToString + "XM`;")
        selBuffer.Clear()
    End Sub
    Public Function 根据选中尺寸(model As IpfcModel, dimensionName$) As IpfcDimension
        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, dimensionName)
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension = CType(BaDimension, IpfcDimension)
        Return Dimension
    End Function
    Public Function 选中视图(view2dType$, view2DName$) As IpfcSelection
        If view2dType = "general" Then
            AC.Session.RunMacro("~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view2DName + " 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        ElseIf view2dType = "local" Then
            AC.Session.RunMacro("~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:" + view2DName + " 92 0 101 -1 -1`;" +
                   "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        End If

        compSelect_1 = selBuffer.Contents.Item(0)
        selBuffer.Clear()
        Return compSelect_1
    End Function
    Public Sub 移动视图(view2dType$, view2DName$, x_view2D#, y_view2D#)
        selBuffer.AddSelection(选中视图(view2dType$, view2DName$))
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;" +
                          "~ Select `drawing_view` `options_list` 1 `Origin`;" +
                          "~ Update `drawing_view` `view_x_ip` `" + x_view2D.ToString + "`;" +
                          "~ FocusOut `drawing_view` `view_x_ip`;" +
                          "~ Update `drawing_view` `view_y_ip` `" + y_view2D.ToString + "`;" +
                          "~ FocusOut `drawing_view` `view_y_ip`;" +
                          "~ Activate `drawing_view` `psh_ok`;")
        selBuffer.Clear()
    End Sub
    Public Sub 删除注释符号(feats As IpfcModelItems, j#)
        asmItem_1 = feats.Item(j)
        If asmItem_1.Type = 10 Then
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
            selBuffer.Clear()
        Else
            detailItem = CType(asmItem_1, IpfcDetailItem)
            detailItem.Delete()
        End If
    End Sub
    Public Sub 删除注释符号_name(feat As IpfcModelItem)
        asmItem_1 = feat
        If asmItem_1.Type = 10 Then
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
            selBuffer.Clear()
        Else
            detailItem = CType(asmItem_1, IpfcDetailItem)
            detailItem.Delete()
        End If
    End Sub
    Public Sub 修改注释内容(feats As IpfcModelItems, j#, Optional tolValue# = 0.1, Optional datumSym$ = "A")
        asmItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(asmItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        detailItem = CType(asmItem_1, IpfcDetailItem)
        DetailSymbolInstItem = CType(detailItem, IpfcDetailSymbolInstItem)
        symInstructions = DetailSymbolInstItem.GetInstructions(True)
        detailVariantTexts = symInstructions.TextValues
        detailVariantText = detailVariantTexts.Item(0)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        If detailVariantText.Value.Split("0")(0) = "n" Then
            AC.Session.RunMacro("8 ~ Select `drawing_sym_asynch` `tab_main` 1 `lay_var_text`;" +
                               "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.0`;" +
                               "~ Update `drawing_sym_asynch` `inp_gtolchar.0` `n" + tolValue.ToString + "`;" +
                               "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.1`;" +
                               "~ Update `drawing_sym_asynch` `inp_gtolchar.1` `" + datumSym + "`;" +
                               "~ Activate `drawing_sym_asynch` `OK_modif_push`;")
        Else
            AC.Session.RunMacro("8 ~ Select `drawing_sym_asynch` `tab_main` 1 `lay_var_text`;" +
                             "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.0`;" +
                             "~ Update `drawing_sym_asynch` `inp_gtolchar.0` `" + tolValue.ToString + "`;" +
                             "~ FocusIn `drawing_sym_asynch` `inp_gtolchar.1`;" +
                             "~ Update `drawing_sym_asynch` `inp_gtolchar.1` `" + datumSym + "`;" +
                             "~ Activate `drawing_sym_asynch` `OK_modif_push`;")
        End If

    End Sub
    Public Sub deleteParam(model As IpfcModel, paramName$)

        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iParameter.Delete()
        End If
    End Sub
    Public Sub regenerate() '激活模块

        AC.Session.RunMacro("mapkey 1 ~ Command `ProCmdEnvShadedEdges` ;")

    End Sub
    '删除文件夹下面的所有内容：包括文件，文件夹。
    Public Sub DeleteFoldeSubFF(ByVal fpath As String)

        For Each fd As String In Directory.GetDirectories(fpath)
            DeleteFolder(fd)
        Next
        For Each fi As String In Directory.GetFiles(fpath)
            DeleteFile(fi)
        Next


    End Sub
    '删除文件。
    Public Sub DeleteFile(ByVal fpath As String)
        If IO.File.Exists(fpath) Then
            '删除文件file的方法1:删除到回收站里面。
            My.Computer.FileSystem.DeleteFile(fpath, FileIO.UIOption.OnlyErrorDialogs, FileIO.RecycleOption.SendToRecycleBin, FileIO.UICancelOption.DoNothing)
            '删除文件file的方法2:直接从硬盘上删除。
            'IO.File.Delete(fpath)
        End If
    End Sub
    '删除文件夹。
    Public Function 干涉检查（m1 As IpfcModel） As String



        Dim globalEvaluator As IpfcGlobalEvaluator
        Dim globalInterferences As IpfcGlobalInterferences
        Dim selParts As IpfcSelectionPair
        Dim sel1, sel2 As IpfcSelection
        Dim selItem1, selItem2 As IpfcModel
        Dim volume As IpfcInterferenceVolume
        Dim ret As String = ""
        Dim LTEM1, LTEM2 As String


        globalEvaluator = (New CMpfcInterference).CreateGlobalEvaluator(CType(m1, IpfcAssembly))
        globalInterferences = globalEvaluator.ComputeGlobalInterference(True)
        If Not (globalInterferences Is Nothing) Then
            For Each interference As IpfcGlobalInterference In globalInterferences
                selParts = interference.SelParts
                sel1 = selParts.Sel1
                sel2 = selParts.Sel2
                selItem1 = sel1.SelModel
                selItem2 = sel2.SelModel
                volume = interference.Volume

                LTEM1 = GetParamValue2(selItem1, "SOURCE")
                LTEM2 = GetParamValue2(selItem2, "SOURCE")
                If LTEM1 = "自制件" And LTEM2 = "自制件" Then

                    ret = ret + selItem1.InstanceName + "和" + selItem2.InstanceName + "发生干涉，干涉量为：" + volume.ComputeVolume.ToString() + Chr(13)
                End If

            Next
        Else
            ret = m1.InstanceName + "未发生干涉."
        End If




        Return ret

    End Function
    Public Sub 创建文本(filepath$, Str1$)
        If Not System.IO.File.Exists(filepath) Then
            System.IO.File.WriteAllText(filepath, Str1)
        End If
    End Sub
    Public Sub DeleteFolder(ByVal folder As String)
        If IO.Directory.Exists(folder) Then
            '删除文件夹folder的方法1:删除到回收站里面。
            My.Computer.FileSystem.DeleteDirectory(folder, FileIO.UIOption.OnlyErrorDialogs, FileIO.RecycleOption.SendToRecycleBin, FileIO.UICancelOption.DoNothing)
            '删除文件夹folder的方法2:直接从硬盘上删除。
            'IO.Directory.Delete(folder, True)
        End If
    End Sub
    Public Sub fileBackup_new(modelType$, modelPath$, a1#)
        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        AC.End()
        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        m1 = retrieveModel(modelType, modelPath)
        If modelType = "asm" Then
            m1 = activateModel(Right(modelPath, a1), 0)
        ElseIf modelType = "prt" Then
            m1 = activateModel(Right(modelPath, a1), 1)
        ElseIf modelType = "drw" Then
            m1 = activateModel(Right(modelPath, a1), 2)
        End If
        m1.Rename("transition", True)
        smodel = m1.Descr
        smodel.Path = "E:\works\Creo\Process file"
        m1.Backup(smodel)
        endApp()

    End Sub
    Public Sub fileBackup(modelType$, modelPath$)
        AC = CcAC.Start("D:\PTC6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        AC.End()
        AC = CcAC.Start("D:\PTC6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        'AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        m1 = retrieveModel(modelType, modelPath)
        If modelType = "asm" Then
            m1 = activateModel(Right(modelPath, 15), 0)
        ElseIf modelType = "prt" Then
            m1 = activateModel(Right(modelPath, 15), 1)
        ElseIf modelType = "drw" Then
            m1 = activateModel(Right(modelPath, 15), 2)
        End If
        m1.Rename("transition", True)
        smodel = m1.Descr
        smodel.Path = "E:\works\Creo\Process file"
        m1.Backup(smodel)
        endApp()

    End Sub
    Public Sub New_fileBackup(modelType$, modelPath$, transitionPath$)
        AC = CcAC.Start("D:\PTC6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        AC.End()
        AC = CcAC.Start("D:\PTC6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        'AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        m1 = retrieveModel(modelType, modelPath)
        If modelType = "asm" Then
            m1 = activateModel(Right(modelPath, 15), 0)
        ElseIf modelType = "prt" Then
            m1 = activateModel(Right(modelPath, 15), 1)
        ElseIf modelType = "drw" Then
            m1 = activateModel(Right(modelPath, 15), 2)
        End If
        m1.Rename("transition", True)
        smodel = m1.Descr
        smodel.Path = transitionPath$
        m1.Backup(smodel)
        endApp()

    End Sub
    Public Function openModel(modelType$, modelPath$) As IpfcModel

        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")

        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        AC.End()

        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")
        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        'AC.Session.ChangeDirectory("D:\Proe_STD_JXTH")
        m1 = retrieveModel(modelType, modelPath)


    End Function
    Public Function openModel_new(modelType$, modelPath$) As IpfcModel
        AC = CcAC.Start("D:\Creo6.0\Creo 6.0.6.0\Parametric\bin\parametric.exe", ".")


        AC.Session.LoadConfigFile("E:\works\creo\config\creopro.pro")
        'AC.Session.ChangeDirectory("D:\Creo\trail_dir\proe_stds")
        m1 = retrieveModel(modelType, modelPath)


    End Function
    Public Sub deleteFileChangeModel_new(modelType$, modelPath$, A1#)

        DeleteFoldeSubFF("E:\works\Creo\Process file\")
        fileBackup_new(modelType, modelPath, A1#)

        m1 = openModel(modelType, "E:\works\Creo\Process file\transition." + modelType + ".1")

    End Sub
    Public Sub deleteFileChangeModel(modelType$, modelPath$)

        DeleteFoldeSubFF("E:\works\creo\Process file\")
        fileBackup(modelType, modelPath)
        m1 = openModel(modelType, "E:\works\Creo\Process file\transition." + modelType + ".1")

    End Sub
    Public Function openDrawing(drwFormat$, modelPath$) As IpfcModel

        If drwFormat = "a0" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a1" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a2" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        ElseIf drwFormat = "a3" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DWG_FORMAT, modelPath, Nothing)
        ElseIf drwFormat = "a4" Then
            smodel = (New CCpfcModelDescriptor).Create(EpfcModelType.EpfcMDL_DRAWING, modelPath, Nothing)
        End If
        model = AC.Session.RetrieveModel(smodel) '载入模型
        model.Display()
        AC.Session.CurrentWindow.Activate() '激活模型
        openDrawing = model

    End Function
    Public Function CreatePoint(x#, y#, Optional z# = 0) As IpfcPoint3D

        p3d = New CpfcPoint3D
        p3d.Set(0, x)
        p3d.Set(1, y)
        p3d.Set(2, z)
        Return p3d

    End Function
    Public Function CreateTransfromMatrix() As IpfcTransform3D

        matrix = New CpfcMatrix3D
        For i = 0 To 3
            For j = 0 To 3
                If i = j Then
                    matrix.Set(i, j, 1.0)
                Else
                    matrix.Set(i, j, 0.0)
                End If
            Next
        Next
        transform3D_1 = (New CCpfcTransform3D).Create(matrix)
        Return transform3D_1

    End Function
    Public Function matrixNormalize(matrix As IpfcMatrix3D) As IpfcMatrix3D
        Dim scale As Double
        Dim row, col As Integer

        matrix.Set(3, 0, 0.0)
        matrix.Set(3, 1, 0.0)
        matrix.Set(3, 2, 0.0)

        scale = Math.Sqrt(matrix.Item(0, 0) * matrix.Item(0, 0) + matrix.Item(0, 1) *
                              matrix.Item(0, 1) + matrix.Item(0, 2) * matrix.Item(0, 2))

        For row = 0 To 2
            For col = 0 To 2
                matrix.Set(row, col, matrix.Item(row, col) / scale)
            Next
        Next

        matrixNormalize = matrix

    End Function
    Public Function transformNormalize(transform3D_1 As IpfcTransform3D) As IpfcTransform3D

        matrix = transform3D_1.Matrix
        transform3D_1 = (New CCpfcTransform3D).Create(matrixNormalize(matrix))
        Return transform3D_1
        ' Return (New CCpfcTransform3D).Create(matrixNormalize(matrix))

    End Function
    Public Function createDrawingFromTemplate(template$) As IpfcDrawing

        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        session = AC.Session
        model = session.CurrentModel
        drawing = session.CreateDrawingFromTemlate(model.FullName, template, model.Descr, drawingOptions)
        createDrawingFromTemplate = drawing

    End Function
    Public Function listViews(drawing As IpfcDrawing) As IpfcView2Ds


        view2Ds = drawing.List2DViews
        For i = 0 To view2Ds.Count - 1

            view2D = view2Ds.Item(i)
            viewName = view2D.Name
            sheetNo = view2D.GetSheetNumber
            solid = view2D.GetModel
            solidDesc = solid.Descr

            outline = view2D.Outline
            Scale = view2D.Scale
            viewdisplay = view2D.Display
            displayStyle = "unknown"

            Select Case viewdisplay.Style
                Case EpfcDisplayStyle.EpfcDISPSTYLE_DEFAULT
                    displayStyle = "default"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_HIDDEN_LINE
                    displayStyle = "hidden line"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_NO_HIDDEN
                    displayStyle = "no hidden"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_SHADED
                    displayStyle = "shaded"
                Case EpfcDisplayStyle.EpfcDISPSTYLE_WIREFRAME
                    displayStyle = "wireframe"
            End Select

        Next
        Return view2Ds
    End Function
    Public Function Hd(a) As Double
        Return a * PI / 180   ' 函数具有返回值

    End Function
    Public Function 方向阵列(feats As IpfcModelItems， j#)

        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                            "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_dir`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dir_dir2` `0`;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dir_dir2` ``;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dir_dir1` `0`;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dir_dir1` ``;" +
                            "~ Activate `main_dlg_cur` `maindashInst0.ui_pat_dir_1_flip`;" +
                            "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")

        'AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")

        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_dir_1_flip`;")
        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

    End Function
    Public Sub 阵列(compItem_1 As IpfcModelItem, model As IpfcModel, paramValue$)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                            "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                            "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                            "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                            "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `" + paramValue + "`;" +
                            "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `" + paramValue + "`;" +
                            "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst`;" +
                             "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()
        RegenerateModel(model)
    End Sub
    Public Sub 选择轴()

        For i = 0 To 100
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + i.ToString + "`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
        Next

    End Sub
    Public Sub 标准键数据(轴直径 As Integer)

        If 6 < 轴直径 And 轴直径 <= 8 Then
            B = 2
            T1 = 1.2
            T2 = 1.0
        ElseIf 8 < 轴直径 And 轴直径 <= 10 Then
            B = 3
            T1 = 1.8
            T2 = 1.4
        ElseIf 10 < 轴直径 And 轴直径 <= 12 Then
            B = 4
            T1 = 2.5
            T2 = 1.8
        ElseIf 12 < 轴直径 And 轴直径 <= 17 Then
            B = 5
            T1 = 3
            T2 = 2.3
        ElseIf 17 < 轴直径 And 轴直径 <= 22 Then
            B = 6
            T1 = 3.5
            T2 = 2.8
        ElseIf 22 < 轴直径 And 轴直径 <= 30 Then
            B = 8
            T1 = 4
            T2 = 3.3
        ElseIf 30 < 轴直径 And 轴直径 <= 38 Then
            B = 10
            T1 = 5
            T2 = 3.3
        ElseIf 38 < 轴直径 And 轴直径 <= 44 Then
            B = 12
            T1 = 5
            T2 = 3.3
        ElseIf 44 < 轴直径 And 轴直径 <= 50 Then
            B = 14
            T1 = 5.5
            T2 = 3.8
        ElseIf 50 < 轴直径 And 轴直径 <= 58 Then
            B = 16
            T1 = 6
            T2 = 4.3
        ElseIf 58 < 轴直径 And 轴直径 <= 65 Then
            B = 18
            T1 = 7
            T2 = 4.4
        ElseIf 65 < 轴直径 And 轴直径 <= 75 Then
            B = 20
            T1 = 7.5
            T2 = 4.9
        ElseIf 75 < 轴直径 And 轴直径 <= 85 Then
            B = 22
            T1 = 9
            T2 = 5.4
        ElseIf 85 < 轴直径 And 轴直径 <= 95 Then
            B = 25
            T1 = 9
            T2 = 5.4
        ElseIf 95 < 轴直径 And 轴直径 <= 110 Then
            B = 28
            T1 = 10
            T2 = 6.4
        ElseIf 110 < 轴直径 And 轴直径 <= 130 Then
            B = 32
            T1 = 11
            T2 = 7.4
        ElseIf 130 < 轴直径 And 轴直径 <= 150 Then
            B = 36
            T1 = 12
            T2 = 8.4
        ElseIf 150 < 轴直径 And 轴直径 <= 170 Then
            B = 40
            T1 = 13
            T2 = 9.4
        ElseIf 170 < 轴直径 And 轴直径 <= 200 Then
            B = 45
            T1 = 15
            T2 = 10.4
        ElseIf 200 < 轴直径 And 轴直径 <= 230 Then
            B = 50
            T1 = 17
            T2 = 11.4
        ElseIf 230 < 轴直径 And 轴直径 <= 260 Then
            B = 56
            T1 = 20
            T2 = 12.4
        ElseIf 260 < 轴直径 And 轴直径 <= 290 Then
            B = 63
            T1 = 20
            T2 = 12.4
        ElseIf 290 < 轴直径 And 轴直径 <= 330 Then
            B = 70
            T1 = 22
            T2 = 14.4
        ElseIf 330 < 轴直径 And 轴直径 <= 380 Then
            B = 80
            T1 = 25
            T2 = 15.4
        ElseIf 380 < 轴直径 And 轴直径 <= 440 Then
            B = 90
            T1 = 28
            T2 = 17.4
        ElseIf 440 < 轴直径 And 轴直径 <= 500 Then
            B = 100
            T1 = 31
            T2 = 19.4
        End If



        'Return
    End Sub

    Public Function GetParamValue(model As IpfcModel, paramName$) As Double
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            DimensValue = iparamValue.DoubleValue
        End If
        Return DimensValue

    End Function
    Public Function GetParamValue2(model As IpfcModel, paramName$) As String
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            StringValue = iparamValue.StringValue
        End If
        Return StringValue

    End Function
    Public Function 轴阵列(feats As IpfcModelItems， j#)

        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        'AC.Session.RunMacro("0 ~ Command `ProCmdPattern` ; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_1_num` ``; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` `0`; ~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_axis_axis` ``; @PAUSE_FOR_SCREEN_PICK; ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_axis_angle_push`; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        '选择轴()
        'AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()
    End Function
    Public Function bom表() As ArrayList

        'm1 = openModel("asm", "C:\Users\liliangjie\Desktop\main_frame\280\2\5sb-034-280")
        'retrieveModel("frm", "C:\Users\liliangjie\Desktop\main_frame\280\2\asm_a0_sb")
        'retrieveModel("drw", "C:\Users\liliangjie\Desktop\main_frame\280\2\5sb-034-280")
        m1 = activateModel(read("code"), 2)
        ''‘’''msgbox(1)
        drawing = CType(drw, IpfcDrawing)
        Dim TablesInfo As String = ""
        Dim tableOwner As IpfcTableOwner
        Dim model As IpfcModel
        Dim tables As IpfcTables
        Dim table As IpfcTable
        Dim cellnote As IpfcModelItem
        Dim tablecell As IpfcTableCell
        Dim detailNoteItem As IpfcDetailNoteItem
        Dim detailNoteInstructions As IpfcDetailNoteInstructions
        Dim GetTableInfo As String = ""
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ' '‘’''msgbox(TablesInfo)
        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes.Add(GetTableInfo)
                    ' '‘’''msgbox(codes(i - 3))
                End If
                If n = 3 Then
                    conNames.Add(GetTableInfo) '
                    ''‘’''msgbox(conNames(i - 3))
                End If
                If n = 4 Then
                    numbers.Add(GetTableInfo)
                    ''‘’''msgbox(numbers(i - 3))
                End If
                If n = 5 Then
                    materials.Add(GetTableInfo)
                    ''‘’''msgbox(materials(i - 3))
                End If
                If n = 6 Then
                    sin_weights.Add(GetTableInfo)
                    ''‘’''msgbox(sin_weights(i - 3))
                End If
                If n = 7 Then
                    con_weights.Add(GetTableInfo)
                    ' '‘’''msgbox(con_weights(i - 3))
                End If
                If n = 8 Then
                    remarks.Add(GetTableInfo)
                    ''‘’''msgbox(remarks(i - 3))
                End If
            Next
        Next
        boms.Add(codes)
        boms.Add(conNames)
        boms.Add(numbers)
        boms.Add(materials)
        boms.Add(sin_weights)
        boms.Add(con_weights)
        boms.Add(remarks)
        Return boms

    End Function
    Public Sub 转动视图(m1 As IpfcModel, transfromAxis$, tranformAngle#)
        If transfromAxis = "X" Or transfromAxis = "x" Then
            CType(m1, IpfcViewOwner).GetCurrentView.Rotate(0, tranformAngle)
        ElseIf transfromAxis = "Y" Or transfromAxis = "y" Then
            CType(m1, IpfcViewOwner).GetCurrentView.Rotate(1, tranformAngle)
        ElseIf transfromAxis = "Z" Or transfromAxis = "z" Then
            CType(m1, IpfcViewOwner).GetCurrentView.Rotate(2, tranformAngle)
        End If
        AC.Session.CurrentWindow.Refresh()
        AC.Session.CurrentWindow.Repaint()
    End Sub
    Public Sub ExportJpg(path$, name$)

        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_View_control_btn` 1;\")
        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `View:casc340798662`;\")
        AC.Session.RunMacro("8 ~ Close `main_dlg_cur` `View:casc340798662`;\")
        AC.Session.RunMacro("8 ~ Command `ProCmdNamedViewsGalSelect`  `Standard Orientation`;")

        Dim currentwindow As IpfcWindow
        Dim jpegoption As IpfcJPEGImageExportInstructions
        currentwindow = AC.Session.CurrentWindow
        '设置导出jpg文件的宽度和高度，这里设置为当前打开窗体可视面积的宽和高对应的比例
        jpegoption = (New CCpfcJPEGImageExportInstructions).Create(currentwindow.GraphicsAreaWidth * 10, currentwindow.GraphicsAreaHeight * 10)
        '设置导出jpg文件的dpi
        jpegoption.DotsPerInch = EpfcDotsPerInch.EpfcRASTERDPI_600
        '设置导出jpg文件的像素
        jpegoption.ImageDepth = EpfcRasterDepth.EpfcRASTERDEPTH_24
        '导出jpg
        currentwindow.ExportRasterImage(path + "\\image\\" + name + ".jpg", jpegoption)
    End Sub
    Public Sub ExportJpg_New(path$, name$)


        Dim currentwindow As IpfcWindow
        Dim jpegoption As IpfcJPEGImageExportInstructions
        currentwindow = AC.Session.CurrentWindow
        '设置导出jpg文件的宽度和高度，这里设置为当前打开窗体可视面积的宽和高对应的比例
        jpegoption = (New CCpfcJPEGImageExportInstructions).Create(currentwindow.GraphicsAreaWidth * 10, currentwindow.GraphicsAreaHeight * 10)
        '设置导出jpg文件的dpi
        jpegoption.DotsPerInch = EpfcDotsPerInch.EpfcRASTERDPI_600
        '设置导出jpg文件的像素
        jpegoption.ImageDepth = EpfcRasterDepth.EpfcRASTERDEPTH_24
        '导出jpg
        currentwindow.ExportRasterImage(path + "\\image\\" + name + ".jpg", jpegoption)
    End Sub
    Public Sub deleteFeature_new(model As IpfcModel, id#)

        s1 = CType(model, IpfcSolid)
        feat = model.GetFeatureById(id)
        DeleteOperation = feat.CreateDeleteOp()
        DeleteOperation.Clip = True
        DeleteOperation.AllowGroupMembers = True  '是否删除该特征后的所有选项，本例设置为真。其余的删除选项请查看帮助文档。
        DeleteOperation.AllowChildGroupMembers = True
        DeleteOperation.KeepEmbeddedDatums = True

        FeatureOperations.Append(DeleteOperation) '生产删除操作的重生选项

        regenInstructions = (New CCpfcRegenInstructions).Create(True, True, Nothing)
        regenInstructions.UpdateInstances = False ' //是否更新内存

        s1.ExecuteFeatureOps(FeatureOperations, regenInstructions) 'regenInstructions是可选选项，也可以直接设置为Nothing
        FeatureOperations.Clear()
    End Sub
    Public Sub deleteFeature(model As IpfcModel, id#)

        s1 = CType(model, IpfcSolid)
        feat = model.GetFeatureById(id)
        DeleteOperation = feat.CreateDeleteOp()
        DeleteOperation.Clip = True  '是否删除该特征后的所有选项，本例设置为真。其余的删除选项请查看帮助文档。

        FeatureOperations.Append(DeleteOperation) '生产删除操作的重生选项

        regenInstructions = (New CCpfcRegenInstructions).Create(True, True, Nothing)
        regenInstructions.UpdateInstances = False ' //是否更新内存

        s1.ExecuteFeatureOps(FeatureOperations, regenInstructions) 'regenInstructions是可选选项，也可以直接设置为Nothing
        FeatureOperations.Clear()
    End Sub
    ''' <summary>
    ''' 接线盒改名
    ''' </summary>
    ''' <param name="path$"></param>改名后接线盒保存地址
    ''' <param name="dress$"></param>改名前接线盒所在地址
    ''' <param name="name$"></param>接线盒名称
    Public Sub box_改名(path$, part_path$, name$)
        Dim requirements As String()
        Dim path1 As String
        path1 = path + "\parts"
        Dim lis1, lis2, list3 As String() ', list_1， list_2, list_3
        Dim string_1, string_2, string_3 As Istringseq
        Dim str, str2, str3, str_1, str_2, str_3, str_three, str_address As String
        Dim number1 As Integer = 0
        Dim j As Integer = 0
        ' openModel("asm", dress)
        list3 = part_path.Split("\")
        str_1 = list3(0) + "\" + list3(1) + "\" + list3(2) + "\" + list3(3) + "\" + list3(4)
        m8 = activateModel(Left(list3(5), 11), 0)
        ' retrieveModel("drw", str_1 + "\" + Left(list3(6), 11))
        'string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1)
        string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1) '"E:\works\creo\box_assembly\180"
        string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, str_1)
        For Each str2 In string_2
            lis2 = str2.Split("\")
            str_2 = Left(lis2.Last, 11)
            str_three = Left(lis2.Last, 3)
            If str_three <> "3sb" Then
                If str_2 = "8sb-150-007" Then
                    m2 = activateModel(str_2, 1)
                    m2.Rename(name + "-0" + j.ToString(), True)
                Else
                    m5 = retrieveModel("drw", str2)
                    m4 = Drwing_Rename(str_2, name + "-0" + j.ToString())
                    drawing = CType(m4, IpfcDrawing)
                    smodel = drawing.Descr
                    smodel.Path = path1
                    drawing.Backup(smodel)
                End If
            ElseIf str_three = "3sb" Then
                m2 = retrieveModel("drw", str2)
                m2 = activateModel（str2, 0)
                m5 = activateModel(str2, 2)
                添加图幅注释(m5， read("T_MOTOR"))
                m5.Rename(name, True)
                m2.Rename(name, True)
                closeWindow(m5)
                closeWindow(m2)
            End If
            j += 1
        Next
        m2 = activateModel(name, 2) 'read("junction_box_name")
        drawing = CType(m2, IpfcDrawing)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        mxs = 明细表_new(m2)
        closeWindow(m2)
        导入表(path, name)
        If read("filepath") <> "" Then
            '生成文件夹(read("filepath"), read("CODE"))
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            '装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

    End Sub
    Public Sub Box_spilt_assembly(localhost$, tabledase$, ID#, path$, imageName$)

        Dim requirements As String()
        Dim path1 As String
        path1 = path + "\\parts"
        Dim lis1, lis2, list3, list_1， list_2, list_3 As String()
        Dim string_1, string_2, string_3 As Istringseq
        Dim str, str2, str3, str_1, str_2, str_3, str_three, str_address As String
        Dim number1 As Integer = 0
        mysql_new(localhost$, tabledase$, ID#)
        openModel("asm", "E:\works\creo\box_spilt_assembly\ly_box_asm.asm")
        m1 = activateModel("ly_box_asm", 0)
        string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\box_spilt_assembly")
        string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\box_spilt_assembly")
        string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\box_spilt_assembly")
        m1 = activateModel("ly_box_asm", 0)
        If read("NAME") <> "" Then
            ' setParamValue(m1, "PART_NAME", read("NAME"), "字符串")
            'End If
            'If read("MATERIAL") <> "" Then
            setParamValue(m1, "MATERIAL", read("MATERIAL"), "字符串")
        End If
        If read("SOURCE") <> "" Then
            setParamValue(m1, "SOURCE", read("SOURCE"), "字符串")
        End If
        If read("REMARK") <> "" Then
            setParamValue(m1, "REMARK", read("REMARK"), "字符串")
        End If
        If read("SHEET_SIZE") <> "" Then
            setParamValue(m1, "SHEET_SIZE", read("SHEET_SIZE"), "字符串")
        End If
        If read("DESCRIPTION") <> "" Then
            setParamValue(m1, "DESCRIPTION", read("DESCRIPTION"), "字符串")
        End If
        If read("OPT_LEVEL") <> "" Then
            setParamValue(m1, "OPT_LEVEL", read("OPT_LEVEL"), "字符串")
        End If
        If read("MARK") <> "" Then
            setParamValue(m1, "MARK", read("MARK"), "字符串")
        End If
        If read("MARK_A") <> "" Then
            setParamValue(m1, "MARK_A", read("MARK_A"), "字符串")
        End If
        If read("MARK_B") <> "" Then
            setParamValue(m1, "MARK_B", read("MARK_B"), "字符串")
        End If
        If read("IMPORTANCE") <> "" Then
            setParamValue(m1, "IMPORTANCE", read("IMPORTANCE"), "字符串")
        End If
        If read("MATERIAL_CODE") <> "" Then
            setParamValue(m1, "MATERIAL_CODE", read("MATERIAL_CODE"), "字符串")
        End If
        If read("MT_LEVEL") <> "" Then
            setParamValue(m1, "MT_LEVEL", read("MT_LEVEL"), "字符串")
        End If
        If read("VERSION") <> "" Then
            setParamValue(m1, "VERSION", read("VERSION"), "字符串")
        End If
        'For Each str In string_1
        '    Threading.Thread.Sleep(1000)
        '    m5 = retrieveModel("prt", str)
        '    lis1 = str.Split("\")
        '    str_1 = Left(lis1.Last, 11)
        '    m5 = activateModel(str_1, 1)
        '    closeWindow（m5）
        'Next
        For Each str3 In string_3
            m6 = retrieveModel("frm", str3)
            list3 = str3.Split("\")
            str_3 = Left(list3.Last, 9)
        Next
        For Each str2 In string_2
            lis2 = str2.Split("\")
            str_2 = Left(lis2.Last, 11)
            str_three = Left(lis2.Last, 3)
            If str_three <> "asm" Then
                m6 = retrieveModel("drw", str2)
                'm6 = activate(str_2, 2)
                'closeWindow（m6）
            End If
        Next
        ''partValue(m1)
        RegenerateModel(m1)
        m2 = activateModel("LY_BOX_F", 1)
        setParamValue(m2, "d4", read("edge_length"), "浮点型") '边的厚度
        setParamValue(m2, "d10", read("thickness1"), "浮点型") '厚度
        setParamValue(m2, "d6", read("f_length"), "浮点型") '前侧板长度 
        setParamValue(m2, "d5", read("f_width"), "浮点型") '前侧板宽
        setParamValue(m2, "d7", read("f_radius"), "浮点型") '前侧板圆弧
        setParamValue(m2, "d73", read("f_hole_distance"), "浮点型") '底下两孔间距
        setParamValue(m2, "d38", read("f_hole_diameter"), "浮点型") '孔径
        setParamValue(m2, "d105", read("f_hole_location"), "浮点型") '孔离圆弧顶点距离
        setParamValue(m2, "d8", read("f_length") - read("fool_length"), "浮点型") '底脚宽
        setParamValue(m2, "d44", read("side_con_hole_location_y"), "浮点型") '离顶距离
        setParamValue(m2, "d84", read("edge_length") - read("side_con_hole_location_x"), "浮点型") '离面距离
        setParamValue(m2, "p48", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        setParamValue(m2, "d46", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        setParamValue(m2, "d59", (read("f_length") - read("top_con_hole_array_distance") * (read("top_con_hole_number") - 1)) / 2, "浮点型") '离侧边距离
        setParamValue(m2, "p63", read("top_con_hole_number"), "浮点型") '顶_连接孔个数
        setParamValue(m2, "d61", read("top_con_hole_array_distance"), "浮点型") '顶_阵列距离
        setParamValue(m2, "d106", read("edge_length") / 2, "浮点型")
        'asmItem_1 = m2.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d58")
        closeWindow(m2)
        m3 = activateModel("LY_BOX_l", 1)
        setParamValue(m3, "d4", read("thickness2"), "浮点型") '厚度
        setParamValue(m3, "d6", read("s_length"), "浮点型") '侧板长度
        setParamValue(m3, "d5", read("s_width"), "浮点型") '侧板宽
        setParamValue(m3, "d21", read("under_flange_width"), "浮点型") '下凸缘宽
        setParamValue(m3, "d17", read("up_flange_width"), "浮点型") '上凸缘宽
        setParamValue(m3, "d19", read("s_length") / 2, "浮点型") '上凸缘长  
        setParamValue(m3, "d9", read("side_con_hole_location_y"), "浮点型") '离顶距离
        setParamValue(m3, "d11", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型") '离面距离
        setParamValue(m3, "p15", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        setParamValue(m3, "d13", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        '形状
        'setParamValue(m3, "d26", read("graph_width"), "浮点型") '方形宽
        'setParamValue(m3, "d25", read("graph_length"), "浮点型") '方形长  
        'setParamValue(m3, "d27", read("graph_location_y"), "浮点型") '离顶距离
        'setParamValue(m3, "d28", read("graph_chamfer"), "浮点型") '倒角半径
        closeWindow(m3)
        m4 = activateModel("LY_BOX_b", 1)
        setParamValue(m4, "d4", read("edge_length"), "浮点型") '侧板边的宽度
        setParamValue(m4, "d5", read("f_length"), "浮点型") '前侧板长度
        setParamValue(m4, "d6", read("f_width"), "浮点型") '前侧板宽
        setParamValue(m4, "d7", read("f_radius"), "浮点型") '前侧板圆弧
        setParamValue(m4, "d10", read("thickness1"), "浮点型") '壳厚度
        setParamValue(m4, "d41", read("f_hole_distance"), "浮点型") '底下两孔间距
        setParamValue(m4, "d12", read("f_hole_diameter"), "浮点型") '孔径
        setParamValue(m4, "d42", read("f_hole_location"), "浮点型") '孔离圆弧顶点距离
        setParamValue(m4, "d8", read("f_length") - read("fool_length"), "浮点型") '底脚宽
        setParamValue(m4, "d25", read("side_con_hole_location_y"), "浮点型") '离顶距离
        setParamValue(m4, "d24", read("side_con_hole_location_x"), "浮点型") '离面距离
        setParamValue(m4, "p22", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        setParamValue(m4, "d20", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        setParamValue(m4, "d35", (read("f_length") - (read("top_con_hole_number") - 1) * read("top_con_hole_array_distance")) / 2, "浮点型") '离侧边距离
        setParamValue(m4, "p39", read("top_con_hole_number"), "浮点型") '顶_连接孔个数
        setParamValue(m4, "d37", read("top_con_hole_array_distance"), "浮点型") '顶_阵列距离
        setParamValue(m4, "d43", read("edge_length") / 2, "浮点型") '顶_连接孔中点
        closeWindow(m4)
        m5 = activateModel("LY_BOX_r", 1)
        setParamValue(m5, "d4", read("thickness2"), "浮点型") '厚度
        setParamValue(m5, "d6", read("s_length"), "浮点型") '侧板长度
        setParamValue(m5, "d5", read("s_width"), "浮点型") '侧板宽
        setParamValue(m5, "d21", read("under_flange_width"), "浮点型") '下凸缘宽
        setParamValue(m5, "d17", read("up_flange_width"), "浮点型") '上凸缘宽
        setParamValue(m5, "d19", read("s_length") / 2, "浮点型") '上凸缘长
        setParamValue(m5, "d9", read("side_con_hole_location_y"), "浮点型") '离顶距离
        setParamValue(m5, "d11", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型") '离面距离
        setParamValue(m5, "p15", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        setParamValue(m5, "d13", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        '形状
        setParamValue(m5, "d26", read("graph_width"), "浮点型") '方形宽
        setParamValue(m5, "d25", read("graph_length"), "浮点型") '方形长
        setParamValue(m5, "d27", read("graph_location_y"), "浮点型") '离顶距离
        setParamValue(m5, "d28", read("graph_chamfer"), "浮点型") '倒角半径
        closeWindow(m5)
        m6 = activateModel("PLATE_COVER", 1)
        setParamValue(m6, "d4", read("cover_edge_leng"), "浮点型") '边长
        setParamValue(m6, "d6", read("cover_width"), "浮点型") '侧板长度
        setParamValue(m6, "d5", read("cover_length"), "浮点型") '侧板宽
        setParamValue(m6, "d22", (read("s_length") - read("edge_length")) / 2, "浮点型") '孔位置
        setParamValue(m6, "d21", ((read("top_con_hole_number") - 1) * read("top_con_hole_array_distance")) / 2, "浮点型") '孔位置
        setParamValue(m6, "d17", read("top_con_hole_array_distance"), "浮点型")
        setParamValue(m6, "p19", read("top_con_hole_number"), "浮点型")
        setParamValue（m6, "d8", read("cap_tickness"), "浮点型"）
        closeWindow(m6)

        m1 = activateModel("ly_box_asm", 0)
        setParamValue(m1, "d87", (read("cover_length") - 2 * read("thickness2") - read("f_length")) / 2, "浮点型")
        setParamValue(m1, "d86", (read("cover_width") - read("s_length")) / 2, "浮点型")
        ' setParamValue(m1, "d93", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型")
        'setParamValue(m1, "d92", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        'setParamValue(m1, "p94", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        'setParamValue(m1, "d121", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型")
        'setParamValue(m1, "d122", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        'setParamValue(m1, "p124", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        'setParamValue(m1, "d100", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型")
        'setParamValue(m1, "d99", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        'setParamValue(m1, "p101", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        'setParamValue(m1, "d129", read("s_length") - 2 * read("side_con_hole_location_x"), "浮点型")
        'setParamValue(m1, "d130", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        'setParamValue(m1, "p132", read("side_con_hole_number"), "浮点型") '侧_连接孔个数
        'setParamValue(m1, "d104", (read("s_length") - read("edge_length")), "浮点型")
        'setParamValue(m1, "d103", read("top_con_hole_array_distance"), "浮点型")
        'setParamValue(m1, "p105", read("top_con_hole_number"), "浮点型"
        ' setParamValue(m1, "d163", read("side_con_hole_array_distance"), "浮点型") '侧_阵列距离
        'setParamValue(m1, "p165", read("side_con_hole_number"), "浮点型") '侧_连接孔个数



        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":")
        Threading.Thread.Sleep(1000)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        m1.CommonName = "接线盒"
        RegenerateModel(m1)
        m1.Rename(read("CODE"), True)

        '''msgbox("开始")
        m2 = Drwing_Rename("ly_box_f", read("CODE") + "_01")
        m2 = activateModel(read("CODE") + "_01", 2)
        drawing = CType(m2, IpfcDrawing)
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 30, (Val(Scale_drw(0)) / （Val(Scale_drw(1) + 1).ToString）)）
        'modelItems = listModelItem_有弹窗(m2, "EpfcModelItemType_nil")
        note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE") + "_01", 1), "DIMENSION", "d58")
        修改绘制尺寸值_new(note_Item_1, read("top_con_hole_number") + 2 * read("side_con_hole_number"))
        Threading.Thread.Sleep(1000)
        smodel.Path = path1
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        m4 = Drwing_Rename("ly_box_b", read("CODE") + "_03")
        m4 = activateModel(read("CODE") + "_03", 2)
        drawing = CType(m4, IpfcDrawing)
        modelItems = listModelItem(m4, "DTL_NOTE")
        修改注释(modelItems, 34, (Val(Scale_drw(0)) / （Val(Scale_drw(1) + 1).ToString）)） '34
        note_Item_2 = listModelItem_1(AC.Session.GetModel(read("CODE") + "_03", 1), "DIMENSION", "d34")
        修改绘制尺寸值_new(note_Item_2, read("top_con_hole_number") + 2 * read("side_con_hole_number"))
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        Threading.Thread.Sleep(1000)
        smodel.Path = path1
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m4)

        m3 = Drwing_Rename("ly_box_l", read("CODE") + "_04")
        m3 = activateModel(read("CODE") + "_04", 2)
        drawing = CType(m3, IpfcDrawing)
        view2Ds = listViews(drawing)
        modelItems = listModelItem(m3, "DTL_NOTE")
        修改注释(modelItems, 30, (Val(Scale_drw(0)) / （Val(Scale_drw(1) + 1).ToString）)）
        note_Item_3 = listModelItem_1(AC.Session.GetModel(read("CODE") + "_04", 1), "DIMENSION", "d10")
        修改绘制尺寸值_new(note_Item_3, 2 * read("side_con_hole_number"))
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        Threading.Thread.Sleep(1000)
        smodel.Path = path1
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m3)
        m5 = Drwing_Rename("ly_box_r", read("CODE") + "_02")
        m5 = activateModel(read("CODE") + "_02", 2)
        drawing = CType(m5, IpfcDrawing)
        modelItems = listModelItem(m5, "DTL_NOTE")
        修改注释(modelItems, 30, (Val(Scale_drw(0)) / （Val(Scale_drw(1) + 1).ToString）)）
        note_Item_4 = listModelItem_1(AC.Session.GetModel(read("CODE") + "_02", 1), "DIMENSION", "d10")
        修改绘制尺寸值_new(note_Item_4, 2 * read("side_con_hole_number"))
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        Threading.Thread.Sleep(1000)
        smodel.Path = path1
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m5)
        m6 = Drwing_Rename("plate_cover", read("CODE") + "_05")
        m6 = activateModel(read("CODE") + "_05", 2)
        drawing = CType(m6, IpfcDrawing)
        modelItems = listModelItem(m6, "DTL_NOTE")
        修改注释(modelItems, 30, (Val(Scale_drw(0)) / （Val(Scale_drw(1) + 1).ToString + 1）)）
        note_Item_5 = listModelItem_1(AC.Session.GetModel(read("CODE") + "_05", 1), "DIMENSION", "d10")
        修改绘制尺寸值_new(note_Item_5, 2 * read("top_con_hole_number"))
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        Threading.Thread.Sleep(1000)
        smodel.Path = path1
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m6)
        RegenerateModel(m1)
        'RegenerateModel(AC.Session.GetModel(read("CODE"), 0))
        m3 = activateModel("ly_box_asm", 2)
        m3.Rename(read("CODE"), True)
        '''msgbox("调试成功")
        drawing = CType(m3, IpfcDrawing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符

        If REQUIREMENT.Length = 0 Then
            REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；"， ";")

        End If
        零件技术要求(drawing, REQUIREMENT, {400, 250})
        view2Ds = listViews(drawing)

        'view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        modelItems = listModelItem(m3, "DTL_NOTE")
        修改注释(modelItems, 31, (Val(Scale_drw(0)) / Val(Scale_drw(1)).ToString)）

        'texts = read("T_MOTOR")
        添加图幅注释(m3， read("T_MOTOR"))
        '无引线注释(drawing, texts, 2, 188, 0, 0)
        'modelItems = listModelItem(m3, "DTL_NOTE")
        ' note_Item_1 = modelItems.Item(modelItems.Count - 1)
        ' 修改注释字体大小(modelItems, modelItems.Count - 1, 3.0)
        Reg_Csheet()
        smodel = drawing.Descr
        smodel.Path = path
        m3.Backup(smodel)

        m3 = activateModel(read("CODE"), 2)
        mxs = 明细表(m3)
        'tms = 图样目录表(path， read("code"))
        'tjys = 通借用表(path， read("code"))
        'If 是否外购(sources_mx) = True Then
        '    wgs = 外购表(path， read("code"))
        'End If
        'If 是否标准(sources_mx) = True Then
        '    bzs = 标准表(path， read("code"))
        'End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        Threading.Thread.Sleep(2000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo_stator_lamination(localhost$, tabledase$, ID#, path$, imageName$)

        numbers.Add(625) ' 625 拉伸7
        numbers.Add(699) ' 699 拉伸8
        numbers.Add(823) ' 823 拉伸10
        numbers.Add(550)
        numbers.Add(1240)
        numbers.Add(1190)
        numbers.Add(1143)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        ' 零件图
        If read("outer_diameter") <= 300 Then ' 180
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                ''numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)

                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181")
                    m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181")
                    m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181")
                    m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_180")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_180")
                    m1 = activateModel("8ly_660_180", 2)
                    m6 = activateModel("8ly_660_180", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181")
                    m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181")
                    m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_181")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_181").
                        m1 = activateModel("8ly_660_181", 2)
                    m6 = activateModel("8ly_660_181", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\180\8ly_660_182")
                    retrieveModel("frm", "E:\works\creo\sl\180\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\180\8ly_660_182")
                    m1 = activateModel("8ly_660_182", 2)
                    m6 = activateModel("8ly_660_182", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
        ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then '200
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                'numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201")
                    m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201")
                    m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201")
                    m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_200")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_200")
                    m1 = activateModel("8ly_660_200", 2)
                    m6 = activateModel("8ly_660_200", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201")
                    m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201")
                    m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_201")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_201").
                        m1 = activateModel("8ly_660_201", 2)
                    m6 = activateModel("8ly_660_201", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\200\8ly_660_202")
                    retrieveModel("frm", "E:\works\creo\sl\200\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\200\8ly_660_202")
                    m1 = activateModel("8ly_660_202", 2)
                    m6 = activateModel("8ly_660_202", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
        ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then '250
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                'numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_250")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_250")
                    m1 = activateModel("8ly_660_250", 2)
                    m6 = activateModel("8ly_660_250", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_251")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_251")
                    m1 = activateModel("8ly_660_251", 2)
                    m6 = activateModel("8ly_660_251", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\250\8ly_660_252")
                    retrieveModel("frm", "E:\works\creo\sl\250\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\250\8ly_660_252")
                    m1 = activateModel("8ly_660_252", 2)
                    m6 = activateModel("8ly_660_252", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
        ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then '280
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                'numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281")
                    m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281")
                    m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281")
                    m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_280")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_280")
                    m1 = activateModel("8ly_660_280", 2)
                    m6 = activateModel("8ly_660_280", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281")
                    m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281")
                    m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_281")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_281").
                        m1 = activateModel("8ly_660_281", 2)
                    m6 = activateModel("8ly_660_281", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\280\8ly_660_282")
                    retrieveModel("frm", "E:\works\creo\sl\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\280\8ly_660_282")
                    m1 = activateModel("8ly_660_282", 2)
                    m6 = activateModel("8ly_660_282", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
            Dimension2 = 根据选中尺寸(m6, "d135")
        ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then ' 355
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                'numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356")
                    m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356")
                    m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356")
                    m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_355")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_355")
                    m1 = activateModel("8ly_660_355", 2)
                    m6 = activateModel("8ly_660_355", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356")
                    m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356")
                    m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_356")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_356").
                        m1 = activateModel("8ly_660_356", 2)
                    m6 = activateModel("8ly_660_356", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\355\8ly_660_357")
                    retrieveModel("frm", "E:\works\creo\sl\355\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\355\8ly_660_357")
                    m1 = activateModel("8ly_660_357", 2)
                    m6 = activateModel("8ly_660_357", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
        ElseIf read("outer_diameter") > 620 Then ' 400
            If read("piece") = 1 Then '1/6的定子冲片
                numbers.Remove(1143)
                numbers.Remove(1190)
                numbers.Remove(1240)
                'numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401")
                    m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401")
                    m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401")
                    m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    'setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                    setParamValue(m6, "d111", read("cut_clearance"), "浮点型") '切削间隙
                    setParamValue(m6, "d100", read("connect_tradius"), "浮点型") '定位半径
                    setParamValue(m6, "d101", read("T_long_side"), "浮点型") '梯形顶长
                    setParamValue(m6, "d103", read("T_high"), "浮点型") '梯形高
                    setParamValue(m6, "d104", read("T_short_side"), "浮点型") '梯形底长
                End If
            Else
                numbers.Remove(550)
                If read("slot_type") = 1 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 1 And read("sl_type") = 0 Then

                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 1 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_400")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_400")
                    m1 = activateModel("8ly_660_400", 2)
                    m6 = activateModel("8ly_660_400", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d118", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
                    setParamValue(m6, "d119", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d120", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d122", read("slot_diameter"), "浮点型") '槽圆角半径
                    setParamValue(m6, "d124", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d121", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d123", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p138", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                ElseIf read("slot_type") = 2 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401")
                    m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 2 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401")
                    m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度

                ElseIf read("slot_type") = 2 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_401")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_401").
                        m1 = activateModel("8ly_660_401", 2)
                    m6 = activateModel("8ly_660_401", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d144", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d153", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d145", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d146", read("slot_high_shoulder"), "浮点型") '槽肩高
                    setParamValue(m6, "d149", read("slot_high_neck"), "浮点型") '槽颈高
                    setParamValue(m6, "p172", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 1 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 0 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    'numbers.Remove(699)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d57", read("sl_diameter"), "浮点型") '顶槽直径
                    'setParamValue(m6, "d56", "", "角度"， (read("sl_angle"))) '顶槽角度
                    'setParamValue(m6, "p61", read("sl_number"), "浮点型") '顶槽数
                    'setParamValue(m6, "d58", "", "角度"， (read("sl_p_angle"))) '顶槽阵列角度
                ElseIf read("slot_type") = 3 And read("sl_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\sl\400\8ly_660_402")
                    retrieveModel("frm", "E:\works\creo\sl\400\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\sl\400\8ly_660_402")
                    m1 = activateModel("8ly_660_402", 2)
                    m6 = activateModel("8ly_660_402", 1)
                    Threading.Thread.Sleep(1000)
                    selBuffer = AC.Session.CurrentSelectionBuffer
                    selBuffer.Clear()
                    partValue(m6)
                    RegenerateModel(m6)
                    m6.CommonName = "定子冲片"
                    numbers.Remove(625)
                    If read("vent_type") = 1 Then
                        numbers.Remove(823)
                        setParamValue(m6, "d69", read("vent_p_diameter"), "浮点型") '中间槽定位直径
                        setParamValue(m6, "d70", read("vent_diameter"), "浮点型") '中间槽直径
                        setParamValue(m6, "d68", "", "角度", (read("vent_angle"))) '中间槽角度
                        setParamValue(m6, "p74", read("vent_number"), "浮点型") '中间槽数
                    End If
                    For i = 0 To numbers.Count - 1
                        deleteFeature(m6, numbers(i))
                    Next
                    setParamValue(m6, "d5", read("outer_diameter"), "浮点型") '外径
                    setParamValue(m6, "d4", read("thickness"), "浮点型") '厚度
                    setParamValue(m6, "d7", read("inside_diameter"), "浮点型") '内径
                    'setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
                    'setParamValue(m6, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
                    setParamValue(m6, "d177", read("slot_wide_mouth"), "浮点型") '槽口宽
                    setParamValue(m6, "d181", read("slot_wide_neck"), "浮点型") '槽肩宽
                    setParamValue(m6, "d179", "", "角度", (read("slot_neck_angle"))) '槽肩角度
                    setParamValue(m6, "d183", read("slot_r_corners"), "浮点型") '槽圆角
                    setParamValue(m6, "d178", read("slot_high_mouth"), "浮点型") '槽口高
                    setParamValue(m6, "d182", read("slot_high_shoulder"), "浮点型") '槽肩高
                    'setParamValue(m6, "d206", read("slot_high_neck"), "浮点型") '槽半径
                    setParamValue(m6, "p199", read("slot_number"), "浮点型") '槽数
                    setParamValue(m6, "d44", "", "角度"， (read("tag_angle"))) '标记与Y轴偏角
                    'setParamValue(m6, "d45", read("tag_diameter"), "浮点型") '标记直径
                    'setParamValue(m6, "d95", "", "角度", (read("sl_high_angle"))) '顶槽高角度
                    setParamValue(m6, "d94", read("sl_wide"), "浮点型") '顶槽宽
                    setParamValue(m6, "d49", read("sl_y_high"), "浮点型") '顶槽高
                    setParamValue(m6, "d47", "", "角度", (read("sl_angle"))) '顶槽角度
                    setParamValue(m6, "d50", read("sl_p_angle"), "浮点型") '顶槽阵列角度
                    setParamValue(m6, "p53", read("sl_number"), "浮点型") '顶槽数   
                End If
            End If
        End If
        setParamValue(m6, "MASS", read("mass"), "浮点型")
        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d5")
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension1 = CType(BaDimension, IpfcDimension)
        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d7")
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension = CType(BaDimension, IpfcDimension)

        numbers.Clear()
        Dim str_name = m6.FullName
        m6.Rename(read("CODE"), True)
        RegenerateModel(m6)
        ExportJpg(path, imageName)
        closeWindow(m6)
        m1 = activateModel(str_name, 2)

        drawing = CType(m1, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Dim aaa As IpfcModelItem
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        'If read("slot_type") = 1 Then
        '    view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'End If
        'view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        'feats = listModelItem(m1, "DIMENSION")
        modelItems = listModelItem(m1, "DTL_NOTE")
        If read("piece") = 0 Then
            If read("outer_diameter") <= 300 Then
                'view2Ds.Item(0).Scale = 1 / 1.5 102 111

                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
                'view2Ds.Item(0).Scale = 1 / 2
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
                'view2Ds.Item(0).Scale = 1 / 2.5
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))   ' 注 检索号 30疑似变35
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
                'view2Ds.Item(0).Scale = 1 / 2.5
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
                'view2Ds.Item(0).Scale = 1 / 3.5
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
                'view2Ds.Item(0).Scale = 1 / 4
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            ElseIf read("outer_diameter") > 720 And read("outer_diameter") <= 800 Then
                'view2Ds.Item(0).Scale = 1 / 4
                修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0), drawing.GetDimensionLocation(Dimension1).Item(1) - 50))
                drawing.SetDimensionLocation(Dimension, CreatePoint(drawing.GetDimensionLocation(Dimension).Item(0) + 200, drawing.GetDimensionLocation(Dimension).Item(1) + 30))
            End If
        Else
            '修改注释(modelItems, 33, Scale_drw(0) + "/" + Scale_drw(1))

            'aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
            '修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
        End If


        If read("outer_diameter") <= 300 Then
            'view2Ds.Item(0).Scale = 1 / 1.5 102 111
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_98")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_99")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If


        ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
            'view2Ds.Item(0).Scale = 1 / 2
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_98")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_99")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If
        ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
            'view2Ds.Item(0).Scale = 1 / 2.5
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_142")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_98")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_99")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If
        ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
            'view2Ds.Item(0).Scale = 1 / 2.5
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_100")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_101")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If
        ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
            'view2Ds.Item(0).Scale = 1 / 3.5
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_100")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_101")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If
        ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
            'view2Ds.Item(0).Scale = 1 / 4
            If read("slot_type") = 1 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_103")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 2 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_100")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            ElseIf read("slot_type") = 3 Then
                aaa = listModelItem_1(m1, "DTL_NOTE", "Note_101")
                修改注释_name(aaa, Scale_drw(0) + "/" + Scale_drw(1))
            End If

        End If





        If read("piece") = 0 Then
            'If read("slot_type") = 1 Then
            '    修改绘制尺寸值(feats， 2, read("slot_number"))
            'ElseIf read("slot_type") = 2 Then
            '    修改绘制尺寸值(feats， 2, read("slot_number"))
            'ElseIf read("slot_type") = 3 Then
            '修改绘制尺寸值(feats， 2, read("slot_number"))
            'End If
            'change_txt_note_text(feats, 42, （read("slot_number")）.ToString + "槽均布")
            移动视图("general", "view_1", 160, 155) ' general 一般性视图比如三视图及其转换而成的刨视图
            '移动视图("local", "view_24", 323, 145) 'local 局部视图

            'feats = listModelItem(m1, "DTL_NOTE")

            'change_txt_note_text(feats, 42, （read("slot_number")）.ToString + "槽均布")

            If read("slot_type") = 1 Then
                If read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_151")
                Else
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_112")
                End If

            ElseIf read("slot_type") = 2 Then
                If read("outer_diameter") <= 300 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                End If
            ElseIf read("slot_type") = 3 Then
                If read("outer_diameter") <= 300 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                End If

            End If
            修改注释2(aaa, （read("slot_number")）.ToString + "槽均布")
        Else
            'feats = listModelItem(m1, "DTL_NOTE")
            'If read("slot_type") = 1 Then
            '    修改绘制尺寸值(feats， 2, read("slot_number") / 6)
            'ElseIf read("slot_type") = 2 Then
            '    修改绘制尺寸值(feats， 2, read("slot_number") / 6)
            'ElseIf read("slot_type") = 3 Then
            '    修改绘制尺寸值(feats， 2, read("slot_number") / 6)
            'End If
            'change_txt_note_text(feats, 42, （read("slot_number") / 6）.ToString + "槽均布")


            If read("slot_type") = 1 Then
                If read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_151")
                Else
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_112")
                End If

            ElseIf read("slot_type") = 2 Then
                If read("outer_diameter") <= 300 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_107")
                ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_109")
                End If
            ElseIf read("slot_type") = 3 Then
                If read("outer_diameter") <= 300 Then ' 180
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_108")
                ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
                    aaa = listModelItem_1(m1, "DTL_NOTE", "Note_110")
                End If

            End If

            修改注释2(aaa, （read("slot_number") / 6）.ToString + "槽均布")



            AC.Session.RunMacro("~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_25 92 0 101 -1 -1`;;" +
                           "~ Command `ProCmdEditDelete`;")






        End If
        '插入有引线符号(drawing, compSelect_6， "D:\Proe_STD_JXTH\symbols\geom_tolerance\", "A", "A", "geom_base", 400, 600, 3.5)  待定 包括移动注释位置
        'feats = listModelItem_有弹窗(m1, "DTL_NOTE")  '39 41 
        'note_Item_1 = feats.Item(39)
        'note = CType(note_Item_1, IpfcDetailNoteItem)
        'position = (New CCpfcFreeAttachment).Create(CreatePoint(300, 300, 0))
        'note.SetFreeAttachment(position)
        ''‘’''msgbox(555)
        '修改注释内容(feats, 0， 0.08, "A")
        Dim asmItem_4, asmItem_5 As IpfcModelItem
        asmItem_4 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "add26")

        If read("vent_type") = 0 Then
            尺寸删除(asmItem_4)
        End If


        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})

        modelItems = listModelItem(m1, "DTL_NOTE")
        note_Item_1 = modelItems.Item(modelItems.Count - 1)

        添加图幅注释(m1, read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m1.Rename(read("CODE"), True)
        'm6.Rename(read("CODE"), True)
        'activateModel(m6.FileName, 1)
        'RegenerateModel(m6)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()

    End Sub
    Public Sub creo_stator_pressing_ring(localhost$, tabledase$, ID#, path$, imageName$)
        numbers.Add(110) ' 倒角1
        numbers.Add(131) ' 倒角2

        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        ' 零件图
        m1 = openModel("prt", "E:\works\creo\s_p_r\8ly_090_000")
        retrieveModel("frm", "E:\works\creo\s_p_r\part_a4_sb")
        retrieveModel("drw", "E:\works\creo\s_p_r\8ly_090_000")
        m1 = activateModel("8ly_090_000", 1)

        Threading.Thread.Sleep(1000)
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        partValue(m1)
        RegenerateModel(m1)
        If read("type") = 1 Then
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
        ElseIf read("type") = 2 Then
            numbers.Remove(110)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d8", read("chamfer_1"), "浮点型") '倒角1
        ElseIf read("type") = 3 Then
            numbers.Remove(110)
            numbers.Remove(131)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d8", read("chamfer_1"), "浮点型") '倒角1
            setParamValue(m1, "d9", read("chamfer_2"), "浮点型") '倒角2
        End If
        numbers.Clear()
        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)
        ExportJpg(path, imageName)

        ''‘’''msgbox(666)
        m2 = activateModel("8ly_090_000", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("outer_diameter") <= 300 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("outer_diameter") > 300 And read("outer_diameter") <= 340 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("outer_diameter") > 340 And read("outer_diameter") <= 430 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'ElseIf read("outer_diameter") > 430 And read("outer_diameter") <= 493 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'ElseIf read("outer_diameter") > 493 And read("outer_diameter") <= 620 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'ElseIf read("outer_diameter") > 620 And read("outer_diameter") <= 720 Then
        '    view2Ds.Item(0).Scale = 1 / 5
        'ElseIf read("outer_diameter") > 720 And read("outer_diameter") <= 800 Then
        '    view2Ds.Item(0).Scale = 1 / 8
        'End If
        ''‘’''msgbox(555)
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 23, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {450, 250})
        添加图幅注释(m2, read("T_MOTOR"))
        ''‘’''msgbox(555)
        m2.Rename(read("CODE"), True)
        ' m1.Rename(read("CODE"), True)
        'activateModel(m1.FileName, 1)
        ' RegenerateModel(m1)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
    End Sub
    Public Sub creo_flange(localhost$, tabledase$, ID#, path$, imageName$)
        numbers.Add(110) ' 拉伸3
        numbers.Add(257) ' 拉伸4
        numbers.Add(389) ' 阵列1 拉伸5
        numbers.Add(215) ' 倒角1
        numbers.Add(236) ' 倒角2

        '数据库
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        ' 零件图
        deleteFileChangeModel("prt", "E:\works\creo\flange\8ly_180_000.prt")
        m1 = activateModel("transition", 1)
        partValue(m1)
        RegenerateModel(m1)
        If read("type") = 1 Then
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
        ElseIf read("type") = 2 Then
            numbers.Remove(110)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d8", read("cut_thickness"), "浮点型") '切削厚度
            setParamValue(m1, "d9", read("cut_diameter"), "浮点型") '切削直径
        ElseIf read("type") = 6 Then
            numbers.Remove(389)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d21", read("cut_diameter"), "浮点型") '切削直径   
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d19", "", "角度"， （read("angle")）) '偏转角度
            setParamValue(m1, "d20", read("cut_wide"), "浮点型") '切削直径 
            setParamValue(m1, "d18", read("cut_high"), "浮点型") '切削厚度
            'setParamValue(m1, "d22", read("fillet"), "浮点型") '切削圆角   
            setParamValue(m1, "p28", read("cut_number"), "浮点型") '切削个数   
        ElseIf read("type") = 3 Then
            numbers.Remove(257)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d16", "", "角度", (read("angle"))) '与y轴偏转角度
            setParamValue(m1, "d17", read("cut_high"), "浮点型") '切削高度
        ElseIf read("type") = 4 Then
            numbers.Remove(215)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d13", read("chamfer_1"), "浮点型") '倒角1
        ElseIf read("type") = 5 Then
            numbers.Remove(236)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d5", read("outer_diameter"), "浮点型") '外径
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("inside_diameter"), "浮点型") '内径
            setParamValue(m1, "d14", read("chamfer_2"), "浮点型") '倒角2
        End If
        numbers.Clear()
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()

    End Sub
    Public Sub creo_rib(localhost$, tabledase$, ID#, path$, imageName$)
        numbers.Add(342) ' 拉伸2
        numbers.Add(520) ' 倒角5
        numbers.Add(477) ' 拉伸3

        numbers.Add(108) ' 倒角1
        numbers.Add(230) ' 倒角2
        numbers.Add(267) ' 倒角3
        numbers.Add(304) ' 倒角4


        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        ' 零件图
        deleteFileChangeModel("prt", "E:\works\creo\rib\8ly_130_000.prt")
        m1 = activateModel("transition", 1)
        partValue(m1)
        RegenerateModel(m1)
        If read("type") = 1 Then
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
        ElseIf read("type") = 2 Then
            numbers.Remove(108)
            numbers.Remove(230)
            numbers.Remove(267)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d13", read("chamfer_2_high"), "浮点型") '倒角2高
            setParamValue(m1, "d35", read("chamfer_2_length"), "浮点型") '倒角2长
            setParamValue(m1, "d31", read("chamfer_3_high"), "浮点型") '倒角3高
            setParamValue(m1, "d14", read("chamfer_3_length"), "浮点型") '倒角3长
        ElseIf read("type") = 3 Then
            numbers.Remove(108)
            numbers.Remove(230)
            numbers.Remove(267)
            numbers.Remove(304)
            numbers.Remove(342)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d13", read("chamfer_2_high"), "浮点型") '倒角2高
            setParamValue(m1, "d35", read("chamfer_2_length"), "浮点型") '倒角2长
            setParamValue(m1, "d31", read("chamfer_3_high"), "浮点型") '倒角3高
            setParamValue(m1, "d14", read("chamfer_3_length"), "浮点型") '倒角3长
            setParamValue(m1, "d15", read("chamfer_4_high"), "浮点型") '倒角4高
            setParamValue(m1, "d37", read("chamfer_4_length"), "浮点型") '倒角4长
            setParamValue(m1, "d17", read("cut_diameter"), "浮点型") '切除直径
            setParamValue(m1, "d21", read("cut_p_length"), "浮点型") '切除圆定位长
        ElseIf read("type") = 4 Then
            numbers.Remove(108)
            numbers.Remove(230)
            numbers.Remove(304)
            numbers.Remove(477)
            numbers.Remove(520)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d13", read("chamfer_2_high"), "浮点型") '倒角2高
            setParamValue(m1, "d35", read("chamfer_2_length"), "浮点型") '倒角2长
            setParamValue(m1, "d15", read("chamfer_4_high"), "浮点型") '倒角4高
            setParamValue(m1, "d37", read("chamfer_4_length"), "浮点型") '倒角4长
            setParamValue(m1, "d26", read("cut_high"), "浮点型") '切除高
            setParamValue(m1, "d27", read("cut_length"), "浮点型") '切除长
            setParamValue(m1, "d28", read("chamfer_5_high"), "浮点型") '倒角5高
            setParamValue(m1, "d29", read("chamfer_5_length"), "浮点型") '倒角5长
        ElseIf read("type") = 5 Then
            numbers.Remove(108)
            numbers.Remove(230)
            numbers.Remove(477)
            numbers.Remove(520)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d13", read("chamfer_2_high"), "浮点型") '倒角2高
            setParamValue(m1, "d35", read("chamfer_2_length"), "浮点型") '倒角2长
            setParamValue(m1, "d26", read("cut_high"), "浮点型") '切除高
            setParamValue(m1, "d27", read("cut_length"), "浮点型") '切除高长
            setParamValue(m1, "d28", read("chamfer_5_high"), "浮点型") '倒角5高
            setParamValue(m1, "d29", read("chamfer_5_length"), "浮点型") '倒角5长

        ElseIf read("type") = 6 Then
            numbers.Remove(108)
            numbers.Remove(304)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d15", read("chamfer_4_high"), "浮点型") '倒角4高
            setParamValue(m1, "d37", read("chamfer_4_length"), "浮点型") '倒角4长
        ElseIf read("type") = 7 Then
            numbers.Remove(108)
            numbers.Remove(230)
            numbers.Remove(267)
            numbers.Remove(304)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d8", read("length"), "浮点型") '长
            setParamValue(m1, "d7", read("high"), "浮点型") '高
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d33", read("chamfer_1_high"), "浮点型") '倒角1高
            setParamValue(m1, "d9", read("chamfer_1_length"), "浮点型") '倒角1长
            setParamValue(m1, "d13", read("chamfer_2_high"), "浮点型") '倒角2高
            setParamValue(m1, "d35", read("chamfer_2_length"), "浮点型") '倒角2长
            setParamValue(m1, "d31", read("chamfer_3_high"), "浮点型") '倒角3高
            setParamValue(m1, "d14", read("chamfer_3_length"), "浮点型") '倒角3长
            setParamValue(m1, "d15", read("chamfer_4_high"), "浮点型") '倒角4高
            setParamValue(m1, "d37", read("chamfer_4_length"), "浮点型") '倒角4长
        End If
        numbers.Clear()
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()

    End Sub
    Public Sub WriteLogToFile(eventDescription As String, filePath As String, userInfo As String)
        ' 获取当前时间戳
        Dim timeStamp As String
        timeStamp = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")

        ' 获取桌面路径
        Dim desktopPath As String
        'desktopPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop)

        ' 构建完整的文件路径
        Dim logFilePath As String
        logFilePath = System.IO.Path.Combine(filePath, "MyLog.txt")

        ' 打开文件用于写入
        Dim fileWriter As New System.IO.StreamWriter(logFilePath, True)

        '' 将信息写入日志文件
        '' fileWriter.WriteLine("已完成")
        'fileWriter.WriteLine("时间: " & timeStamp)
        'fileWriter.WriteLine("零件类型: " & eventDescription)
        '' fileWriter.WriteLine("Error Message: " & errorMessage)
        'fileWriter.WriteLine("文件地址: " & filePath)
        'fileWriter.WriteLine("使用人信息: " & userInfo)
        'fileWriter.WriteLine("-------------------------------")


        'fileWriter.Close()
        'Dim wordApp As New Word.Application
        'Dim doc As Word.Document
        'Dim worddoc As Word.Paragraph
        'wordApp = CreateObject("Word.Application")
        'wordApp.Visible = True
        'doc = wordApp.Documents.Add
        'doc.Paragraphs.Add.Range.Text = "时间: " & timeStamp
        '' worddoc.Content.InsertAfter("零件类型: " & eventDescription)
        '' fileWriter.WriteLine("Error Message: " & errorMessage)
        'doc.Paragraphs.Add.Range.Text = "文件地址: " & filePath
        'doc.Paragraphs.Add.Range.Text = "使用人信息: " & userInfo
        'doc.Paragraphs.Add.Range.Text = "-------------------------------"

    End Sub
    Public Sub clasp(localhost$, tabledase$, ID#, path$, imageName$)



        '数据库
        mysql_new(localhost$, tabledase$, ID#)

        ' 零件图
        m8 = openModel("prt", "E:\works\creo\clasp\8SB_146_204.prt")

        retrieveModel("frm", "E:\works\creo\clasp\part_a4_sb.frm")
        m8 = activateModel("8SB_146_204.prt.1", 1)

        m8.Rename("8sb-146-2099", True)
        m9 = retrieveModel("drw", "E:\works\creo\clasp\8sb-146-2099")

        m8 = activateModel("8sb-146-2099.prt", 1)


        RegenerateModel(m8)
        partValue(m8)
        setParamValue(m8, "d21", read("Side_length"), "浮点型") '扣片侧面长度
        setParamValue(m8, "d20", read("Fillet_Radius"), "浮点型") '倒角R
        setParamValue(m8, "d37", read("Side_length"), "浮点型") '扣片侧面长度
        setParamValue(m8, "d36", read("Fillet_Radius"), "浮点型") '倒角R
        setParamValue(m8, "d15", read("thickness"), "浮点型") '厚度
        setParamValue(m8, "d17", read("Frontal_length") + read("thickness") * 2, "浮点型") '正面长度
        setParamValue(m8, "d16", read("width"), "浮点型") '宽度
        'Dim basesession As IpfcBaseSession
        'basesession.QueryFeatureEdit()
        'm9.Rename(read("CODE"), True)
        m8.Rename(read("CODE"), True)
        RegenerateModel(m8)
        ExportJpg(path, imageName)

        m9 = activateModel("8sb-146-2099.drw", 2)
        drawing = CType(m9, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read("Frontal_length") <= 315 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        'ElseIf read("Frontal_length") > 315 And read("Frontal_length") <= 385 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        'ElseIf read("Frontal_length") > 385 And read("Frontal_length") <= 515 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        'ElseIf read("Frontal_length") > 515 Then
        '    view2Ds.Item(0).Scale = 1 / 5
        'End If
        modelItems = listModelItem(m9, "DTL_NOTE")
        Threading.Thread.Sleep(1000)
        修改注释(modelItems, 21, view2Ds.Item(0).Scale.ToString)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {450, 250})
        添加图幅注释(m9, read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m9.Rename(read("CODE"), True)
        'm9.Rename(read("CODE"), True)
        'm8.Rename(read("CODE"), True)
        'activateModel(m8.FileName, 1)
        'RegenerateModel(m8)


        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        生成文件夹(path, "part")

        m8 = activateModel(read("CODE"), 1)
        deleteFeature(m8, 296)
        setParamValue(m8, "d17", read("pre_length"), "浮点型") '正面长度 read("pre_length")
        m9 = activateModel(read("CODE"), 2)


        drawing = CType(m9, IpfcDrawing)
        smodel = drawing.Descr
        smodel.Path = path + "\part"
        drawing.Backup(smodel)


        numbers.Clear()
        Threading.Thread.Sleep(1000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        'WriteLogToFile("扣片", path, "haifeng")

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()


    End Sub
    Public Sub nameplate(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)

        openModel("drw", "E:\works\creo\nameplate\nameplate")
        m1 = activateModel("nameplate", 1)


        setTextValue(m1, "Note_63", read("djxh"), "字符串") '电机型号
        setTextValue(m1, "Note_64", read("edgl"), "浮点型") '额定功率
        setTextValue(m1, "Note_65", read("edpl"), "浮点型") '额定频率
        setTextValue(m1, "Note_66", read("edzs"), "浮点型") '额定转速
        setTextValue(m1, "Note_67", read("xs"), "浮点型") '相数
        setTextValue(m1, "Note_76", read("zl"), "浮点型") '质量
        setTextValue(m1, "Note_72", read("bzbh"), "字符串") '标准编号
        setTextValue(m1, "Note_73", read("eddy"), "浮点型") '额定电压
        setTextValue(m1, "Note_74", read("eddl"), "浮点型") '额定电流
        setTextValue(m1, "Note_77", read("lcdy"), "浮点型") '励磁电压
        setTextValue(m1, "Note_78", read("lcdl"), "浮点型") '励磁电流
        setTextValue(m1, "Note_68", read("dytzl"), "浮点型") '电压调整率
        setTextValue(m1, "Note_79", read("ccrq"), "字符串") '出厂日期
        setTextValue(m1, "Note_69", read("glys"), "浮点型") '功率因数
        setTextValue(m1, "Note_70", read("jydj"), "字符串") '绝缘等级
        setTextValue(m1, "Note_62", read("fhdj"), "浮点型") '防护等级
        setTextValue(m1, "Note_80", read("ccbh"), "字符串") '出厂编号

        m1.Regenerate(Nothing)

        m1.Rename(read("CODE"), True)
        activateModel(read("CODE"), 1).Regenerate(Nothing)
        closeWindow(activateModel(read("CODE"), 1))

        smodel = m1.Descr
        smodel.Path = path

        m1.Backup(smodel)
        endApp()

    End Sub
    Public Sub test(localhost$, tabledase$, ID#, path$, imageName$)
        'mysql_new(localhost$, tabledase$, ID#)
        m1 = openModel("prt", "C:\Users\lanye\Desktop\test1\8sb-146-2099.prt")
        m2 = retrieveModel("drw", "C:\Users\lanye\Desktop\test1\8sb-146-2099.drw")
        retrieveModel("frm", "C:\Users\lanye\Desktop\test1\part_a4_sb.frm")
        'partValue(m1)
        m1 = activateModel("8sb-146-2099.prt", 1)
        setParamValue(m1, "d17", 340, "浮点型") '长度
        setParamValue(m1, "d16", 60, "浮点型") '宽度 
        deleteFeature(m1, 296)
        RegenerateModel(m1)

        m2 = activateModel("8Sb-146-2099.drw", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        Dim aaa As IpfcModelItem
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_142")
        Threading.Thread.Sleep(1000)
        修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)
    End Sub
    Public Sub 吊攀(localhost$, tabledase$, ID#, path$, imageName$)

        '数据库
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        '零件图
        If read("type") = 1 Then
            deleteFileChangeModel("prt", "E:\works\creo\hanging_board\8sb-472-001.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)

            setParamValue(m1, "d7", read("d_wide"), "浮点型") '宽度
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d6", read("d_first_high"), "浮点型") '高度

            setParamValue(m1, "d8", read("d_Arc_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d5", "", "角度", read("included_angle") * PI / 180) '夹角

            setParamValue(m1, "d12", read("Cutting_circle_diameter"), "浮点型") '中心圆直径
            setParamValue(m1, "d13", read("cutting_circle_l_high"), "浮点型") '中心圆高度
            setParamValue(m1, "d9", read("Fillet_Radius"), "浮点型") '倒角半径
            setParamValue(m1, "d10", read("Fillet_Radius"), "浮点型") '倒角半径

        ElseIf read("type") = 2 Then
            deleteFileChangeModel("prt", "E:\works\creo\hanging_board\8sb-472-002.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)

            setParamValue(m1, "d33", read("d_first_high"), "浮点型") '第一段高度
            setParamValue(m1, "d32", read("d_two_high"), "浮点型") '第二段高度
            setParamValue(m1, "d31", read("d_third_high"), "浮点型") '第三段高度
            setParamValue(m1, "d4", read("d_wide"), "浮点型") '宽度
            setParamValue(m1, "d35", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d30", read("C_Fillet_Radius"), "浮点型") '中心部分倒角半径
            setParamValue(m1, "d34", read("Distance_from_origin"), "浮点型") '与原点间的距离
            '上部切削圆
            setParamValue(m1, "d42", read("Cutting_circle_diameter"), "浮点型") '中心圆直径
            setParamValue(m1, "d43", read("cutting_circle_l_high"), "浮点型") '中心圆高度
            '下部切削圆
            setParamValue(m1, "d46", read("two_Cutting_circle_diameter"), "浮点型") '中心圆直径2
            setParamValue(m1, "d45", read("length_t_circle"), "浮点型") '两圆间距
            '四周倒圆角
            setParamValue(m1, "d37", read("Fillet_Radius"), "浮点型") '倒角半径
            setParamValue(m1, "d38", read("Fillet_Radius"), "浮点型") '倒角半径
            setParamValue(m1, "d39", read("Fillet_Radius"), "浮点型") '倒角半径
            setParamValue(m1, "d40", read("Fillet_Radius"), "浮点型") '倒角半径
            '下部倒角
            setParamValue(m1, "d36", read("Bevel_chamfer"), "浮点型") '斜边倒角大小
        ElseIf read("type") = 3 Then
            deleteFileChangeModel("prt", "E:\works\creo\hanging_board\8sb-472-003.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            setParamValue(m1, "d11", read("d_first_high"), "浮点型") '第一段高度
            setParamValue(m1, "d16", read("d_two_high"), "浮点型") '第二段高度
            setParamValue(m1, "d10", read("d_third_high"), "浮点型") '第三段高度
            setParamValue(m1, "d4", read("d_wide"), "浮点型") '宽度
            setParamValue(m1, "d6", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d9", read("Fillet_Radius"), "浮点型") '倒圆角半径
            setParamValue(m1, "d7", read("Fillet_Radius"), "浮点型") '倒圆角半径
            setParamValue(m1, "d4", "", "角度", read("included_angle") * PI / 180) '第二面与第三面夹角
            '切削圆位置及大小
            setParamValue(m1, "d15", read("cutting_circle_l_high"), "浮点型") '与横轴高度
            setParamValue(m1, "d14", read("cutting_circle_s_high"), "浮点型") '与纵轴高度
            setParamValue(m1, "d13", read("Cutting_circle_diameter"), "浮点型") '切削圆直径
        ElseIf read("type") = 4 Then
            deleteFileChangeModel("prt", "E:\works\creo\hanging_board\8sb-472-004.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d5", read("d_long"), "浮点型") '长
            setParamValue(m1, "d6", read("d_wide"), "浮点型") '宽
            setParamValue(m1, "d7", read("Fillet_Radius"), "浮点型") '倒圆角半径
            setParamValue(m1, "d8", read("d_Arc_radius"), "浮点型") '弧形半径

            '切削圆
            setParamValue(m1, "d11", read("cutting_circle_l_high"), "浮点型") '与横轴高度
            setParamValue(m1, "d12", read("cutting_circle_s_high"), "浮点型") '与纵轴高度
            setParamValue(m1, "d10", read("Cutting_circle_diameter"), "浮点型") '切削圆直径
        ElseIf read("type") = 5 Then
            deleteFileChangeModel("prt", "E:\works\creo\hanging_board\8sb-472-005.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)

            setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
            setParamValue(m1, "d7", read("d_long"), "浮点型") '长
            setParamValue(m1, "d6", read("d_wide"), "浮点型") '宽
            setParamValue(m1, "d14", read("Fillet_Radius"), "浮点型") '倒圆角半径
            setParamValue(m1, "d5", read("d_Arc_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d8", read("Long_one"), "浮点型") '底部横线与原点间的距离
            setParamValue(m1, "d9", read("Long_two"), "浮点型") '垂线与顶部横轴间的距离
            '切削圆
            setParamValue(m1, "d13", read("cutting_circle_l_high"), "浮点型") '与横轴高度
            setParamValue(m1, "d12", read("cutting_circle_s_high"), "浮点型") '与纵轴高度
            setParamValue(m1, "d11", read("Cutting_circle_diameter"), "浮点型") '切削圆直径
        End If

        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        numbers.Clear()
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()

    End Sub
    Public Sub 搭子(localhost$, tabledase$, ID#, path$, imageName$)

        mysql_new(localhost$, tabledase$, ID#)

        deleteFileChangeModel("prt", "E:\works\creo\partner\8sb-472-010.prt")
        m1 = activateModel("transition", 1)
        partValue(m1)

        setParamValue(m1, "d5", read("Upper_arc_radius"), "浮点型") '上圆弧半径
        setParamValue(m1, "d6", read("width"), "浮点型") '宽度
        setParamValue(m1, "d7", read("Lower_arc_radius"), "浮点型") '下圆弧半径
        setParamValue(m1, "d8", "", "角度", (read("included_angle"))) '角度
        setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
        '倒角
        setParamValue(m1, "d12", read("Frontal_length"), "浮点型") '倒角尺寸正面角度



        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        numbers.Clear()
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()


    End Sub
    Public Sub 圆筒(localhost$, tabledase$, ID#, path$, imageName$)

        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        numbers.Add(880) ' 拉伸3
        numbers.Add(1097) ' 拉伸4

        ' 零件图
        deleteFileChangeModel("prt", "E:\works\creo\shell\8sb-000-001.prt")
        m1 = activateModel("transition", 1)
        partValue(m1)
        RegenerateModel(m1)
        If read("type") = 1 Then
            numbers.Remove(880)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            '圆筒大小,及厚度
            setParamValue(m1, "d18", read("sh1_diameter"), "浮点型") '外径
            setParamValue(m1, "d15", read("s1_long"), "浮点型") '长度
            setParamValue(m1, "d16", read("thickness"), "浮点型") '厚度

            '类型一通风口位置及大小
            setParamValue(m1, "d85", read("sq1_long"), "浮点型") '长度
            setParamValue(m1, "d84", read("sq1_width"), "浮点型") '宽度

            setParamValue(m1, "d87", read("sq1_c_length"), "浮点型") '与中心线距离
            setParamValue(m1, "d26", read("sq1_un_y_length"), "浮点型") '与底边距离

            setParamValue(m1, "p90", read("sq1_left_arrays_number"), "浮点型") '阵列个数
            setParamValue(m1, "d88", read("sq1_left_arrays_length"), "浮点型") '阵列距离
            '切削长方形安装位置及长度大小
            setParamValue(m1, "d143", read("sq2_long"), "浮点型") '长度
            setParamValue(m1, "d144", read("sq2_width"), "浮点型") '宽度
            setParamValue(m1, "d140", read("sq2_round"), "浮点型") '倒圆角

            setParamValue(m1, "d142", read("sq2_y_length"), "浮点型") '与短边距离
            setParamValue(m1, "d141", read("sq2_x_length"), "浮点型") '与顶边距离

        End If


        If read("type") = 2 Then

            numbers.Remove(1097)
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            '圆筒大小,及厚度
            setParamValue(m1, "d18", read("sh1_diameter"), "浮点型") '外径
            setParamValue(m1, "d15", read("s1_long"), "浮点型") '长度
            setParamValue(m1, "d16", read("thickness"), "浮点型") '厚度

            '类型二通风口位置及大小
            setParamValue(m1, "d98", read("sq1_long"), "浮点型") '长度
            setParamValue(m1, "d97", read("sq1_width"), "浮点型") '宽度

            setParamValue(m1, "d95", read("sq1_c_length"), "浮点型") '与中心线距离
            setParamValue(m1, "d96", read("sq1_un_y_length"), "浮点型") '与底边距离

            setParamValue(m1, "p101", read("sq1_left_arrays_number"), "浮点型") '向左阵列个数
            setParamValue(m1, "d99", read("sq1_left_arrays_length"), "浮点型") '向左阵列距离
            setParamValue(m1, "p102", read("sq1_up_arrays_number"), "浮点型") '相上阵列个数
            setParamValue(m1, "d100", read("sq1_up_arrays_length"), "浮点型") '相上阵列距离
            '切削长方形安装位置及长度大小
            setParamValue(m1, "d143", read("sq2_long"), "浮点型") '长度
            setParamValue(m1, "d144", read("sq2_width"), "浮点型") '宽度
            setParamValue(m1, "d140", read("sq2_round"), "浮点型") '倒圆角

            setParamValue(m1, "d142", read("sq2_y_length"), "浮点型") '与短边距离
            setParamValue(m1, "d141", read("sq2_x_length"), "浮点型") '与顶边距离

        End If
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        numbers.Clear()
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
    End Sub
    '无工程图
    Public Sub 接线盒(localhost$, tabledase$, ID#, path$, imageName$)

        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        ' 零件图

        If read("type") = 1 Then
            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_001.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)

            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d18", read("box_height"), "浮点型") '高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d23", read("box_rad_height"), "浮点型") '弧形离顶边高

            setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度

            '第一面通孔位置及大小


            setParamValue(m1, "d27", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d26", read("fs1_x_length"), "浮点型") '与顶边距离
            setParamValue(m1, "d25", read("fs1_c_diameter"), "浮点型") '通孔1直径

            '第三面剪切图形位置及大小
            setParamValue(m1, "d32", read("fs3_c_length"), "浮点型") '剪切长方形长度
            setParamValue(m1, "d31", read("fs3_c_wight"), "浮点型") '剪切长方形宽度
            setParamValue(m1, "d30", read("fs3_c_round"), "浮点型") '长方形倒角

            setParamValue(m1, "d33", read("fs3_y_length"), "浮点型") '与中心线距离
            setParamValue(m1, "d29", read("fs3_x_length"), "浮点型") '与顶边距离
            ''第三面通孔位置
            setParamValue(m1, "d288", read("fs3_x_Distance1"), "浮点型") 'x轴两通孔间距长度
            setParamValue(m1, "d291", read("fs3_y_Distance1"), "浮点型") 'y轴两通孔间距长度
            setParamValue(m1, "d275", read("fs3_hole2_diameter"), "浮点型") '通孔2直径
            ''第三面螺栓位置
            setParamValue(m1, "d290", read("fs3_x_Distance2"), "浮点型") 'x轴两螺栓间距长度
            setParamValue(m1, "d289", read("fs3_y_Distance2"), "浮点型") 'y轴两螺栓间距长度
            setParamValue(m1, "d274", read("fs3_bolt1_diameter"), "浮点型") '螺栓1直径
            '第四面通孔位置及大小
            setParamValue(m1, "d280", read("fs4_y_length1"), "浮点型") '与右侧边距离
            setParamValue(m1, "d283", read("fs4_x_length1"), "浮点型") '与顶边距离
            setParamValue(m1, "d282", read("fs4_hole1_diameter"), "浮点型") '通孔3直径
            setParamValue(m1, "d281", read("fs4_bolt_Distance1"), "浮点型") '两圆间距
            '底部折弯部分长度
            setParamValue(m1, "d251", read("fs5_length"), "浮点型") '长度
            setParamValue(m1, "d234", read("fs5_length"), "浮点型") '长度
            '顶部折弯部分长度
            setParamValue(m1, "d200", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d217", read("fs6_length"), "浮点型") '长度
            '顶部螺栓位置
            setParamValue(m1, "d285", read("fs6_x_Distance"), "浮点型") '同侧螺栓间距离
            setParamValue(m1, "d286", read("fs6_y_Distance"), "浮点型") '异侧螺栓间距离

            setParamValue(m1, "d287", read("fs6_bolt_dimeter"), "浮点型") '通孔直径
        End If
        If read("type") = 2 Then
            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_002.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)

            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d18", read("box_height"), "浮点型") '高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度
            ''第一面切削部分位置及大小
            setParamValue(m1, "d269", read("fs1_c_length"), "浮点型") '长度
            setParamValue(m1, "d270", read("fs1_c_wigth"), "浮点型") '宽度
            setParamValue(m1, "d272", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d271", read("fs1_x_length"), "浮点型") '与顶边距离




            '第三面剪切图形位置及大小
            ''切削大圆
            setParamValue(m1, "d273", read("fs3_hole1_diameter"), "浮点型") '通孔1直径

            setParamValue(m1, "d275", read("fs3_y_length1"), "浮点型") '与中心线距离
            setParamValue(m1, "d274", read("fs3_x_length1"), "浮点型") '与顶边距离

            ''切削螺栓及通孔位置大小

            setParamValue(m1, "d283", read("fs3_xline_length1"), "浮点型") '构造线长方形长度
            setParamValue(m1, "d282", read("fs3_xline_wight1"), "浮点型") '构造线长方形宽度

            setParamValue(m1, "d281", read("fs3_hole1_diameter"), "浮点型") '通孔2直径

            setParamValue(m1, "d278", read("fs3_xline_diameter"), "浮点型") '定位小螺栓构造圆直径
            setParamValue(m1, "d280", read("fs3_bolt1_diameter"), "浮点型") '螺栓1直径

            '顶部折弯部分长度
            setParamValue(m1, "d288", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d307", read("fs6_length"), "浮点型") '长度
        End If
        If read("type") = 3 Then
            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_003.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)

            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d18", read("box_height"), "浮点型") '箱体高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d23", read("box_rad_height"), "浮点型") '弧形离顶边高

            setParamValue(m1, "d15", read("thickness"), "浮点型") '箱体厚度

            '第一面切削部分位置及大小
            setParamValue(m1, "d312", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d313", read("fs1_x_length"), "浮点型") '与顶边距离
            setParamValue(m1, "d311", read("fs1_c_diameter"), "浮点型") '通孔1直径

            '第三面剪切图形位置及大小
            ''切削大圆
            setParamValue(m1, "d306", read("fs3_hole1_diameter"), "浮点型") '通孔1直径

            setParamValue(m1, "d308", read("fs3_y_length1"), "浮点型") '与中心线距离
            setParamValue(m1, "d310", read("fs3_x_length1"), "浮点型") '与顶边距离
            ''切削螺栓及通孔位置大小


            setParamValue(m1, "d299", read("fs3_xline_length1"), "浮点型") '构造线长方形长度1
            setParamValue(m1, "d298", read("fs3_xline_wight1"), "浮点型") '构造线长方形宽度1

            setParamValue(m1, "d300", read("fs3_hole1_diameter"), "浮点型") '通孔1直径

            setParamValue(m1, "d303", read("fs3_xline_diameter"), "浮点型") '定位小螺栓构造圆直径
            setParamValue(m1, "d304", read("fs3_bolt1_diameter"), "浮点型") '螺栓1直径



            setParamValue(m1, "d315", read("fs3_xline_length2"), "浮点型") '构造线长方形2长度
            setParamValue(m1, "d316", read("fs3_xline_length2"), "浮点型") '构造线长方形2宽度

            setParamValue(m1, "d319", read("fs3_hole2_diameter"), "浮点型")   '螺栓2直径
            setParamValue(m1, "d317", read("fs3_x_length2"), "浮点型")  '螺栓2与x轴距离
            setParamValue(m1, "d318", read("fs3_y_length2"), "浮点型") '螺栓2与y轴距离

            '第四面螺栓位置
            setParamValue(m1, "d328", read("fs4_bolt1_diameter"), "浮点型") '第四面螺栓直径

            setParamValue(m1, "d323", read("fs4_bolt_Distance1"), "浮点型") '第一组螺栓3间距
            setParamValue(m1, "d332", read("fs4_x_length1"), "浮点型") '螺栓3与x轴距离
            setParamValue(m1, "d330", read("fs4_y_length1"), "浮点型") '螺栓3与y轴距离

            setParamValue(m1, "d321", read("fs4_bolt_Distance2"), "浮点型") '第二组螺栓4间距
            setParamValue(m1, "d331", read("fs4_x_length2"), "浮点型") '螺栓4与x轴距离
            setParamValue(m1, "d329", read("fs4_y_length2"), "浮点型") '螺栓4与中心y轴距离

            setParamValue(m1, "d325", read("fs4_bolt_Distance3"), "浮点型") '第三组螺栓5间距
            setParamValue(m1, "d327", read("fs4_x_length3"), "浮点型") '螺栓5与x轴距离
            setParamValue(m1, "d326", read("fs4_y_length3"), "浮点型") '螺栓5与中心y轴距离



            '底部折弯部分长度
            setParamValue(m1, "d251", read("fs5_length"), "浮点型") '长度
            setParamValue(m1, "d234", read("fs5_length"), "浮点型") '长度
            '顶部折弯部分长度
            setParamValue(m1, "d200", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d217", read("fs6_length"), "浮点型") '长度
            '顶部螺栓位置
            setParamValue(m1, "d285", read("fs6_x_Distance"), "浮点型") '同侧螺栓间距离
            setParamValue(m1, "d286", read("fs6_y_Distance"), "浮点型") '异侧螺栓间距离

            setParamValue(m1, "d287", read("fs6_bolt_dimeter"), "浮点型") '顶部螺栓直径
        End If
        If read("type") = 4 Then
            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_004.prt")

            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)
            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d300", read("box_height"), "浮点型") '箱体高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d23", read("box_rad_height"), "浮点型") '弧形离顶边高

            setParamValue(m1, "d15", read("thickness"), "浮点型") '箱体厚度

            '第一面切削部分位置及大小
            setParamValue(m1, "d25", read("fs1_c_diameter"), "浮点型") '通孔直径

            setParamValue(m1, "d27", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d26", read("fs1_x_length"), "浮点型") '与顶边距离


            '顶部折弯部分长度
            setParamValue(m1, "d200", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d217", read("fs6_length"), "浮点型") '长度




        End If
        If read("type") = 5 Then

            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_001.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)
            deleteFeature(m1, 4377)
            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d18", read("box_height"), "浮点型") '高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d23", read("box_rad_height"), "浮点型") '弧形离顶边高

            setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度

            '第一面通孔位置及大小


            setParamValue(m1, "d27", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d26", read("fs1_x_length"), "浮点型") '与顶边距离
            setParamValue(m1, "d25", read("fs1_c_diameter"), "浮点型") '通孔1直径

            '第三面剪切图形位置及大小
            setParamValue(m1, "d32", read("fs3_c_length"), "浮点型") '剪切长方形长度
            setParamValue(m1, "d31", read("fs3_c_wight"), "浮点型") '剪切长方形宽度
            setParamValue(m1, "d30", read("fs3_c_round"), "浮点型") '长方形倒角

            setParamValue(m1, "d33", read("fs3_y_length"), "浮点型") '与中心线距离
            setParamValue(m1, "d29", read("fs3_x_length"), "浮点型") '与顶边距离
            ''第三面通孔位置
            setParamValue(m1, "d288", read("fs3_x_Distance1"), "浮点型") 'x轴两通孔间距长度
            setParamValue(m1, "d291", read("fs3_y_Distance1"), "浮点型") 'y轴两通孔间距长度
            setParamValue(m1, "d275", read("fs3_hole2_diameter"), "浮点型") '通孔2直径
            ''第三面螺栓位置
            setParamValue(m1, "d290", read("fs3_x_Distance2"), "浮点型") 'x轴两螺栓间距长度
            setParamValue(m1, "d289", read("fs3_y_Distance2"), "浮点型") 'y轴两螺栓间距长度
            setParamValue(m1, "d274", read("fs3_bolt1_diameter"), "浮点型") '螺栓1直径
            '底部折弯部分长度
            setParamValue(m1, "d251", read("fs5_length"), "浮点型") '长度
            setParamValue(m1, "d234", read("fs5_length"), "浮点型") '长度
            '顶部折弯部分长度
            setParamValue(m1, "d200", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d217", read("fs6_length"), "浮点型") '长度
            '顶部螺栓位置
            setParamValue(m1, "d285", read("fs6_x_Distance"), "浮点型") '同侧螺栓间距离
            setParamValue(m1, "d286", read("fs6_y_Distance"), "浮点型") '异侧螺栓间距离

            setParamValue(m1, "d287", read("fs6_bolt_dimeter"), "浮点型") '通孔直径


        End If
        If read("type") = 6 Then
            deleteFileChangeModel("prt", "E:\works\creo\box_body_combination\8sb_001_001.prt")
            m1 = activateModel("transition", 1)
            partValue(m1)
            RegenerateModel(m1)
            deleteFeature(m1, 388)
            '箱体大小,及厚度
            setParamValue(m1, "d17", read("first_side_length"), "浮点型") '第一面长度
            setParamValue(m1, "d196", read("second_side_length"), "浮点型") '第二面长度
            setParamValue(m1, "d18", read("box_height"), "浮点型") '高度

            setParamValue(m1, "d20", read("box_radius"), "浮点型") '弧形半径
            setParamValue(m1, "d23", read("box_rad_height"), "浮点型") '弧形离顶边高

            setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度

            '第一面通孔位置及大小

            setParamValue(m1, "d27", read("fs1_y_length"), "浮点型") '与右侧边距离
            setParamValue(m1, "d26", read("fs1_x_length"), "浮点型") '与顶边距离
            setParamValue(m1, "d25", read("fs1_c_diameter"), "浮点型") '通孔1直径

            '第四面通孔位置及大小
            setParamValue(m1, "d280", read("fs4_y_length1"), "浮点型") '与右侧边距离
            setParamValue(m1, "d283", read("fs4_x_length1"), "浮点型") '与顶边距离
            setParamValue(m1, "d282", read("fs4_hole1_diameter"), "浮点型") '通孔3直径
            setParamValue(m1, "d281", read("fs4_bolt_Distance1"), "浮点型") '两圆间距
            '底部折弯部分长度
            setParamValue(m1, "d251", read("fs5_length"), "浮点型") '长度
            setParamValue(m1, "d234", read("fs5_length"), "浮点型") '长度
            '顶部折弯部分长度
            setParamValue(m1, "d200", read("fs6_length"), "浮点型") '长度
            setParamValue(m1, "d217", read("fs6_length"), "浮点型") '长度
            '顶部螺栓位置
            setParamValue(m1, "d285", read("fs6_x_Distance"), "浮点型") '同侧螺栓间距离
            setParamValue(m1, "d286", read("fs6_y_Distance"), "浮点型") '异侧螺栓间距离

            setParamValue(m1, "d287", read("fs6_bolt_dimeter"), "浮点型") '通孔直径

        End If
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)

        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        numbers.Clear()
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()

    End Sub
    Public Sub creo_shield(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)
        '零件图
        If read("type") = 1 Then
            numbers.Add(192) '阵列1/拉伸1
            numbers.Add(640) '阵列2/模板1
            numbers.Add(1565) '阵列3/模板2
            numbers.Add(2492) '阵列4/模板3
            numbers.Add(2913) '阵列5/模板4
            numbers.Add(6027) '阵列6/模板5
            numbers.Add(8214) '阵列7/模板6
            numbers.Add(9223) '拉伸2

            m1 = openModel("prt", "E:\works\creo\shield\shield2")
            retrieveModel("frm", "E:\works\creo\shield\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\shield\shield2")
            m1 = activateModel("shield2", 1)
            m2 = retrieveModel("prt", "E:\works\creo\shield\100louver.prt.1")
            partValue(m1)
            RegenerateModel(m1)
            If read("type_1") = 1 Then
                numbers.Remove(192) '阵列1/拉伸1
                numbers.Remove(640) '阵列2/模板1
                numbers.Remove(1565) '阵列3/模板2
                numbers.Remove(2492) '阵列4/模板3
                numbers.Remove(2913) '阵列5/模板4
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度

                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '平面1
                setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径

                m2 = activateModel("100louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)


                m1 = activateModel("shield2", 1)
                '阵列1/拉伸1
                '拉伸1
                'setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                'setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径
                '阵列1
                setParamValue(m1, "p24", read("hole_number"), "浮点型") '孔数量

                '阵列2/模板1
                '模板1
                setParamValue(m1, "d28", read("interval2") / 2, "浮点型") '一半间距
                setParamValue(m1, "d29", read("louver_length") / 2 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                '阵列2
                setParamValue(m1, "d30", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p32", read("arrays_number1") / 2, "浮点型") '阵列数量的一半

                '阵列3/模板2
                '模板2
                setParamValue(m1, "d35", read("louver_width") + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                setParamValue(m1, "d36", read("louver_length") / 2 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                '阵列3
                setParamValue(m1, "d37", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p39", read("arrays_number1") / 2, "浮点型") '阵列数量的一半

                '阵列4/模板3
                '模板4
                setParamValue(m1, "d57", read("interval2") / 2, "浮点型") '一半间距
                setParamValue(m1, "d58", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距
                '阵列4
                setParamValue(m1, "d59", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p61", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                '阵列5/模板4
                '模板4
                setParamValue(m1, "d66", read("louver_width") + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                setParamValue(m1, "d67", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距
                '阵列5
                setParamValue(m1, "d68", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p70", read("arrays_number2") / 2, "浮点型") '阵列数量的一半


                setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径
                setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径
                m2 = activateModel("100louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)


            ElseIf read("type_1") = 2 Then
                numbers.Remove(192) '阵列1/拉伸1
                numbers.Remove(640) '阵列2/模板1
                numbers.Remove(1565) '阵列3/模板2
                numbers.Remove(2492) '阵列4/模板3
                numbers.Remove(2913) '阵列5/模板4
                numbers.Remove(9223) '拉伸2

                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next

                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '平面1
                'setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径
                ''阵列1/拉伸1
                ''拉伸1
                'setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                'setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径
                ''阵列1
                'setParamValue(m1, "p24", read("hole_number"), "浮点型") '孔数量

                ''阵列2/模板1
                ''模板1
                'setParamValue(m1, "d28", 12 * read("delete_number") / 2 + read("interval2") * read("delete_number") / 2 + read("interval2") / 2, "浮点型") '缺少个数
                'setParamValue(m1, "d29", 50 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                ''阵列2
                'setParamValue(m1, "d30", 12 + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                'setParamValue(m1, "p32", read("arrays_number1") / 2 - read("delete_number") / 2, "浮点型") '阵列数量的一半-缺少个数

                ''阵列3/模板2
                ''模板2
                'setParamValue(m1, "d35", 12 * ((read("delete_number") / 2 + 1）) + read("interval2") * read("delete_number") / 2 + read("interval2") / 2, "浮点型") '第三个凸模间距
                'setParamValue(m1, "d36", 50 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                ''阵列3
                'setParamValue(m1, "d37", 12 + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                'setParamValue(m1, "p39", read("arrays_number1") / 2 - read("delete_number") / 2, "浮点型") '阵列数量的一半-缺少个数

                ''阵列4/模板3
                ''模板4
                'setParamValue(m1, "d57", read("interval2") / 2, "浮点型") '一半间距
                'setParamValue(m1, "d58", 50 + read("interval2"), "浮点型") '凸模一半长度+间距
                ''阵列4
                'setParamValue(m1, "d59", 12 + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                'setParamValue(m1, "p61", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                ''阵列5/模板4
                ''模板4
                'setParamValue(m1, "d66", 12 + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                'setParamValue(m1, "d67", 50 + read("interval2"), "浮点型") '凸模一半长度+间距
                ''阵列5
                'setParamValue(m1, "d68", 12 + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                'setParamValue(m1, "p70", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                ''拉伸2
                'setParamValue(m1, "d118", read("Center_hole_diameter"), "浮点型") '孔径


                setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度
                setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径

                m2 = activateModel("100louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)


                m1 = activateModel("shield2", 1)
                '阵列1/拉伸1
                '拉伸1
                setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径
                '阵列1
                setParamValue(m1, "p24", read("hole_number"), "浮点型") '孔数量

                '阵列2/模板1
                '模板1
                setParamValue(m1, "d28", read("louver_width") * Int((read("Center_hole_diameter") / 2 - read("interval2") / 2) / (read("louver_width") + read("interval2")) + 1) +
                              read("interval2") * Int((read("Center_hole_diameter") / 2 - read("interval2") / 2) / (read("louver_width") + read("interval2")) + 1) + read("interval2") / 2, "浮点型") '缺少个数
                '12 * read("delete_number") / 2 + read("interval2") * read("delete_number") / 2 + read("interval2") / 2
                setParamValue(m1, "d29", read("louver_length") / 2 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                '阵列2
                setParamValue(m1, "d30", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p32", read("arrays_number1") / 2, "浮点型") '阵列数量的一半-缺少个数（ read("arrays_number1") / 2 - read("delete_number") / 2）

                '阵列3/模板2
                '模板2
                setParamValue(m1, "d35", read("louver_width") * (Int((read("Center_hole_diameter") / 2 - read("interval2") / 2) / (read("louver_width") + read("interval2")) + 1) + 1) + read("interval2") * Int((read("Center_hole_diameter") / 2 - read("interval2") / 2) / (12 + read("interval2")) + 1) + read("interval2") / 2, "浮点型") '第三个凸模间距
                '                       （12 * ((read("delete_number") / 2 + 1）) + read("interval2") * read("delete_number") / 2 + read("interval2") / 2）
                setParamValue(m1, "d36", read("louver_length") / 2 + read("interval2") / 2, "浮点型") '凸模一半长度+一半间距
                '阵列3
                setParamValue(m1, "d37", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p39", read("arrays_number1") / 2, "浮点型") '阵列数量的一半-缺少个数（ read("arrays_number1") / 2 - read("delete_number") / 2）


                '阵列4/模板3
                '模板4
                setParamValue(m1, "d57", read("interval2") / 2, "浮点型") '一半间距
                setParamValue(m1, "d58", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距



                '阵列4
                setParamValue(m1, "d59", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p61", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                '阵列5/模板4
                '模板4
                setParamValue(m1, "d66", read("louver_width") + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                setParamValue(m1, "d67", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距
                '阵列5
                setParamValue(m1, "d68", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p70", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                '拉伸2
                setParamValue(m1, "d118", read("Center_hole_diameter"), "浮点型") '孔径

                'm2 = activateModel("100louver", 1)
                'setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                'setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                'RegenerateModel(m2)

            ElseIf read("type_1") = 3 Then
                numbers.Remove(192) '阵列1/拉伸1
                numbers.Remove(640) '阵列2/模板1
                numbers.Remove(1565) '阵列3/模板2
                numbers.Remove(2492) '阵列4/模板3
                numbers.Remove(2913) '阵列5/模板4
                numbers.Remove(6027) '阵列6/模板5
                numbers.Remove(8214) '阵列7/模板6
                numbers.Remove(9223) '拉伸2
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                setParamValue(m1, "d15", read("thickness"), "浮点型") '厚度
                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '平面1
                setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径

                m2 = activateModel("100louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)


                m1 = activateModel("shield2", 1)
                '阵列1/拉伸1
                '拉伸1
                'setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                'setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径
                '阵列1
                setParamValue(m1, "p24", read("hole_number"), "浮点型") '孔数量

                '阵列2/模板1
                '模板1
                setParamValue(m1, "d28", read("interval2") / 2, "浮点型") '一半间距
                setParamValue(m1, "d29", read("louver_length") + read("interval2"), "浮点型") '凸模长度+间距   100
                '阵列2
                setParamValue(m1, "d30", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p32", read("arrays_number1") / 2, "浮点型") '阵列数量的一半

                '阵列3/模板2
                '模板2
                setParamValue(m1, "d35", read("louver_width") + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                setParamValue(m1, "d36", read("louver_length") + read("interval2"), "浮点型") '凸模长度+间距     100

                '阵列3
                setParamValue(m1, "d37", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p39", read("arrays_number1") / 2, "浮点型") '阵列数量的一半

                '阵列4/模板3
                '模板4
                setParamValue(m1, "d57", read("interval2") / 2, "浮点型") '一半间距
                setParamValue(m1, "d58", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距    50
                '阵列4
                setParamValue(m1, "d59", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p61", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                '阵列5/模板4
                '模板4
                setParamValue(m1, "d66", read("louver_width") + read("interval2") / 2, "浮点型") '凸模宽度+一半间距
                setParamValue(m1, "d67", read("louver_length") / 2 + read("interval2"), "浮点型") '凸模一半长度+间距        50
                '阵列5
                setParamValue(m1, "d68", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p70", read("arrays_number2") / 2, "浮点型") '阵列数量的一半

                '阵列6/模板5
                '模板5
                setParamValue(m1, "d97", read("interval1") / 2, "浮点型") '凸模离中心的距离
                '阵列6
                setParamValue(m1, "d99", 12 + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p101", read("arrays_number3") / 2, "浮点型") '阵列数量的一半

                '阵列7/模板6
                '模板6
                setParamValue(m1, "d111", read("louver_width") + read("interval1") / 2, "浮点型") '凸模离中心的距离+凸模宽度
                '阵列7
                setParamValue(m1, "d113", read("louver_width") + read("interval2"), "浮点型") '阵列宽度（百叶窗的宽度+两百叶窗竖向间距）
                setParamValue(m1, "p115", read("arrays_number3") / 2, "浮点型") '阵列数量的一半

                '拉伸2
                setParamValue(m1, "d118", read("Center_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "d16", read("Plane_diameter"), "浮点型") '平面直径


                setParamValue(m1, "d18", read("Positioning_diameter"), "浮点型") '定位直径
                setParamValue(m1, "d20", read("Locating_hole_diameter"), "浮点型") '孔径


                m2 = activateModel("100louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)

                closeWindow(m2)
            End If

        ElseIf read("type") = 2 Then
            numbers.Add(3849) 'DTM1
            numbers.Add(2863) '阵列1/拉伸2
            numbers.Add(3056) '阵列2/拉伸3
            numbers.Add(414) '拉伸4
            numbers.Add(3764) '阵列3/模板1
            numbers.Add(3483) '拉伸5
            numbers.Add(3366) '凸缘1

            m1 = openModel("prt", "E:\works\creo\shield\shield1")
            retrieveModel("frm", "E:\works\creo\shield\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\shield\shield1")
            m2 = retrieveModel("prt", "E:\works\creo\shield\35louver.prt")
            m1 = activateModel("shield1", 1)
            partValue(m1)

            'RegenerateModel(m1)
            If read("type_1") = 1 Then            '防护罩8SB.314.2104
                numbers.Remove(2863) '阵列1/拉伸2
                numbers.Remove(3366) '凸缘1 
                numbers.Remove(3483) '拉伸5
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                AC.Session.CurrentWindow.Refresh()
                RegenerateModel(m1)

                '拉伸1
                setParamValue(m1, "d6", read("length"), "浮点型") '长
                setParamValue(m1, "d5", read("width"), "浮点型") '宽  
                setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度
                '阵列1/拉伸2
                '拉伸2
                setParamValue(m1, "d8", read("slot1_length"), "浮点型") '槽1长
                setParamValue(m1, "d11", read("slot1_width"), "浮点型") '槽1宽
                setParamValue(m1, "d10", (read("width") - read("slot1_width") * read("V_array_number") - read("Vertical_interval") * (read("V_array_number") - 1)) / 2, "浮点型") '槽到长的长
                setParamValue(m1, "d123", read("H_distance1"), "浮点型") '槽1到宽的长
                '阵列1
                setParamValue(m1, "d125", read("slot1_length") + read("Horizonta_interval"), "浮点型") '槽1长度方向的间距
                setParamValue(m1, "d124", read("slot1_width") + read("Vertical_interval"), "浮点型") '槽1宽度方向的间距
                setParamValue(m1, "P127", read("H_array_number"), "浮点型") '槽1长度方向的数量
                setParamValue(m1, "p126", read("V_array_number"), "浮点型") '槽1宽度方向阵列的数量

                '凸缘1
                setParamValue(m1, "d157", read("Hight"), "浮点型") '凸缘高度（都为20）

                '拉伸5
                setParamValue(m1, "d173", read("Hole_interval"), "浮点型") '孔间距
                setParamValue(m1, "d174", read("hole_to_edge"), "浮点型") '孔边距(都为10)
                setParamValue(m1, "d172", read("hole_diameter"), "浮点型") '孔径

            ElseIf read("type_1") = 2 Then           '防护罩8SB.314.2137
                numbers.Remove(2863) '阵列1/拉伸2 
                numbers.Remove(414) '拉伸4
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '拉伸1
                setParamValue(m1, "d6", read("length"), "浮点型") '长
                setParamValue(m1, "d5", read("width"), "浮点型") '宽  
                setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度  
                '阵列1/拉伸2
                '拉伸2
                setParamValue(m1, "d8", read("slot1_length"), "浮点型") '槽1长
                setParamValue(m1, "d11", read("slot1_width"), "浮点型") '槽1宽
                setParamValue(m1, "d10", (read("width") - read("slot1_width") * read("V_array_number") - read("Vertical_interval") * (read("V_array_number") - 1)) / 2, "浮点型") '槽1到长的长
                setParamValue(m1, "d123", read("H_distance1"), "浮点型") '槽1到宽的长
                '阵列1
                setParamValue(m1, "d125", read("slot1_length") + read("Horizonta_interval"), "浮点型") '长度方向的间距
                setParamValue(m1, "d124", read("slot1_width") + read("Vertical_interval"), "浮点型") '宽度方向的间距
                setParamValue(m1, "P127", read("H_array_number"), "浮点型") '长度方向的数量
                setParamValue(m1, "p126", read("V_array_number"), "浮点型") '宽度方向阵列的数量

                '拉伸4
                setParamValue(m1, "d26", read("H_distance2"), "浮点型") '槽2边宽
                setParamValue(m1, "d27", read("slot2_width"), "浮点型") '槽2半径
                setParamValue(m1, "d28", read("slot2_length"), "浮点型") '槽2长
                setParamValue(m1, "d29", read("slot2_interval"), "浮点型") '槽2间距
            ElseIf read("type_1") = 3 Then             '防护罩8SB.314.2100
                numbers.Remove(3056) '阵列2/拉伸3 
                numbers.Remove(414) '拉伸4
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '拉伸1
                setParamValue(m1, "d6", read("length"), "浮点型") '长
                setParamValue(m1, "d5", read("width"), "浮点型") '宽
                setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度  
                '阵列2/拉伸3
                '拉伸3
                setParamValue(m1, "d17", read("slot1_length"), "浮点型") '槽1长
                setParamValue(m1, "d18", read("slot1_width"), "浮点型") '槽1宽
                setParamValue(m1, "d19", (read("width") - read("slot1_width") * read("V_array_number") - read("Vertical_interval") * (read("V_array_number") - 1)) / 2, "浮点型") '槽1到长的长
                setParamValue(m1, "d130", read("H_distance1"), "浮点型") '槽1到宽的长
                '阵列2
                setParamValue(m1, "d134", read("slot1_length") + read("Horizonta_interval"), "浮点型") '长度方向的间距
                setParamValue(m1, "d133", read("slot1_width") + read("Vertical_interval"), "浮点型") '宽度方向的间距
                setParamValue(m1, "P135", read("V_array_number"), "浮点型") 'KUAN度方向的数量
                setParamValue(m1, "p136", read("H_array_number"), "浮点型") 'CHANG度方向阵列的数量

                '拉伸4
                setParamValue(m1, "d26", read("H_distance2"), "浮点型") '槽边宽
                setParamValue(m1, "d27", read("slot2_width"), "浮点型") '槽2半径
                setParamValue(m1, "d28", read("slot2_length"), "浮点型") '槽2长
                setParamValue(m1, "d29", read("slot2_interval"), "浮点型") '槽2间距
            ElseIf read("type_1") = 4 Then             '防护罩8SB.314.2351
                numbers.Remove(3849) 'DTM1
                numbers.Remove(2863) '阵列1/拉伸2
                numbers.Remove(3764) '阵列3/模板1
                numbers.Remove(3366) '凸缘1
                numbers.Remove(3483) '拉伸5

                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                'AC.Session.CurrentWindow.Refresh()
                'RegenerateModel(m1)
                '拉伸1
                setParamValue(m1, "d6", read("length"), "浮点型") '长
                setParamValue(m1, "d5", read("width"), "浮点型") '宽  
                setParamValue(m1, "d4", read("thickness"), "浮点型") '厚度

                '阵列1/拉伸2
                '拉伸2
                setParamValue(m1, "d8", read("slot1_length"), "浮点型") '槽1长
                setParamValue(m1, "d11", read("slot1_width"), "浮点型") '槽1宽
                setParamValue(m1, "d10", (read("width") - read("slot1_width") * read("V_array_number") - read("Vertical_interval") * (read("V_array_number") - 1)) / 2, "浮点型") '槽1到长的长
                setParamValue(m1, "d123", read("slot_louver_length") + 2 * (read("louver_width") * read("arrays_number3") + read("interval2") * (read("arrays_number3") - 1)) + read("louver_louver_length") + read("interval1"), "浮点型") '槽1到宽的长
                '阵列1
                setParamValue(m1, "d125", read("slot1_length") + read("Horizonta_interval"), "浮点型") '长度方向的间距
                setParamValue(m1, "d124", read("slot1_width") + read("Vertical_interval"), "浮点型") '宽度方向的间距
                setParamValue(m1, "P127", read("H_array_number"), "浮点型") '长度方向的数量
                setParamValue(m1, "p126", read("V_array_number"), "浮点型") '宽度方向阵列的数量

                '凸缘1
                setParamValue(m1, "d157", read("Hight"), "浮点型") '凸缘高度（都为20）

                '拉伸5
                setParamValue(m1, "d173", read("Hole_interval"), "浮点型") '孔间距
                setParamValue(m1, "d174", read("hole_to_edge"), "浮点型") '孔边距(都为10)
                setParamValue(m1, "d172", read("hole_diameter"), "浮点型") '孔径

                'DIM1
                setParamValue(m1, "d199", read("interval1") + read("louver_width") * read("arrays_number3") + read("interval2") * (read("arrays_number3") - 1) + read("louver_louver_length") / 2, "浮点型") '镜像间距

                '阵列3
                setParamValue(m1, "d195", read("louver_width") + read("interval2"), "浮点型") '阵列间距（字段与type_1=1模板5相同）
                setParamValue(m1, "p197", read("arrays_number3"), "浮点型") '阵列数量（字段与type_1=1模板5相同）
                '模板1
                setParamValue(m1, "d122", read("interval1"), "浮点型") '模板到边的距离（字段与type_1=1模板5相同）
                m2 = activateModel("35louver", 1)
                setParamValue(m2, "d1", read("louver_length"), "浮点型") '模板长
                setParamValue(m2, "d2", read("louver_width"), "浮点型") '模板宽
                RegenerateModel(m2)
                closeWindow(m2)

            End If
            m1 = activateModel("shield1", 1)
            setParamValue(m1, "d208", read("slot2_interval") / 2, "浮点型") '折弯半径
            setParamValue(m1, "d209", read("bend_radius"), "浮点型") '折弯半径
        End If




        numbers.Clear()

        'RegenerateModel(m1)
        ExportJpg(path, imageName)
        Threading.Thread.Sleep(5000)

        If read("type") = 1 Then
            m3 = activateModel("shield2", 1)
            selBuffer = session.CurrentSelectionBuffer
            selBuffer.Clear()
            note_Item_12 = m3.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d20")
        ElseIf read("type") = 2 Then
            m3 = activateModel("shield1", 1)
            selBuffer = session.CurrentSelectionBuffer
            selBuffer.Clear()
        End If

        RegenerateModel(m1)
        Threading.Thread.Sleep(10000)
        If read("type") = 1 Then
            m3 = activateModel("shield2", 2)
            If read("type_1") = 3 Then
                modelItems = listModelItem(m3, "DIMENSION")
                删除注释符号(modelItems， 1)
                modelItems = listModelItem(m3, "DTL_NOTE")
                change_txt_note_text(modelItems， modelItems.Count - 1, read("arrays_number3").ToString + "排")
                change_txt_note_text(modelItems， modelItems.Count - 2, read("arrays_number1").ToString + "排")
                change_txt_note_text(modelItems， modelItems.Count - 3, read("arrays_number2").ToString + "排")
                修改绘制尺寸值_new(note_Item_12， read("hole_number"))
            Else
                modelItems = listModelItem(m3, "DIMENSION")
                删除注释符号(modelItems， 4)
                删除注释符号(modelItems， 5)
                modelItems = listModelItem(m3, "DTL_NOTE")
                删除注释符号(modelItems， modelItems.Count - 1)
                change_txt_note_text(modelItems， modelItems.Count - 2, read("arrays_number1").ToString + "排")
                change_txt_note_text(modelItems， modelItems.Count - 3, read("arrays_number2").ToString + "排")
                修改绘制尺寸值_new(note_Item_12， read("hole_number"))
            End If
            RegenerateModel(m3)
        ElseIf read("type") = 2 Then
            m3 = activateModel("shield1", 2)
            drawing = CType(m3, IpfcDrawing)
            RegenerateModel(m3)
            If read("type_1") = 1 Or read("type_1") = 2 Then
                modelItems = listModelItem(m3, "DIMENSION")
                删除注释符号(modelItems， 0)
                删除注释符号(modelItems， 1)
                删除注释符号(modelItems， 2)
                删除注释符号(modelItems， 3)
                modelItems = listModelItem(m3, "DTL_NOTE")
                删除注释符号(modelItems， modelItems.Count - 1)
                删除注释符号(modelItems， modelItems.Count - 2)
                删除注释符号(modelItems， modelItems.Count - 4)
                删除注释符号_name(listModelItem_1(m3, "DIMENSION", "add23"))
                删除注释符号_name(listModelItem_1(m3, "DIMENSION", "add21"))
                change_txt_note_text(modelItems， modelItems.Count - 3, read("V_array_number").ToString + "排" + read("H_array_number").ToString + "列")
            ElseIf read("type_1") = 3 Then
                modelItems = listModelItem(m3, "DIMENSION")
                删除注释符号(modelItems， 0)
                删除注释符号(modelItems， 1)
                删除注释符号(modelItems， 2)
                删除注释符号(modelItems， 3)
                删除注释符号_name(listModelItem_1(m3, "DIMENSION", "add15"))
                删除注释符号_name(listModelItem_1(m3, "DIMENSION", "add17"))
                modelItems = listModelItem(m3, "DTL_NOTE")
                删除注释符号(modelItems， modelItems.Count - 1)
                删除注释符号(modelItems， modelItems.Count - 2)
                删除注释符号(modelItems， modelItems.Count - 3)
                change_txt_note_text(modelItems， modelItems.Count - 4, read("V_array_number").ToString + "排" + read("H_array_number").ToString + "列")
            ElseIf read("type_1") = 4 Then
                modelItems = listModelItem(m3, "DTL_NOTE")
                删除注释符号(modelItems， modelItems.Count - 4)
                change_txt_note_text(modelItems， modelItems.Count - 1, read("arrays_number3").ToString + "排")
                change_txt_note_text(modelItems， modelItems.Count - 2, read("arrays_number1").ToString + "排")
                change_txt_note_text(modelItems， modelItems.Count - 3, read("V_array_number").ToString + "排" + read("H_array_number").ToString + "列")
            End If
            'm3.Rename(read("CODE"), True)
            RegenerateModel(m3)
        End If
        m1.Display()
        drawing = CType(m3, IpfcDrawing)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION

        If read("type") = 2 Then
            view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            view2Ds.Item(2).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            'view2Ds.Item(3).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            'If read("length") <= 1200 Then
            '    view2Ds.Item(0).Scale = 1 / 4
            '    view2Ds.Item(1).Scale = 1 / 4
            '    view2Ds.Item(2).Scale = 1 / 4
            '    view2Ds.Item(3).Scale = 1 / 4
            'ElseIf read("length") > 1200 And read("length") <= 1600 Then
            '    view2Ds.Item(0).Scale = 1 / 6
            '    view2Ds.Item(1).Scale = 1 / 6
            '    view2Ds.Item(2).Scale = 1 / 6
            '    view2Ds.Item(3).Scale = 1 / 6
            'ElseIf read("length") > 1600 And read("length") <= 2000 Then
            '    view2Ds.Item(0).Scale = 1 / 8
            '    view2Ds.Item(1).Scale = 1 / 8
            '    view2Ds.Item(2).Scale = 1 / 8
            '    view2Ds.Item(3).Scale = 1 / 8
            'ElseIf read("length") > 2000 Then
            '    view2Ds.Item(0).Scale = 1 / 10
            '    view2Ds.Item(1).Scale = 1 / 10
            '    view2Ds.Item(2).Scale = 1 / 10
            '    view2Ds.Item(3).Scale = 1 / 10
            'End If
            note_Item_1 = listModelItem_1(m3, "DTL_NOTE", "Note_76")
            '修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
            修改注释_name(note_Item_1, view2Ds.Item(0).Scale.ToString)
        Else
            view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
            'If read("Plane_diameter") <= 400 Then
            '    view2Ds.Item(0).Scale = 1 / 2
            '    view2Ds.Item(1).Scale = 1 / 2
            'ElseIf read("Plane_diameter") > 400 And read("Plane_diameter") <= 600 Then
            '    view2Ds.Item(0).Scale = 1 / 4
            '    view2Ds.Item(1).Scale = 1 / 4
            'ElseIf read("Plane_diameter") > 600 And read("Plane_diameter") <= 800 Then
            '    view2Ds.Item(0).Scale = 1 / 6
            '    view2Ds.Item(1).Scale = 1 / 6
            'ElseIf read("Plane_diameter") > 800 Then
            '    view2Ds.Item(0).Scale = 1 / 8
            '    view2Ds.Item(1).Scale = 1 / 8
            'End If
            note_Item_1 = listModelItem_1(m3, "DTL_NOTE", "Note_30")
            修改注释_name(note_Item_1, view2Ds.Item(0).Scale.ToString)
        End If
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m3, read("T_MOTOR"))
        RegenerateModel(m1)
        AC.Session.RunMacro("~ Activate `main_dlg_cur` `page_Review_control_btn` 1;\")
        AC.Session.RunMacro("~ Command `ProCmdDwgRegenModel`;")
        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        m3.Rename(read("CODE"), True)
        RegenerateModel(activateModel(m3.FullName, 1))
        closeWindow(m3)
        smodel = drawing.Descr
        'smodel = m1.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()



    End Sub
    ' 无工程图
    Public Sub close_mask(localhost$, tabledase$, ID#, path$, imageName$)

        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        deleteFileChangeModel_new("asm", "E:\works\creo\close_mask\mask.asm", "mask.asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        m2 = activateModel("sb_cylinder.prt", 1)
        setParamValue(m2, "d5", read("diameter"), "浮点型")
        setParamValue(m2, "d4", read("length"), "浮点型") '轴向长度
        RegenerateModel(m2)
        closeWindow(m2)
        RegenerateModel(m1)

        m1.Rename(read("CODE"), True)

        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()

        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
    End Sub
    ' 无工程图
    Public Sub waizhao(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        deleteFileChangeModel_new("asm", "E:\works\creo\outer_cover\dj22_031_06.asm", "dj22_031_06.asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        m2 = activateModel("dj22_031_06-01.prt", 1)
        setParamValue(m2, "d5", read("diameter") * PI, "浮点型")
        setParamValue(m2, "d9", read("length"), "浮点型") '外罩长
        RegenerateModel(m2)
        closeWindow(m2)
        RegenerateModel(m1)

        m1.Rename(read("CODE"), True)

        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
    End Sub
    Public Sub front_cover(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        If read("house_number") = 180 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\180\8ly_013_180")
                retrieveModel("frm", "E:\works\creo\front_cover\180\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\180\8ly_013_180")
                m1 = activateModel("8ly_013_180", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d10", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d11", read("thickness_3"), "浮点型") '后法兰厚度
                '止口()
                setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '310<f_stop_diameter<344
                '4.9新增
                '止口
                setParamValue(m1, "d133", read("止口深度"), "浮点型") '后法兰止口深度
                setParamValue(m1, "d56", read("孔大小"), "浮点型")
                setParamValue(m1, "p62", read("孔个数"), "浮点型")
            ElseIf read("support_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\180\8ly_013_181")
                retrieveModel("frm", "E:\works\creo\front_cover\180\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\180\8ly_013_181")
                m1 = activateModel("8ly_013_181", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d11", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d12", read("thickness_3"), "浮点型") '后法兰厚度
                setParamValue(m1, "d28", read("thickness_4"), "浮点型") '轴承厚度

                'setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                'setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '276<f_stop_diameter<308
            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 200 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\200\8ly_013_200")
                retrieveModel("frm", "E:\works\creo\front_cover\200\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\200\8ly_013_200")
                m1 = activateModel("8ly_013_200", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d10", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d11", read("thickness_3"), "浮点型") '后法兰厚度

                setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '360<f_stop_diameter<385

                '4.9新增
                '止口
                setParamValue(m1, "d108", read("止口深度"), "浮点型") '后法兰止口深度
                setParamValue(m1, "d58", read("孔大小"), "浮点型")
                setParamValue(m1, "p62", read("孔个数"), "浮点型")
            ElseIf read("support_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\200\8ly_013_201")
                retrieveModel("frm", "E:\works\creo\front_cover\200\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\200\8ly_013_201")
                m1 = activateModel("8ly_013_201", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d11", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d12", read("thickness_3"), "浮点型") '后法兰厚度
                setParamValue(m1, "d28", read("thickness_4"), "浮点型") '轴承厚度

                'setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                'setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '360<f_stop_diameter<385
            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 250 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\250\8ly_013_250")
                retrieveModel("frm", "E:\works\creo\front_cover\250\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\250\8ly_013_250")
                m1 = activateModel("8ly_013_250", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d10", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d11", read("thickness_3"), "浮点型") '后法兰厚度

                setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '397<f_stop_diameter<408

                '4.9新增
                '止口
                setParamValue(m1, "d145", read("止口深度"), "浮点型") '后法兰止口深度
                setParamValue(m1, "d58", read("孔大小"), "浮点型")
                setParamValue(m1, "p62", read("孔个数"), "浮点型")
            ElseIf read("support_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\250\8ly_013_251")
                retrieveModel("frm", "E:\works\creo\front_cover\250\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\250\8ly_013_251")
                m1 = activateModel("8ly_013_251", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d11", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d12", read("thickness_3"), "浮点型") '后法兰厚度
                setParamValue(m1, "d28", read("thickness_4"), "浮点型") '轴承厚度

                ''前法兰止口
                'setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                'setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '397<f_stop_diameter<408

            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 280 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\280\8ly_013_280")
                retrieveModel("frm", "E:\works\creo\front_cover\280\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\280\8ly_013_280")
                m1 = activateModel("8ly_013_280", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d10", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d11", read("thickness_3"), "浮点型") '后法兰厚度

                setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '428<f_stop_diameter<448
                '后法兰止口
                setParamValue(m1, "d7", read("h_stop_depth"), "浮点型") 'f_stop_depth
                'setParamValue(m1, "d8", read("h_stop_diameter"), "浮点型") '514<f_stop_diameter<544

            ElseIf read("support_type") = 2 Then
                m1 = openModel("asm", "E:\works\creo\front_cover\281\start_asm")
                retrieveModel("frm", "E:\works\creo\front_cover\280\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\280\8ly_013_281")
                m1 = activateModel("start_asm", 0)
                partValue(m1)
                m1.CommonName = read("NAME")
                m2 = activateModel("8ly_013_281", 1)
                setParamValue(m2, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m2, "d66", read("datum_distance"), "浮点型") '厚度
                setParamValue(m2, "d67", read("thickness_3"), "浮点型") '后法兰厚度


                m2.Rename(read("CODE") + "_1", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel("start_asm", 0)
                m2 = activateModel("8ly_314_2142", 1)
                m2.Rename(read("CODE") + "_2", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel("start_asm", 0)
                m2 = activateModel("8ly_314_2143", 1)
                m2.Rename(read("CODE") + "_3", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel(m1.FileName, 0)
            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 355 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\355\8ly_013_355")
                retrieveModel("frm", "E:\works\creo\front_cover\355\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\355\8ly_013_355")
                m1 = activateModel("8ly_013_355", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d10", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d11", read("thickness_3"), "浮点型") '后法兰厚度

                setParamValue(m1, "d7", read("f_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d8", read("f_stop_diameter"), "浮点型") '624<f_stop_diameter<655
                '后法兰止口
                setParamValue(m1, "d43", read("h_stop_depth"), "浮点型") 'f_stop_depth
                setParamValue(m1, "d44", read("h_stop_diameter"), "浮点型") '659<f_stop_diameter<665
            ElseIf read("support_type") = 2 Then
                m1 = openModel("asm", "E:\works\creo\front_cover\356\start_asm")
                retrieveModel("frm", "E:\works\creo\front_cover\355\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\355\8ly_013_356")


                m1 = activateModel("start_asm", 0)
                partValue(m1)
                m1.CommonName = read("NAME")
                m2 = activateModel("8ly_013_356", 1)
                setParamValue(m2, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m2, "d121", read("datum_distance"), "浮点型") '厚度
                setParamValue(m2, "d122", read("thickness_3"), "浮点型") '后法兰厚度
                m2.Rename(read("CODE") + "_1", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel("start_asm", 0)
                m2 = activateModel("8ly_314_2142", 1)
                m2.Rename(read("CODE") + "_2", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel("start_asm", 0)

                m2 = activateModel("8ly_314_2143", 1)
                m2.Rename(read("CODE") + "_3", True)
                m2.CommonName = read("NAME")
                m2.Regenerate(Nothing)
                m1 = activateModel(m1.FileName, 0)
            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 400 Then
            If read("support_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\400\8ly_013_400")
                retrieveModel("frm", "E:\works\creo\front_cover\400\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\400\8ly_013_400")
                m1 = activateModel("8ly_013_400", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d19", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d20", read("thickness_3"), "浮点型") '后法兰厚度
            ElseIf read("support_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\front_cover\400\8ly_013_401")
                retrieveModel("frm", "E:\works\creo\front_cover\400\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\front_cover\400\8ly_013_401")
                m1 = activateModel("8ly_013_401", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '前法兰厚度
                setParamValue(m1, "d15", read("datum_distance"), "浮点型") '厚度
                setParamValue(m1, "d16", read("thickness_3"), "浮点型") '后法兰厚度
            End If
            RegenerateModel(m1)
        ElseIf read("house_number") = 600 Then '封闭
            m1 = openModel("asm", "E:\works\creo\front_cover\600\5ly_013_010")
            retrieveModel("frm", "E:\works\creo\front_cover\600\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\front_cover\600\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\front_cover\600\5ly_013_010")
            retrieveModel("drw", "E:\works\creo\front_cover\600\8ly_013_012")
            m1 = activateModel("5ly_013_010", 0)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("8ly_013_011", 1)
            partValue(m1)
            setParamValue(m1, "d5", read("outer_diameter_1"), "浮点型") '端盖外径410
            setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度70
            setParamValue(m1, "d14", read("inside_diameter_4"), "浮点型") '与基座配合内径362
            setParamValue(m1, "d12", read("thickness_4"), "浮点型") '与基座配合深度28
            setParamValue(m1, "d17", read("outer_diameter_5"), "浮点型") ''筋条外接外径303
            setParamValue(m1, "d20", read("inside_diameter_3"), "浮点型") '筋条内接内径192
            setParamValue(m1, "d18", read("thickness_3"), "浮点型") '深度38
            setParamValue(m1, "d7", read("outer_diameter_2"), "浮点型") '端盖内径160
            m1.CommonName = "前端盖"
            m1.Rename(read("front_cover_code"), True)
            AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
            Threading.Thread.Sleep(1000)
            closeWindow(m1)
            m1 = activateModel("5ly_013_010", 0)
            AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
            Threading.Thread.Sleep(1000)
            closeWindow(m1)
            m1 = activateModel("8ly_013_012", 1)
            setParamValue(m1, "d9", read("inside_diameter_6"), "浮点型") '轴承外径160
            setParamValue(m1, "d8", read("thickness_6"), "浮点型") '轴承厚度70
            m1.CommonName = "轴套"
            AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
            closeWindow(m1)
            Threading.Thread.Sleep(1000)
            m2 = activateModel("8ly_013_012", 2)
            drawing = CType(m2, IpfcDrawing)
            m2.Rename(read("bushing_code"), True)
            m1.Rename(read("bushing_code"), True)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel(read("bushing_code"), 1)
            AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
            smodel = drawing.Descr
            smodel.Path = path
            drawing.Backup(smodel)
            'closeWindow(m2)
            closeWindow(m1)
            m1 = activateModel("5ly_013_010", 0)
            Threading.Thread.Sleep(1000)
        End If
        numbers.Clear()

        ExportJpg(path, imageName)
        If read("house_number") = 180 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_180", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_181", 2)
            End If
        ElseIf read("house_number") = 200 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_200", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_201", 2)
            End If
        ElseIf read("house_number") = 250 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_250", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_251", 2)
            End If
        ElseIf read("house_number") = 280 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_280", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_281", 2)
            End If
        ElseIf read("house_number") = 355 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_355", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_356", 2)
            End If
        ElseIf read("house_number") = 400 Then
            If read("support_type") = 1 Then
                m2 = activateModel("8ly_013_400", 2)
            ElseIf read("support_type") = 2 Then
                m2 = activateModel("8ly_013_401", 2)
            End If
        ElseIf read("house_number") = 600 Then
            m2 = activateModel("5ly_013_010", 2)
        End If
        drawing = CType(m2, IpfcDrawing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})

        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)
        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            activateModel(m1.FileName, 0)
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            activateModel(m1.FileName, 1)
        End If
        RegenerateModel(m1)
        closeWindow(m1)
        If read("house_number") = 355 Or read("house_number") = 280 Then
            If read("support_type") = 2 Then
                activateModel(m1.FileName, 0)
                AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
            Else
                activateModel(m1.FileName, 1)
                AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
            End If

        Else
        End If
        If read("house_number") = 355 Or read("house_number") = 280 Then
            If read("support_type") = 2 Then
                smodel = m1.Descr
                smodel.Path = path
                m1.Backup(smodel)
            Else
            End If
        Else
        End If
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()


        If read("isopen") = "1" Then
            If read("support_type") = 1 Then
                openModel("prt", path + "\" + read("CODE")）
            ElseIf read("support_type") = 2 Then

                If read("house_number") = 355 Or read("house_number") = 280 Then
                    openModel("asm", path + "\" + read("CODE")）

                Else
                    openModel("prt", path + "\" + read("CODE")）
                End If
            End If
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub rear_cover(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        If read("house_number") = 180 Then
            numbers.Add(333) '拉伸7
            m1 = openModel("prt", "E:\works\creo\rear_cover\180\8ly_014_180")
            retrieveModel("frm", "E:\works\creo\rear_cover\180\part_a3_sb")
            retrieveModel("drw", "E:\works\creo\rear_cover\180\8ly_014_180")
            m1 = activateModel("8ly_014_180", 1)

            partValue(m1)
            If read("thickness_7") <> 0 Then
                numbers.Remove(333)
                setParamValue(m1, "d19", read("thickness_7"), "浮点型") '厚度
            End If
            For i = 0 To numbers.Count - 1
                deleteFeature(m1, numbers(i))
            Next
            setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度
            setParamValue(m1, "d8", read("thickness_3"), "浮点型") '装配轴承轴向长度
            setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
            setParamValue(m1, "d17", read("thickness_6"), "浮点型") '厚度

            setParamValue(m1, "d37", read("rib_wide"), "浮点型") '筋宽
        ElseIf read("house_number") = 200 Then
            If read("bracket_type") = 2 Then
                numbers.Add(333) '拉伸7
                m1 = openModel("prt", "E:\works\creo\rear_cover\200\8ly_014_200")
                retrieveModel("frm", "E:\works\creo\rear_cover\200\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\200\8ly_014_200")
                m1 = activateModel("8ly_014_200", 1)
                partValue(m1)
                If read("thickness_7") <> 0 Then
                    numbers.Remove(333)
                    setParamValue(m1, "d19", read("thickness_7"), "浮点型") '厚度
                End If
                For i = 0 To numbers.Count - 1
                    deleteFeature(m1, numbers(i))
                Next
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度
                setParamValue(m1, "d8", read("thickness_3"), "浮点型") '装配轴承轴向长度
                setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
                setParamValue(m1, "d17", read("thickness_6"), "浮点型") '厚度

                setParamValue(m1, "d37", read("rib_wide"), "浮点型") '筋宽
            ElseIf read("bracket_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\200\8ly_014_201")
                retrieveModel("frm", "E:\works\creo\rear_cover\200\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\200\8ly_014_201")
                m1 = activateModel("8ly_014_201", 1)
                partValue(m1)
                setParamValue(m1, "d5", read("thickness_1"), "浮点型") '端盖厚度
                setParamValue(m1, "d8", read("thickness_3"), "浮点型") '装配轴承轴向长度
                setParamValue(m1, "d68", read("thickness_4"), "浮点型") '伸出长度
                setParamValue(m1, "d17", read("thickness_6"), "浮点型")
                setParamValue(m1, "d76", read("rib_high_1"), "浮点型")
            End If
        ElseIf read("house_number") = 250 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\250\8ly_014_250")
                retrieveModel("frm", "E:\works\creo\rear_cover\250\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\250\8ly_014_250")
                m1 = activateModel("8ly_014_250", 1)
                partValue(m1)
                If read("thickness_7") <> 0 Then
                    deleteFeature(m1, 7999)
                End If
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '厚度
                setParamValue(m1, "d8", read("thickness_3"), "浮点型") '厚度
                setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
                setParamValue(m1, "d15", read("thickness_6"), "浮点型") '厚度
                setParamValue(m1, "d17", read("thickness_7"), "浮点型") '厚度
                setParamValue(m1, "d19", read("thickness_8"), "浮点型") '厚度
                setParamValue(m1, "d21", read("rib_high"), "浮点型") '筋高
                setParamValue(m1, "d23", read("rib_inside_wide"), "浮点型") '筋内侧距离
                setParamValue(m1, "d24", read("rib_outer_wide"), "浮点型") '筋外侧距离

            ElseIf read("bracket_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\250\8ly_014_251")
                retrieveModel("frm", "E:\works\creo\rear_cover\250\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\250\8ly_014_251")
                m1 = activateModel("8ly_014_251", 1)
                partValue(m1)
                setParamValue(m1, "d97", read("thickness_4"), "浮点型") '伸出长度
                setParamValue(m1, "d107", read("rib_high_1"), "浮点型")
            End If
        ElseIf read("house_number") = 280 Then
            If read("bracket_type") = 2 Then
                If read("rear_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\rear_cover\280\8ly_014_283")
                    retrieveModel("frm", "E:\works\creo\rear_cover\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rear_cover\280\8ly_014_283")
                    m1 = activateModel("8ly_014_283", 1)
                    partValue(m1)
                    'If read("chamfer") <> 0 Then
                    '    deleteFeature(m1, 8612)
                    'End If

                    setParamValue(m1, "d4", read("thickness_1"), "浮点型") '厚度
                    setParamValue(m1, "d8", read("thickness_3"), "浮点型") '厚度
                    setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
                    setParamValue(m1, "d187", read("rib_inside_wide"), "浮点型") '筋内侧距离
                    setParamValue(m1, "d186", read("rib_outer_wide"), "浮点型") '筋外侧距离
                    setParamValue(m1, "p195", read("rib_number"), "浮点型") '筋数

                    'setParamValue(m1, "d4", read("thickness_1"), "浮点型") '厚度
                    'setParamValue(m1, "d8", read("thickness_3"), "浮点型") '厚度
                    'setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
                    'setParamValue(m1, "d15", read("thickness_6"), "浮点型") '厚度
                    'setParamValue(m1, "d17", read("thickness_7"), "浮点型") '厚度
                    'setParamValue(m1, "d19", read("thickness_8"), "浮点型") '厚度
                    'setParamValue(m1, "d21", read("rib_high"), "浮点型") '筋高
                    'setParamValue(m1, "d23", read("rib_inside_wide"), "浮点型") '筋内侧距离
                    'setParamValue(m1, "d24", read("rib_outer_wide"), "浮点型") '筋外侧距离
                    'setParamValue(m1, "p33", read("rib_number"), "浮点型") '筋数
                End If
            ElseIf read("bracket_type") = 1 Then
                If read("rear_type") = 2 Then
                    m1 = openModel("prt", "E:\works\creo\rear_cover\280\8ly_014_284")
                    retrieveModel("frm", "E:\works\creo\rear_cover\280\part_a3_sb")
                    retrieveModel("drw", "E:\works\creo\rear_cover\280\8ly_014_284")
                    m1 = activateModel("8ly_014_284", 1)
                    partValue(m1)
                    'If read("chamfer") <> 0 Then
                    '    deleteFeature(m1, 10245)
                    'End If
                    'setParamValue(m1, "d4", read("thickness_1"), "浮点型") '厚度
                    'setParamValue(m1, "d8", read("thickness_3"), "浮点型") '厚度
                    'setParamValue(m1, "d10", read("thickness_4"), "浮点型") '厚度
                    'setParamValue(m1, "d15", read("thickness_6"), "浮点型") '厚度
                    'setParamValue(m1, "d17", read("thickness_7"), "浮点型") '厚度
                    'setParamValue(m1, "d19", read("thickness_8"), "浮点型") '内径 ‘thickness_6=thickness_8
                    'setParamValue(m1, "d21", read("rib_high"), "浮点型") '筋高
                    'setParamValue(m1, "d234", read("rib_high_1"), "浮点型") '筋高
                    'setParamValue(m1, "d23", read("rib_inside_wide"), "浮点型") '筋内侧距离
                    'setParamValue(m1, "d24", read("rib_outer_wide"), "浮点型") '筋外侧距离
                    'setParamValue(m1, "p33", read("rib_number"), "浮点型") '筋数 
                    'setParamValue(m1, "d197", read("table_high"), "浮点型") '台高
                    'setParamValue(m1, "p203", read("rib_number"), "浮点型") '筋数
                    'setParamValue(m1, "d207", read("table_cut_high"), "浮点型") '切除深
                    'setParamValue(m1, "p229", read("rib_number"), "浮点型") '孔数   

                    setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度
                    setParamValue(m1, "d8", read("thickness_3"), "浮点型") '装配轴承轴向长度
                    setParamValue(m1, "d197", read("thickness_4"), "浮点型") '伸出长度
                    setParamValue(m1, "d207", read("rib_high_1"), "浮点型")
                End If
            End If
        ElseIf read("house_number") = 355 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\355\8ly_014_355")
                retrieveModel("frm", "E:\works\creo\rear_cover\355\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\355\8ly_014_355")
                m1 = activateModel("8ly_014_355", 1)
                partValue(m1)
                setParamValue(m1, "d20", read("thickness_1"), "浮点型") '端盖厚度
                setParamValue(m1, "d24", read("thickness_3"), "浮点型") '装配轴承轴向长度
                setParamValue(m1, "p49", read("rib_number"), "浮点型") '筋数 不大于7个
            ElseIf read("bracket_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\355\8ly_014_356")
                retrieveModel("frm", "E:\works\creo\rear_cover\355\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\355\8ly_014_356")
                m1 = activateModel("8ly_014_356", 1)
                partValue(m1)
                setParamValue(m1, "d20", read("thickness_1"), "浮点型") '端盖厚度
                setParamValue(m1, "d24", read("thickness_3"), "浮点型") '装配轴承轴向长度
                setParamValue(m1, "d115", read("thickness_4"), "浮点型") '伸出长度
                setParamValue(m1, "d132", read("rib_high_1"), "浮点型")
            End If
        ElseIf read("house_number") = 400 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\400\8ly_014_400")
                retrieveModel("frm", "E:\works\creo\rear_cover\400\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\400\8ly_014_400")
                m1 = activateModel("8ly_014_400", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '厚度
            ElseIf read("bracket_type") = 1 Then
                m1 = openModel("prt", "E:\works\creo\rear_cover\400\8ly_014_401")
                retrieveModel("frm", "E:\works\creo\rear_cover\400\part_a3_sb")
                retrieveModel("drw", "E:\works\creo\rear_cover\400\8ly_014_401")
                m1 = activateModel("8ly_014_401", 1)
                partValue(m1)
                setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度
                setParamValue(m1, "d128", read("thickness_4"), "浮点型") '伸出长度
                setParamValue(m1, "d146", read("rib_high_1"), "浮点型")
            End If
        ElseIf read("house_number") = 500 Then  '水冷
            m1 = openModel("asm", "E:\works\creo\rear_cover\600\8ly_013_020")
            retrieveModel("frm", "E:\works\creo\rear_cover\600\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\rear_cover\600\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\rear_cover\600\8ly_013_020")
            retrieveModel("drw", "E:\works\creo\rear_cover\600\8ly_013_022")
            m1 = activateModel("8ly_013_020", 0)
            m1 = activateModel("8ly_013_021", 1)
            partValue(m1)
            '端盖
            setParamValue(m1, "d5", read("outer_diameter_1"), "浮点型") '端盖外径
            setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度
            setParamValue(m1, "d11", read("inside_diameter_4"), "浮点型") '与基座配合内径
            setParamValue(m1, "d10", read("thickness_4"), "浮点型") '与基座配合深度
            setParamValue(m1, "d9", read("inside_diameter_3"), "浮点型") '筋条内接内径
            setParamValue(m1, "d8", read("thickness_3"), "浮点型") '深度
            setParamValue(m1, "d13", read("outer_diameter_5"), "浮点型") '筋条外接外径
            setParamValue(m1, "d12", read("thickness_5"), "浮点型") '筋条厚度
            setParamValue(m1, "d7", read("outer_diameter_2"), "浮点型") '轴承外径
            setParamValue(m1, "d6", read("thickness_2"), "浮点型") '轴承高
            setParamValue(m1, "d97", read("diameter_6"), "浮点型") '定位螺栓组直径
            m1.CommonName = "后端盖"
            m1.Rename(read("rear_cover_code"), True)
            m1.Regenerate(Nothing)
            Threading.Thread.Sleep(1000)
            closeWindow(m1)
            m2 = activateModel("8ly_013_022", 1)
            m2.CommonName = "轴套"
            m2.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m3 = activateModel("8ly_013_022", 2)
            drawing = CType(m3, IpfcDrawing)
            m3.Rename(read("bushing_code"), True)
            m2.Rename(read("bushing_code"), True)
            smodel = m3.Descr
            smodel.Path = path
            m3.Backup(smodel)
            closeWindow(m3)
            closeWindow(m2)
            m1 = activateModel("8ly_013_020", 0)
        ElseIf read("house_number") = 600 Then  '封闭
            m1 = openModel("asm", "E:\works\creo\rear_cover\600\5ly_014_010")
            retrieveModel("frm", "E:\works\creo\rear_cover\600\asm_a3_sb")
            retrieveModel("frm", "E:\works\creo\rear_cover\600\part_a3_sb")
            retrieveModel("frm", "E:\works\creo\rear_cover\600\part_a4_sb")
            retrieveModel("drw", "E:\works\creo\rear_cover\600\5ly_014_010")
            retrieveModel("drw", "E:\works\creo\rear_cover\600\8ly_014_011")
            retrieveModel("drw", "E:\works\creo\rear_cover\600\8ly_014_012")
            m1 = activateModel("5ly_014_010", 0)
            m1 = activateModel("8ly_014_011", 1)
            partValue(m1)
            setParamValue(m1, "d5", read("outer_diameter_1"), "浮点型") '端盖外径380
            setParamValue(m1, "d4", read("thickness_1"), "浮点型") '端盖厚度42
            setParamValue(m1, "d27", read("inside_diameter_4"), "浮点型") '与基座配合内径340
            setParamValue(m1, "d26", read("thickness_4"), "浮点型") '与基座配合深度8
            setParamValue(m1, "d9", read("outer_diameter_5"), "浮点型") ''筋条外接外径320
            setParamValue(m1, "d10", read("inside_diameter_3"), "浮点型") '筋条内接内径154
            setParamValue(m1, "d8", read("thickness_3"), "浮点型") '深度14
            setParamValue(m1, "d7", read("outer_diameter_2"), "浮点型") '轴承外径126
            m1.CommonName = "后端盖"
            m1.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m2 = activateModel("8ly_014_011", 2)
            drawing = CType(m2, IpfcDrawing)
            m2.Rename(read("rear_cover_code"), True)
            m1.Rename(read("rear_cover_code"), True)
            smodel = m2.Descr
            smodel.Path = path
            m2.Backup(smodel)
            closeWindow(m2)
            closeWindow(m1)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("8ly_014_012", 1)
            m1.CommonName = "轴套"
            m1.Regenerate(Nothing)
            Threading.Thread.Sleep(500)
            m2 = activateModel("8ly_014_012", 2)
            drawing = CType(m2, IpfcDrawing)
            m2.Rename(read("bushing_code"), True)
            m1.Rename(read("bushing_code"), True)
            smodel = m2.Descr
            smodel.Path = path
            m2.Backup(smodel)
            closeWindow(m2)
            closeWindow(m1)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("5ly_014_010", 0)
        End If
        numbers.Clear()
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        If read("house_number") = 180 Then
            m2 = activateModel("8ly_014_180", 2)
        ElseIf read("house_number") = 200 Then
            If read("bracket_type") = 2 Then
                m2 = activateModel("8ly_014_200", 2)
            ElseIf read("bracket_type") = 1 Then
                m2 = activateModel("8ly_014_201", 2)
            End If
        ElseIf read("house_number") = 250 Then
            If read("bracket_type") = 2 Then
                m2 = activateModel("8ly_014_250", 2)
            ElseIf read("bracket_type") = 1 Then
                m2 = activateModel("8ly_014_251", 2)
            End If
        ElseIf read("house_number") = 280 Then
            If read("bracket_type") = 2 Then
                If read("rear_type") = 1 Then
                    m2 = activateModel("8ly_014_281", 2)
                ElseIf read("rear_type") = 2 Then
                    m2 = activateModel("8ly_014_283", 2)
                End If
            ElseIf read("bracket_type") = 1 Then
                If read("rear_type") = 1 Then
                    m2 = activateModel("8ly_014_282", 2)
                ElseIf read("rear_type") = 2 Then
                    m2 = activateModel("8ly_014_284", 2)
                End If
            End If
        ElseIf read("house_number") = 355 Then
            If read("bracket_type") = 2 Then
                m2 = activateModel("8ly_014_355", 2)
            ElseIf read("bracket_type") = 1 Then
                m2 = activateModel("8ly_014_356", 2)
            End If
        ElseIf read("house_number") = 400 Then
            If read("bracket_type") = 2 Then
                m2 = activateModel("8ly_014_400", 2)
            ElseIf read("bracket_type") = 1 Then
                m2 = activateModel("8ly_014_401", 2)
            End If
        ElseIf read("house_number") = 500 Then
            m2 = activateModel("8ly_013_020", 2)
        ElseIf read("house_number") = 600 Then
            m2 = activateModel("5ly_014_010", 2)
        End If
        drawing = CType(m2, IpfcDrawing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            activateModel(m1.FileName, 0)
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            activateModel(m1.FileName, 1)
        End If
        RegenerateModel(m1)
        Threading.Thread.Sleep(1000)
        smodel = drawing.Descr
        Threading.Thread.Sleep(1000)
        smodel.Path = path
        Threading.Thread.Sleep(1000)
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("prt", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub main_frame(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        '数据库
        Dim requirements As String()
        Dim path1 As String
        path1 = path + "\\parts"
        Dim lis1, lis2, list3, list_1， list_2, list_3 As String()
        Dim string_1, string_2, string_3 As Istringseq
        Dim str, str2, str3, str_1, str_2, str_3, str_three, str_address As String
        Dim number1 As Integer = 0

        mysql_new(localhost$, tabledase$, ID#)
        If read("type") = 1 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("asm", "E:\works\creo\mf\180\2\5sb-034-180")
                str_address = "5sb-034-180"
                m1 = activate("5sb-034-180", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\2")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\2")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\2")
            End If
            If read("bracket_type") = 1 Then
                m1 = openModel("asm", "E:\works\creo\mf\180\1\5sb-034-180")
                m1 = activate("5sb-034-180", 0)
                str_address = "5sb-034-180"

                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\1")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\1")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\180\1")
            End If
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000)
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)
            '    closeWindow（m5）
            'Next
            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)
            Next
            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）
                End If
            Next

            m1 = activate("5sb-034-180", 0)
            'partValue(m1)
            RegenerateModel(m1)
            '前法兰
            setParamValue(AC.Session.GetModel("8sb-180-183", 1), "d5", read("r_flange_distance2"), "浮点型") '前法兰
            setParamValue(m1, "d392", read("f_flange_f_diameter"), "浮点型")
            setParamValue(m1, "d391", read("f_flange_f_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-183", 1), "d22", read("f_flange_h_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-183", 1), "d21", read("f_flange_h_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-183", 1), "d6", read("f_flange_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-183", 1), "d11", read("f_flange_diameter2"), "浮点型")
            setParamValue(m1, "d166", read("block_dim2"), "浮点型")
            '前法兰孔
            'setParamValue(m1, "d372", read("f_flange_loc_hole_angle"), "浮点型") '前法兰孔定位角度
            'setParamValue(m1, "p379", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d5", read("r_flange_distance1"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d19", read("b_flange_f_diameter"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d18", read("b_flange_f_deep"), "浮点型") '后法兰
            '后法兰孔
            ' setParamValue(m1, "d365", read("f_flange_loc_hole_angle"), "浮点型") '前法兰孔定位角度
            'setParamValue(m1, "p369", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            '筋条
            setParamValue(m1, "d165", read("t_pro_length"), "浮点型") '筋条加工长度
            setParamValue(AC.Session.GetModel("8sb-130-185", 1), "d8", read("sh_length") - read("r_flange_distance1") - read("r_flange_distance1") - 10， "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-130-187", 1), "d8", read("sh_length") - read("r_flange_distance1") - read("r_flange_distance1") - 10, "浮点型")
            '吊攀
            setParamValue(m1, "d80", read("hb_distance"), "浮点型") '吊攀距离
            'setParamValue(AC.Session.GetModel("8sb-130-185", 1), "d8", read("sh_length") - read("r_flange_distance1") - read("r_flange_distance1") - 10， "d21"), "浮点型") '后法兰
            ' setParamValue(AC.Session.GetModel("8sb-130-187", 1), "d8", GetParamValue(AC.Session.GetModel("8sb-130-185", 1), "d8"), "浮点型")

            '前后法兰孔
            '前法兰
            setParamValue(m1, "d373", read("f_flange_loc_hole_angle"), "浮点型") '第一个孔角度
            setParamValue(m1, "p379", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d374", read("f_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d372", read("f_flange_hole_location"), "浮点型")
            ' setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d11", read("前法兰内径"), "浮点型") '前法兰内径
            'setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d22", read("止口深度"), "浮点型") '止口深度
            'setParamValue(AC.Session.GetModel("8sb-180-181", 1), "d19", read("止口内径"), "浮点型") '止口内径
            '后法兰
            setParamValue(m1, "d365", read("b_flange_loc_hole_angle"), "浮点型") 'hou法兰孔定位角度
            setParamValue(m1, "p369", read("b_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d195", read("b_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d191", read("b_flange_hole_location"), "浮点型")
            '机脚部分
            m2 = AC.Session.GetModel("8sb-046-200", 1)
            m3 = AC.Session.GetModel("8sb-160-189", 1)
            setParamValue(m1, "d308", read("fe_distance"), "浮点型") '机脚离圆筒距离
            setParamValue(m2, "d8", read("floor_length"), "浮点型") '机脚底板长度
            setParamValue(m2, "d6", read("r_floor_distance"), "浮点型") '机脚底板厚度
            setParamValue(m1, "d141", read("floor_length") - read("floor_foot_location") * 2 - 12, "浮点型") '机脚间距
            setParamValue(m1, "d110", read("floor_length") - read("floor_foot_location") * 2 - 12, "浮点型") '机脚间距
            setParamValue(m1, "d360", read("floor_foot_location"), "浮点型")
            setParamValue(m3, "d22", 180 - read("r_floor_distance"), "浮点型")
            If read("foot_hole_number") > 1 Then
                setParamValue(m1, "d388", ((read("floor_length") - read("foot_hole_distance") * (read("foot_hole_number") - 1)) / 2), "浮点型") '底脚孔离机脚位置

                setParamValue(m1, "d381", read("foot_hole_distance"), "浮点型") '阵列距离
                setParamValue(m1, "p383", read("foot_hole_number"), "浮点型") '底脚孔个数
                setParamValue(m1, "d362", read("foot_hole_diameter"), "浮点型") '底脚孔直径

            ElseIf read("foot_hole_number") = 1 Then
                'setParamValue(m1, "d381 ", read("foot_hole_location"), "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "d362", read("foot_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "d388", read("floor_length") / 2, "浮点型") '底脚孔离机脚位置

                'deleteFeature_new(m1, 3717)

            End If

            If read("bracket_type") = 1 Then
                setParamValue(m1, "d337", read("block_lo"), "浮点型") '筋块距离
                setParamValue(m1, "d338", read("block_lo"), "浮点型")
                m5 = AC.Session.GetModel("8sb_130_186", 1）
                m6 = AC.Session.GetModel("8sb_130_188", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                setParamValue(m6, "d8", read("block_length"), "浮点型")
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                ' setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                setParamValue(m6, "d7", read("block_high"), "浮点型")
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径
                setParamValue(m6, "d11", read("block_dim"), "浮点型"） '筋块直径
                setParamValue(m1, "d279", read("block_hole_lo"), "浮点型") '孔距离
                setParamValue(m1, "d289", GetParamValue(m1, "d279") + 100, "浮点型") '两孔间距

            End If
            Threading.Thread.Sleep(1000)
            '圆筒长度
            setParamValue(AC.Session.GetModel("8sb-004-182.prt", 1), "d15", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + read("f_flange_h_deep") + read("b_flange_f_deep"), "浮点型") '圆筒长度
            '筋条长度
            'm1 = activateModel("8sb-130-185.prt", 1)
            'partValue(m1)
            'm1.Regenerate(Nothing)
            'setParamValue(m1, "d8", read("td_length"), "浮点型") '筋条长度
            RegenerateModel(m1)
        End If
        If read("type") = 2 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("asm", "E:\works\creo\mf\200\2\5sb-034-200")
                m1 = activate("5sb-034-200", 0)
                str_address = "5sb-034-200"
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\2")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\2")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\2")
            End If
            If read("bracket_type") = 1 Then
                m1 = openModel("asm", "E:\works\creo\mf\200\1\5sb-034-200")
                str_address = "5sb-034-200"
                m1 = activate("5sb-034-200", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\1")

                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\1")

                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\200\1")
            End If
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000) 
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)
            '    closeWindow（m5）
            'Next

            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)

            Next

            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）

                End If
            Next
            'partValue_1(m1)
            m1 = activate("5sb-034-200", 0)
            setParamValue(m1, "d213", read("t_pro_length"), "浮点型") '筋条加工长度
            setParamValue(m1, "d177", read("fe_distance"), "浮点型") '机脚离圆筒距离
            setParamValue(m1, "d80", read("hb_distance"), "浮点型") '吊攀离前法兰位置
            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d5", read("r_flange_distance1"), "浮点型") '前法兰
            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d24", read("f_flange_h_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d23", read("f_flange_h_deep"), "浮点型")

            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d26", read("f_flange_h_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d25", read("f_flange_h_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d6", read("f_flange_diameter"), "浮点型")

            setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d11", read("f_flange_diameter2"), "浮点型")
            setParamValue(m1, "d214", read("block_dim2"), "浮点型")



            'setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d7", read("前法兰内径"), "浮点型") '前法兰内径
            'setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d22", read("止口深度"), "浮点型") '止口深度
            'setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d19", read("止口内径"), "浮点型") '止口内径
            setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d5", read("r_flange_distance2"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d19", read("b_flange_f_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-201", 1), "d18", read("b_flange_f_deep"), "浮点型")
            'setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d11", read("前法兰内径"), "浮点型") '后法兰内径
            ' setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d175", read("止口深度"), "浮点型") '止口深度
            ' setParamValue(AC.Session.GetModel("8sb-180-203", 1), "d176", read("止口内径"), "浮点型") '止口内径

            setParamValue(AC.Session.GetModel("8sb-046-208", 1), "d8", read("floor_length"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-160-207", 1), "d23", 200 - read("r_floor_distance"), "浮点型") '机脚底板长度
            setParamValue(m1, "d182", read("floor_foot_location"), "浮点型") '机脚离底板距离
            setParamValue(m1, "d353"， read("floor_foot_location"), "浮点型")
            'setParamValue(m1, "d352", read("hole_location"), "浮点型") '机脚底板孔间距
            setParamValue(m1, "d110", read("floor_length") - read("floor_foot_location") * 2 - 12, "浮点型") '机脚间距

            '前法兰
            setParamValue(m1, "d356", read("f_flange_loc_hole_angle"), "角度", read("f_flange_loc_hole_angle")) '第一个孔角度
            setParamValue(m1, "p362", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d357", read("f_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d355", read("f_flange_hole_location"), "浮点型")

            '后法兰
            setParamValue(m1, "d366", read("b_flange_loc_hole_angle"), "角度", read("b_flange_loc_hole_angle")) '前法兰孔定位角度
            setParamValue(m1, "p362", read("b_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d372", read("b_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d365", read("b_flange_hole_location"), "浮点型")

            If read("foot_hole_number") > 0 Then
                setParamValue(m1, "d374", ((read("floor_length") - read("foot_hole_distance") * (read("foot_hole_number") - 1)) / 2), "浮点型") '底脚孔离机脚位置

                setParamValue(m1, "d375", read("foot_hole_distance"), "浮点型") '阵列距离
                setParamValue(m1, "p377", read("foot_hole_number"), "浮点型") '底脚孔个数
                setParamValue(m1, "d216", read("foot_hole_diameter"), "浮点型") '底脚孔直径

            ElseIf read("foot_hole_number") = 0 Then
                'setParamValue(m1, "d381 ", read("foot_hole_location"), "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "d216", read("foot_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "d374", read("floor_length") / 2, "浮点型") '底脚孔离机脚位置
                'setParamValue(m1, "p377", 1, "浮点型") '底脚孔个数
                'deleteFeature(m1, 9244)

            End If


            '圆筒长度修改
            Threading.Thread.Sleep(1000)
            setParamValue(AC.Session.GetModel("8sb-034-202", 1), "d15", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + read("f_flange_h_deep") + read("b_flange_f_deep"), "浮点型") '圆筒长度 
            RegenerateModel(m1)
            If read("bracket_type") = 1 Then
                setParamValue(m1, "d300", read("block_lo"), "浮点型") '筋块位置 
                setParamValue(m1, "d302", GetParamValue（m1, "d300"）, "浮点型")
                m5 = AC.Session.GetModel("8sb_130_200", 1)
                m6 = AC.Session.GetModel("8sb_130_201", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                setParamValue(m6, "d8", GetParamValue（m5， "d8"）, "浮点型")
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                setParamValue(m6, "d6", GetParamValue（m5， "d6"）, "浮点型")
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径
                setParamValue(m6, "d40", GetParamValue（m5， "d40"）, "浮点型"） '筋块直径
                setParamValue(m1, "d249", read("block_hole_lo"), "浮点型") '孔位置
            End If
        End If
        If read("type") = 3 Then
            If read("bracket_type") = 2 Then
                m1 = openModel("asm", "E:\works\creo\mf\250\2\5sb-034-250")
                m1 = activate("5sb-034-250", 0)
                str_address = "5sb-034-250"
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\2")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\2")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\2")
            End If
            If read("bracket_type") = 1 Then
                m1 = openModel("asm", "E:\works\creo\mf\250\1\5sb-034-250")
                m1 = activate("5sb-034-250", 0)
                str_address = "5sb-034-250"
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\1")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\1")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\250\1")
            End If
            'partValue(m1)
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000)
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)
            '    closeWindow（m5）
            'Next

            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)

            Next

            'For Each str2 In string_2
            '    lis2 = str2.Split("\")
            '    str_2 = Left(lis2.Last, 11)
            '    'str_three = Left(lis2.Last, 3)
            '    'If str_three <> "asm" Then
            '    m6 = retrieveModel("drw", str_2)
            '    m6 = activate(str_2, 2)
            '    closeWindow（m6）
            '    'End If
            'Next


            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）
                End If
            Next

            m1 = activate("5sb-034-250", 0)
            setParamValue(m1, "d282", read("t_pro_length"), "浮点型") '筋条加工长度
            '加工前

            setParamValue(AC.Session.GetModel("8sb-180-251", 1), "d5", read("f_flange_distance2"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d5", read("f_flange_distance1"), "浮点型")



            setParamValue(m1, "d226", read("f_flange_f_diameter"), "浮点型") '前法兰
            setParamValue(m1, "d225", read("f_flange_f_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d25", read("f_flange_h_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d24", read("f_flange_h_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d6", read("f_flange_diameter"), "浮点型")
            setParamValue(m1, "d670", read("f_flange_diameter"), "浮点型")

            setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d11", read("f_flange_diameter2"), "浮点型")
            setParamValue(m1, "d283", read("block_dim2"), "浮点型")



            setParamValue(AC.Session.GetModel("8sb-180-251", 1), "d21", read("b_flange_f_diameter"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-251", 1), "d18", read("b_flange_f_deep"), "浮点型")


            'setParamValue(m1, "d528", read("r_flange_distance1"), "浮点型") '前法兰位置
            'setParamValue(m1, "d289", read("r_flange_distance2") - 5, "浮点型") '后法兰位置

            'setParamValue(m1, "d221", read("f_flange_distance2") - read("r_flange_distance2"), "浮点型")
            setParamValue(m1, "d224", read("f_flange_distance2") - read("r_flange_distance2"), "浮点型")

            'setParamValue(m1, "d242", read("fs6_x_Distance"), "浮点型") '机脚间距
            setParamValue(m1, "d527", read("fe_distance"), "浮点型") '机脚离圆筒距离
            'setParamValue(m1, "d498", read("hold_distance"), "浮点型") '垫块孔间距
            'setParamValue(m1, "d528", read("r_flange_distance1") - 3, "浮点型")
            setParamValue(m1, "d289", read("f_flange_f_deep"), "浮点型")



            setParamValue(AC.Session.GetModel("8SB-046-257", 1), "d8", read("floor_length"), "浮点型") '垫块长度
            setParamValue(AC.Session.GetModel("8SB-046-257", 1), "d6", read("r_floor_distance"), "浮点型") '垫块厚度
            setParamValue(AC.Session.GetModel("8sb-048-255", 1), "d36", 250 - read("r_floor_distance"), "浮点型") '机脚离轴高度
            setParamValue(m1, "d490", read("floor_foot_location")， "浮点型") '机脚离垫块距离
            'setParamValue(m1, "d498", read("hole_location")， "浮点型") '孔位置
            setParamValue(m1, "d202", read("floor_length") - read("floor_foot_location") * 2 - 16, "浮点型") '机脚阵列距离
            '垫块长度
            'setParamValue(AC.Session.GetModel("8sb-046-257.prt", 1), "d8", read("lu_length"), "浮点型") '垫块长度
            '圆筒直径及长度修改
            'partValue(m3)
            setParamValue(AC.Session.GetModel("8sb-004-252.prt", 1), "d15", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + read("f_flange_h_deep") + read("b_flange_f_deep"), "浮点型") '圆筒长度
            '筋条长度
            setParamValue(AC.Session.GetModel("8sb-130-254", 1), "d8", read("sh_length") - read("r_flange_distance1") - read("r_flange_distance2"), "浮点型") '筋条长度


            '前后法兰孔
            '前法兰
            setParamValue(m1, "d664", read("f_flange_loc_hole_angle"), "浮点型") '第一个孔角度
            setParamValue(m1, "p654", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d649", read("f_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d647", read("f_flange_hole_location"), "浮点型")

            '后法兰
            setParamValue(m1, "d638", read("b_flange_loc_hole_angle"), "浮点型") 'hou法兰孔定位角度
            setParamValue(m1, "p644", read("b_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d639", read("b_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d637", read("b_flange_hole_location"), "浮点型")

            'setParamValue(m1, "d638", read("f_flange_loc_hole_angle"), "角度", read("f_flange_loc_hole_angle")) '第一个孔角度

            'setParamValue(AC.Session.GetModel("8sb-180-251", 1), "d11", read("前法兰内径"), "浮点型") '前法兰内径
            '后法兰
            ' setParamValue(m1, "d648", read("b_flange_loc_hole_angle"), "角度", read("b_flange_loc_hole_angle")) '前法兰孔定位角度
            'setParamValue(m1, "p645", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            'setParamValue(m1, "d639", read("f_flange_hole_diameter"), "浮点型") '孔径
            'setParamValue(AC.Session.GetModel("8sb-180-253", 1), "d11", read("前法兰内径"), "浮点型") '后法兰内径
            'setParamValue(m1, "d225", read("止口深度"), "浮点型") '止口深度
            ' setParamValue(m1, "d226", read("止口内径"), "浮点型") '止口内径
            If read("foot_hole_number") > 1 Then
                setParamValue(m1, "d656", ((read("floor_length") - read("foot_hole_distance") * (read("foot_hole_number") - 1)) / 2), "浮点型") '底脚孔离机脚位置

                setParamValue(m1, "d660", read("foot_hole_distance"), "浮点型") '阵列距离
                setParamValue(m1, "p662", read("foot_hole_number"), "浮点型") '底脚孔个数
                setParamValue(m1, "d495", read("foot_hole_diameter"), "浮点型") '底脚孔直径

            ElseIf read("foot_hole_number") = 1 Then
                'setParamValue(m1, "d381 ", read("foot_hole_location"), "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "d495", read("foot_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "d656", read("floor_length") / 2, "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "p662", read("foot_hole_number"), "浮点型") '底脚孔个数
                'setParamValue(m1, "p377", 1, "浮点型") '底脚孔个数
                'deleteFeature(m1, 8053)

            End If
            RegenerateModel(m1)
            If read("bracket_type") = 1 Then
                setParamValue(m1, "d588", read("block_lo"), "浮点型") '筋块位置
                setParamValue(m1, "d614", GetParamValue（m1, "d588"）, "浮点型")
                setParamValue(m1, "d634", GetParamValue（m1, "d588"）, "浮点型")
                m5 = AC.Session.GetModel("8sb_130_250", 1)
                m6 = AC.Session.GetModel("8sb_130_251", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                setParamValue(m6, "d8", GetParamValue（m5， "d8"）, "浮点型")
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                setParamValue(m6, "d6", GetParamValue（m5， "d6"）, "浮点型")
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径
                setParamValue(m6, "d40", GetParamValue（m5， "d40"）, "浮点型"） '筋块直径

                setParamValue(m1, "d604", read("block_hole_lo"), "浮点型") '孔位置
            End If
            '‘’''msgbox(0)
        End If
        If read("type") = 4 Then
            If read("bracket_type") = 2 Then
                openModel("asm", "E:\works\creo\mf\280\2\5sb-034-280")
                m1 = activateModel("5sb-034-280", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\2")

                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\2")

                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\2")

            End If
            If read("bracket_type") = 1 Then
                'openModel("asm", "E:\works\creo\mf\280\1\5sb-034-280.asm")
                'm1 = activateModel("5sb-034-280", 0)

                openModel("asm", "E:\works\creo\mf\280\1\5sb-034-280")
                m1 = activateModel("5sb-034-280", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\1")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\1")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\280\1")
            End If
            str_address = "5sb-034-280"
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000)
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)

            '    closeWindow（m5）
            'Next
            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)

            Next

            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）

                End If
            Next

            m1 = activateModel("5sb-034-280", 0)
            RegenerateModel(m1)

            setParamValue(m1, "d525", (read("sh_length") - read("r_flange_distance1") + 5) / 2, "浮点型")
            '法兰
            setParamValue(AC.Session.GetModel("8sb-180-281", 1), "d5", read("f_flange_distance1"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d5", read("f_flange_distance2"), "浮点型") '前法兰


            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d24", read("f_flange_f_diameter"), "浮点型") '前法兰
            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d23", read("f_flange_f_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d28", read("f_flange_h_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d25", read("f_flange_h_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d6", read("f_flange_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-281", 1), "d24", read("b_flange_f_diameter"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-281", 1), "d20", read("b_flange_f_deep"), "浮点型")

            setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d11", read("f_flange_diameter2"), "浮点型")
            setParamValue(m1, "d342", read("block_dim2"), "浮点型")


            setParamValue(m1, "d341", read("t_pro_length"), "浮点型") '筋条加工长度
            '圆筒直径及长度修改
            setParamValue(AC.Session.GetModel("8sb-004-282.prt", 1), "d15", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + read("f_flange_h_deep") + read("b_flange_f_deep"), "浮点型") '圆筒长度

            'partValue(m2)
            'setParamValue(m1, "d464", read(""), "浮点型")
            setParamValue(m1, "d464", read("floor_foot_location"), "浮点型") '机脚离圆筒距离
            setParamValue(AC.Session.GetModel("8sb-046-286", 1), "d8", read("floor_length"), "浮点型") '垫块长度
            setParamValue(AC.Session.GetModel("8sb-046-286", 1), "d6", read("r_floor_distance"), "浮点型") '垫块厚度
            setParamValue(m1, "d349", read("floor_foot_location")， "浮点型") '机脚离垫块距离
            setParamValue(m1, "d653", read("floor_foot_location"), "浮点型") '机脚离垫块距离
            setParamValue(AC.Session.GetModel("8sb-150-290", 1), "d6", read("floor_length") - read("floor_foot_location") * 2 - 28, "浮点型") '底板加强筋长度
            setParamValue(AC.Session.GetModel("8sb-160-285", 1), "d35", 280 - read("r_floor_distance"), "浮点型") '机脚离轴高度
            setParamValue(m1, "d654", read("floor_length") / 2 - read("block_hole_lo") / 2, "浮点型") '机脚垫块孔间距
            setParamValue(m1, "d464", read("fe_distance"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-130-284", 1), "d8", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance1"), "浮点型") '筋长度




            '前后法兰孔
            '前法兰
            'setParamValue(m1, "d664", read("f_flange_loc_hole_angle"), "浮点型") '第一个孔角度
            'setParamValue(m1, "p654", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d628", read("f_flange_hole_diameter"), "浮点型") '孔径
            'setParamValue(m1, "d647", read("f_flange_hole_location"), "浮点型")

            '后法兰
            setParamValue(m1, "d657", read("b_flange_loc_hole_angle"), "浮点型") 'hou法兰孔定位角度
            setParamValue(m1, "p663", read("b_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d658", read("b_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d656", read("b_flange_hole_location"), "浮点型")

            '后前法兰
            'setParamValue(m1, "d657", read("b_flange_loc_hole_angle"), "角度", read("b_flange_loc_hole_angle")) '前法兰孔定位角度
            'setParamValue(m1, "p663", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            'setParamValue(m1, "d658", read("f_flange_hole_diameter"), "浮点型") '孔径
            'setParamValue(m1, "d346", read("f_flange_hole_diameter"), "浮点型") '前法兰止口深度

            '后法兰
            'setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d23", read("后法兰止口深度"), "浮点型") '后法兰止口深度
            'setParamValue(AC.Session.GetModel("8sb-180-283", 1), "d24", read("后法兰止口半径"), "浮点型") '后法兰止口半径
            If read("foot_hole_number") > 1 Then
                setParamValue(m1, "d667", ((read("floor_length") - read("foot_hole_distance") * (read("foot_hole_number") - 1)) / 2), "浮点型") '底脚孔离机脚位置

                setParamValue(m1, "d668", read("foot_hole_distance"), "浮点型") '阵列距离
                setParamValue(m1, "p670", read("foot_hole_number"), "浮点型") '底脚孔个数
                setParamValue(m1, "d666", read("foot_hole_diameter"), "浮点型") '底脚孔直径

            ElseIf read("foot_hole_number") = 1 Then
                'setParamValue(m1, "d381 ", read("foot_hole_location"), "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "d666", read("foot_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "d667", read("floor_length") / 2, "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "p670", read("foot_hole_number"), "浮点型") '底脚孔个数
                'setParamValue(m1, "p377", 1, "浮点型") '底脚孔个数
                'deleteFeature(m1, 6745)


            End If

            '筋条长度
            'm1 = activateModel("8sb-130-284", 1)
            ''partValue(m1)
            'm1.Regenerate(Nothing)
            'setParamValue(m1, "d8", read("td_length"), "浮点型") '筋条长度
            If read("bracket_type") = 1 Then
                setParamValue(m1, "d466", read("block_lo"), "浮点型") '筋块位置
                setParamValue(m1, "d634", GetParamValue（m1, "d466"）, "浮点型")
                m5 = AC.Session.GetModel("8sb_130_280", 1)
                'm6 = AC.Session.GetModel("8sb_130_281", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                'setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                'setParamValue(m6, "d8", GetParamValue（m5， "d8"）, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                'setParamValue(m6, "d6", GetParamValue（m5， "d6"）, "浮点型")
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径
                'setParamValue(m6, "d40", GetParamValue（m5， "d40"）, "浮点型"） '筋块直径
                setParamValue(m1, "d405", read("block_hole_lo"), "浮点型") '孔位置
            End If
            RegenerateModel(m1)

        End If
        If read("type") = 5 Then
            If read("bracket_type") = 2 Then
                openModel("asm", "E:\works\creo\mf\355\2\5sb-034-355.asm")
                m1 = activateModel("5sb-034-355", 0)

                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\2")

                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\2")

                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\2")
            End If
            If read("bracket_type") = 1 Then
                openModel("asm", "E:\works\creo\mf\355\1\5sb-034-355.asm")
                m1 = activateModel("5sb-034-355", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\1")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\1")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\355\1")
            End If
            str_address = "5sb-034-355"
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000)
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)
            '    closeWindow（m5）
            'Next

            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)

            Next

            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）
                End If
            Next
            ''partValue(m1)
            RegenerateModel(m1)
            setParamValue(m1, "d526", read("t_pro_length"), "浮点型") '筋条加工长度
            'setParamValue(m1, "d380", read("fs6_x_Distance"), "浮点型") '机脚离圆筒距离

            '圆筒
            setParamValue(AC.Session.GetModel("8sb-034-357.prt", 1), "d15", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + read("f_flange_h_deep") + read("b_flange_f_deep"), "浮点型") '圆筒长度
            '筋条
            setParamValue(AC.Session.GetModel("8sb-130-359.prt", 1), "d8", read("sh_length") - read("r_flange_distance2") - read("r_flange_distance2") + 8, "浮点型") '筋条长度
            '法兰




            setParamValue(AC.Session.GetModel("8sb-180-356.prt", 1), "d5", read("f_flange_distance2"), "浮点型")
            'setParamValue(m1, "d370", read("f_flange_distance1") - read("r_flange_distance1"), "浮点型") '前法兰加工
            setParamValue(AC.Session.GetModel("8sb-180-358.prt", 1), "d5", read("f_flange_distance1"), "浮点型")
            setParamValue(m1, "d647", read("f_flange_f_diameter"), "浮点型") '前法兰
            setParamValue(m1, "d646", read("f_flange_f_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-358", 1), "d21", read("f_flange_h_diameter"), "浮点型") 'q法兰
            setParamValue(AC.Session.GetModel("8sb-180-358", 1), "d20", read("f_flange_h_deep"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-358", 1), "d6", read("f_flange_diameter"), "浮点型")
            setParamValue(AC.Session.GetModel("8sb-180-356", 1), "d28", read("b_flange_f_diameter"), "浮点型") '后法兰
            setParamValue(AC.Session.GetModel("8sb-180-356", 1), "d25", read("b_flange_f_deep"), "浮点型")

            setParamValue(AC.Session.GetModel("8sb-180-358", 1), "d11", read("f_flange_diameter2"), "浮点型")
            setParamValue(m1, "d527", read("block_dim2"), "浮点型")


            '机脚
            setParamValue(m1, "d380", read("fe_distance"), "浮点型") '机脚离圆筒距离
            setParamValue(AC.Session.GetModel("8sb-046-342", 1), "d6", read("floor_length"), "浮点型") '垫块长度
            setParamValue(AC.Session.GetModel("8sb-046-342", 1), "d4", read("r_floor_distance"), "浮点型") '垫块厚度
            setParamValue(m1, "d595", read("floor_foot_location")， "浮点型") '机脚离垫块距离
            setParamValue(AC.Session.GetModel("8sb-048-343", 1), "d8", read("floor_length") - read("floor_foot_location") * 2 - 10, "浮点型") '底板加强筋长度
            setParamValue(AC.Session.GetModel("8sb-048-341", 1), "d41", 355 - read("r_floor_distance"), "浮点型") '机脚离轴高度
            setParamValue(m1, "d498", read("block_hole_lo"), "浮点型") '机脚垫块孔间距
            setParamValue(m1, "d325", read("floor_length") - read("floor_foot_location") * 2 - 16, "浮点型") '机脚阵列距离



            '前后法兰孔
            '前法兰
            setParamValue(m1, "d626", read("f_flange_loc_hole_angle"), "浮点型") '第一个孔角度
            setParamValue(m1, "p633", read("f_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d628", read("f_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d627", read("f_flange_hole_location"), "浮点型")

            '后法兰
            setParamValue(m1, "d616", read("b_flange_loc_hole_angle"), "浮点型") 'hou法兰孔定位角度
            setParamValue(m1, "p623", read("b_flange_hole_arrays"), "浮点型") '阵列个数
            setParamValue(m1, "d618", read("b_flange_hole_diameter"), "浮点型") '孔径
            setParamValue(m1, "d617", read("b_flange_hole_location"), "浮点型")



            If read("foot_hole_number") > 1 Then
                setParamValue(m1, "d636", ((read("floor_length") - read("foot_hole_distance") * (read("foot_hole_number") - 1)) / 2), "浮点型") '底脚孔离机脚位置

                setParamValue(m1, "d640", read("foot_hole_distance"), "浮点型") '阵列距离
                setParamValue(m1, "p642", read("foot_hole_number"), "浮点型") '底脚孔个数
                setParamValue(m1, "d390", read("foot_hole_diameter"), "浮点型") '底脚孔直径  

            ElseIf read("foot_hole_number") = 1 Then
                'setParamValue(m1, "d381 ", read("foot_hole_location"), "浮点型") '底脚孔离机脚位置
                setParamValue(m1, "d390", read("foot_hole_diameter"), "浮点型") '孔径
                setParamValue(m1, "p642", read("foot_hole_number"), "浮点型")
                setParamValue(m1, "d636", read("floor_length") / 2, "浮点型") '底脚孔离机脚位置
                'setParamValue(m1, "p377", 1, "浮点型") '底脚孔个数
                'deleteFeature(m1, 8053)

            End If
            If read("bracket_type") = 1 Then
                setParamValue(m1, "d560", read("block_lo"), "浮点型") '筋块位置
                m5 = AC.Session.GetModel("8sb_130_355", 1)
                ' m6 = AC.Session.GetModel("8sb_130_251", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                ' setParamValue(m6, "d8", GetParamValue（m5， "d8"）, "浮点型")
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                'setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                ' setParamValue(m6, "d6", GetParamValue（m5， "d6"）, "浮点型")
                'setParamValue(m5, "d40", read("block_dim") - 3, "浮点型") '筋块直径
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径

            End If


            ' setParamValue(m6, "d40", GetParamValue（m5， "d40"）, "浮点型"） '筋块直径
            setParamValue(m1, "d541", read("block_hole_lo"), "浮点型") '孔位置

            RegenerateModel(m1)

            ''筋条长度
            'm1 = activateModel("8sb-034-359", 1)
            'partValue(m1)
            'm1.Regenerate(Nothing)
            'setParamValue(m1, "d8", read("td_length"), "浮点型") '筋条长度
        End If
        If read("type") = 6 Then
            If read("bracket_type") = 2 Then

                openModel("asm", "E:\works\creo\mf\400\2\5sb-034-400.asm")
                m1 = activateModel("5sb-034-400", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\2")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\2")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\2")
                m1 = activateModel("5sb-034-400", 0)
            End If
            If read("bracket_type") = 1 Then
                openModel("asm", "E:\works\creo\mf\400\1\5sb-034-400.asm")
                m1 = activateModel("5sb-034-400", 0)
                string_1 = CType(AC.Session, IpfcBaseSession).ListFiles("*.prt", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\1")
                string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\1")
                string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\mf\400\1")
                m1 = activateModel("5sb-034-400", 0)
            End If
            'For Each str In string_1
            '    Threading.Thread.Sleep(1000)
            '    m5 = retrieveModel("prt", str)
            '    lis1 = str.Split("\")
            '    str_1 = Left(lis1.Last, 11)
            '    m5 = activateModel(str_1, 1)
            '    closeWindow（m5）
            'Next
            For Each str3 In string_3
                m6 = retrieveModel("frm", str3)
                list3 = str3.Split("\")
                str_3 = Left(list3.Last, 9)
            Next
            For Each str2 In string_2
                lis2 = str2.Split("\")
                str_2 = Left(lis2.Last, 11)
                str_three = Left(lis2.Last, 3)
                If str_three <> "asm" Then
                    m6 = retrieveModel("drw", str2)
                    m6 = activate(str_2, 2)
                    closeWindow（m6）
                End If
            Next
            ''partValue(m1)
            str_address = "5sb-034-400"
            RegenerateModel(m1)
            setParamValue(m1, "d529", read("t_pro_length"), "浮点型") '筋条加工长度
            setParamValue(m1, "d537", read("fe_distance"), "浮点型") '机脚离圆筒距离
            setParamValue(m1, "d346", read("hb_distance"), "浮点型") '吊攀距离

            '圆筒直径及长度修改
            m2 = activateModel("8sb-004-402.prt", 1)
            'partValue(m2)

            setParamValue(m2, "d15", read("sh_length"), "浮点型") '圆筒长度
            closeWindow(m2)
            If read("bracket_type") = 1 Then
                setParamValue(m1, "d562", read(""), "浮点型") '筋块位置
                m5 = AC.Session.GetModel("8sb_130_400", 1)
                ' m6 = AC.Session.GetModel("8sb_130_251", 1)
                setParamValue(m5, "d8", read("block_length"), "浮点型") '长度
                setParamValue(m5, "d41", read("block_length") - 10, "浮点型")
                'setParamValue(m6, "d41", read("block_length") - 10, "浮点型")
                ' setParamValue(m6, "d8", GetParamValue（m5， "d8"）, "浮点型")
                setParamValue(m5, "d6", read("block_high"), "浮点型") '高度
                ' setParamValue(m6, "d6", GetParamValue（m5， "d6"）, "浮点型")
                setParamValue(m5, "d40", read("block_dim"), "浮点型") '筋块直径
                ' setParamValue(m6, "d40", GetParamValue（m5， "d40"）, "浮点型"） '筋块直径
                'setParamValue(m1, "d541", read(""), "浮点型") '孔位置
            End If
            'm1 = activateModel("8sb-130-404.prt", 1)
            'partValue(m1)
            'm1.Regenerate(Nothing)
            'setParamValue(m1, "d8", read("td_length"), "浮点型") '筋条长度
        End If
        Threading.Thread.Sleep(1000)
        m1 = activateModel(str_address, 0)
        Threading.Thread.Sleep(1000)
        AC.Session.RunMacro("~ Command `ProCmdEditProperties`;")
        m1.CommonName = "机座"
        RegenerateModel(m1)
        m1.Rename(read("CODE"), True)
        'list_2 = (read1("CODE") + "0" + i)
        Dim k As Integer = 1
        For Each str In string_1
            Threading.Thread.Sleep(1000)
            lis1 = str.Split("\")
            str_1 = Left(lis1.Last, 11)
            str_2 = Left(str_1, 7)
            If str_1 = "8sb-150-290" Then
                Dim length_2 As Double = GetParamValue(AC.Session.GetModel("8sb-150-290", 1), "d6")
                m4 = AC.Session.GetModel("8sb-150-290", 2)
                window = session.CreateModelWindow(m4)
                model.Display()
                window.Activate()
                drawing = CType(m4, IpfcDrawing)
                view2Ds = listViews(drawing)
                If length_2 <= 100 Then
                    view2Ds.Item(0).Scale = 1 / 1
                    view2Ds.Item(1).Scale = 1 / 1
                ElseIf length_2 <= 150 Then
                    view2Ds.Item(0).Scale = 1 / 1.5
                    view2Ds.Item(1).Scale = 1 / 1.5
                ElseIf length_2 <= 250 Then
                    view2Ds.Item(0).Scale = 1 / 2
                    view2Ds.Item(1).Scale = 1 / 2
                ElseIf length_2 <= 300 Then
                    view2Ds.Item(0).Scale = 1 / 2.5
                    view2Ds.Item(1).Scale = 1 / 2.5
                ElseIf length_2 <= 400 Then
                    view2Ds.Item(0).Scale = 1 / 3
                    view2Ds.Item(1).Scale = 1 / 3
                ElseIf length_2 <= 500 Then
                    view2Ds.Item(0).Scale = 1 / 5
                    view2Ds.Item(1).Scale = 1 / 5
                Else
                    view2Ds.Item(0).Scale = 1 / 8
                    view2Ds.Item(1).Scale = 1 / 8
                End If
                modelItems = listModelItem(m4, "DTL_NOTE")
                修改注释(modelItems, 22, view2Ds.Item(0).Scale.ToString)
            End If


            If str_1 = "8sb-160-286" Then
                Dim length_1 As Double = GetParamValue(AC.Session.GetModel("8sb-160-286", 1), "d8")
                m4 = activateModel("8sb-160-286", 2)
                window = session.CreateModelWindow(m4)
                model.Display()
                window.Activate()
                drawing = CType(m4, IpfcDrawing)
                view2Ds = listViews(drawing)
                If length_1 <= 100 Then
                    view2Ds.Item(0).Scale = 1 / 1
                    view2Ds.Item(1).Scale = 1 / 1
                ElseIf length_1 <= 150 Then
                    view2Ds.Item(0).Scale = 1 / 1.5
                    view2Ds.Item(1).Scale = 1 / 1.5
                ElseIf length_1 <= 200 Then
                    view2Ds.Item(0).Scale = 1 / 2
                    view2Ds.Item(1).Scale = 1 / 2
                ElseIf length_1 <= 250 Then
                    view2Ds.Item(0).Scale = 1 / 2.5
                    view2Ds.Item(1).Scale = 1 / 2.5
                ElseIf length_1 <= 300 Then
                    view2Ds.Item(0).Scale = 1 / 3
                    view2Ds.Item(1).Scale = 1 / 3
                Else
                    view2Ds.Item(0).Scale = 1 / 5
                    view2Ds.Item(1).Scale = 1 / 5
                End If
                modelItems = listModelItem(m4, "DTL_NOTE")
                修改注释(modelItems, 22, view2Ds.Item(0).Scale.ToString)
                window.Close()
            End If

            If str_2 = "8sb-180" Then
                Select Case str_1
                    Case "8sb-180-181", "8sb-180-201", "8sb-180-281"
                        setParamValue(AC.Session.GetModel(str_1, 1), "d5", read("f_flange_distance1"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_flange_distance1").ToString + "X25扁钢Q235", "字符串")
                    Case "8sb-180-356", "8sb-180-201"

                    Case "8sb-180-183", "8sb-180-203", "8sb-180-251", "8sb-180-283", "8sb-180-358"
                        setParamValue(AC.Session.GetModel(str_1, 1), "d5", read("f_flange_distance2"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_flange_distance2").ToString + "X25扁钢Q235", "字符串")

                End Select


                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If

                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)

                Select Case str_1
                    Case "8sb-180-181", "8sb-180-201", "8sb-180-281"
                        setParamValue(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1), "d5", read("r_flange_distance1"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_flange_distance1").ToString + "X30扁钢Q235", "字符串")
                    Case "8sb-180-356", "8sb-180-201"

                    Case "8sb-180-183", "8sb-180-203", "8sb-180-251", "8sb-180-283", "8sb-180-358"
                        setParamValue(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1), "d5", read("r_flange_distance2"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_flange_distance2").ToString + "X30扁钢Q235", "字符串")

                End Select

                RegenerateModel(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1))



            ElseIf str_2 = "8sb-004" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If

                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)

            ElseIf str_2 = "8sb-046" Then
                Select Case str_1
                    Case "8sb-046-200", "8sb-046-208", "8sb-046-257", "8sb-046-286"

                        setParamValue(AC.Session.GetModel(str_1, 1), "d6", read("f_floor_distance"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_floor_distance").ToString + "钢板Q235", "字符串")

                    Case "8sb-046-342"
                        setParamValue(AC.Session.GetModel(str_1, 1), "d4", read("f_floor_distance"), "浮点型")
                        setParamValue(AC.Session.GetModel(str_1, 1), "MATERIAL", read("f_floor_distance").ToString + "钢板Q235", "字符串")

                End Select
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                window = session.CreateModelWindow(m4)
                model.Display()
                window.Activate()
                drawing = CType(m4, IpfcDrawing)
                view2Ds = listViews(drawing)
                If read("floor_length") <= 100 Then
                    view2Ds.Item(0).Scale = 1 / 1
                    view2Ds.Item(1).Scale = 1 / 1
                ElseIf read("floor_length") <= 150 Then
                    view2Ds.Item(0).Scale = 1 / 1.5
                    view2Ds.Item(1).Scale = 1 / 1.5
                ElseIf read("floor_length") <= 200 Then
                    view2Ds.Item(0).Scale = 1 / 2
                    view2Ds.Item(1).Scale = 1 / 2
                ElseIf read("floor_length") <= 250 Then
                    view2Ds.Item(0).Scale = 1 / 2.5
                    view2Ds.Item(1).Scale = 1 / 2.5
                ElseIf read("floor_length") <= 300 Then
                    view2Ds.Item(0).Scale = 1 / 3
                    view2Ds.Item(1).Scale = 1 / 3
                Else
                    view2Ds.Item(0).Scale = 1 / 5
                    view2Ds.Item(1).Scale = 1 / 5
                End If
                modelItems = listModelItem(m4, "DTL_NOTE")

                修改注释(modelItems, 22, view2Ds.Item(0).Scale.ToString)
                window.Close()
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
                Select Case str_1
                    Case "8sb-046-200", "8sb-046-208", "8sb-046-257", "8sb-046-286"
                        setParamValue(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1), "d6", read("r_floor_distance"), "浮点型")
                    Case "8sb-046-342"
                        setParamValue(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1), "d4", read("r_floor_distance"), "浮点型")

                End Select
                RegenerateModel(AC.Session.GetModel(read("CODE") + "_0" + k.ToString(), 1))


            ElseIf str_2 = "8sb-151" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-160" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-048" Then

                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                window = session.CreateModelWindow(m4)
                model.Display()
                window.Activate()
                drawing = CType(m4, IpfcDrawing)
                view2Ds = listViews(drawing)
                If read("floor_length") <= 150 Then
                    view2Ds.Item(0).Scale = 1 / 1
                    view2Ds.Item(1).Scale = 1 / 1
                ElseIf read("floor_length") <= 200 Then
                    view2Ds.Item(0).Scale = 1 / 1.5
                    view2Ds.Item(1).Scale = 1 / 1.5
                ElseIf read("floor_length") <= 300 Then
                    view2Ds.Item(0).Scale = 1 / 2
                    view2Ds.Item(1).Scale = 1 / 2
                ElseIf read("floor_length") <= 350 Then
                    view2Ds.Item(0).Scale = 1 / 2.5
                    view2Ds.Item(1).Scale = 1 / 2.5
                ElseIf read("floor_length") <= 400 Then
                    view2Ds.Item(0).Scale = 1 / 3
                    view2Ds.Item(1).Scale = 1 / 3
                Else
                    view2Ds.Item(0).Scale = 1 / 5
                    view2Ds.Item(1).Scale = 1 / 5
                End If
                modelItems = listModelItem(m4, "DTL_NOTE")
                修改注释(modelItems, 22, view2Ds.Item(0).Scale.ToString)
                window.Close()
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-130" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                If InStr(str_2, "-") > 0 Then
                    window = session.CreateModelWindow(m4)
                    model.Display()
                    window.Activate()
                    drawing = CType(m4, IpfcDrawing)
                    view2Ds = listViews(drawing)
                    If read("sh_length") <= 250 Then
                        view2Ds.Item(0).Scale = 1 / 1
                        view2Ds.Item(1).Scale = 1 / 1
                    ElseIf read("sh_length") <= 350 Then
                        view2Ds.Item(0).Scale = 1 / 1.5
                        view2Ds.Item(1).Scale = 1 / 1.5
                    ElseIf read("sh_length") <= 450 Then
                        view2Ds.Item(0).Scale = 1 / 2
                        view2Ds.Item(1).Scale = 1 / 2
                    ElseIf read("sh_length") <= 550 Then
                        view2Ds.Item(0).Scale = 1 / 2.5
                        view2Ds.Item(1).Scale = 1 / 2.5
                    ElseIf read("sh_length") <= 750 Then
                        view2Ds.Item(0).Scale = 1 / 3
                        view2Ds.Item(1).Scale = 1 / 3
                    ElseIf read("sh_length") <= 800 Then
                        view2Ds.Item(0).Scale = 1 / 3.5
                        view2Ds.Item(1).Scale = 1 / 3.5
                    ElseIf read("sh_length") <= 950 Then
                        view2Ds.Item(0).Scale = 1 / 4
                        view2Ds.Item(1).Scale = 1 / 4
                    ElseIf read("sh_length") <= 1180 Then
                        view2Ds.Item(0).Scale = 1 / 4.5
                        view2Ds.Item(1).Scale = 1 / 4.5
                    End If

                    modelItems = listModelItem(m4, "DTL_NOTE")
                    修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
                    closeWindow(m4)
                    drawing = CType(m4, IpfcDrawing)
                    Threading.Thread.Sleep(1000)
                    smodel = drawing.Descr
                    Threading.Thread.Sleep(1000)
                    smodel.Path = path1
                    Threading.Thread.Sleep(1000)
                    drawing.Backup(smodel)
                    Threading.Thread.Sleep(1000)
                End If
            ElseIf str_2 = "8sb-472" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb_130" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                window = session.CreateModelWindow(m4)
                model.Display()
                window.Activate()
                drawing = CType(m4, IpfcDrawing)
                'view2Ds = listViews(drawing)
                'If read("block_length") <= 60 Then
                '    view2Ds.Item(0).Scale = 1 / 1
                '    view2Ds.Item(1).Scale = 1 / 1
                'ElseIf read("block_length") <= 100 Then
                '    view2Ds.Item(0).Scale = 1 / 1.5
                '    view2Ds.Item(1).Scale = 1 / 1.5
                'ElseIf read("block_length") <= 120 Then
                '    view2Ds.Item(0).Scale = 1 / 2
                '    view2Ds.Item(1).Scale = 1 / 2
                'ElseIf read("block_length") <= 150 Then
                '    view2Ds.Item(0).Scale = 1 / 2.5
                '    view2Ds.Item(1).Scale = 1 / 2.5

                'Else
                '    view2Ds.Item(0).Scale = 1 / 3
                '    view2Ds.Item(1).Scale = 1 / 3
                'End If
                'modelItems = listModelItem(m4, "DTL_NOTE")
                '修改注释(modelItems, 23, view2Ds.Item(0).Scale.ToString)

                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-034" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-150" Then

                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-126" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            ElseIf str_2 = "8sb-160" Then
                If k < 10 Then
                    m4 = Drwing_Rename(str_1, read("CODE") + "_0" + k.ToString())
                Else
                    m4 = Drwing_Rename(str_1, read("CODE") + "_" + k.ToString())
                End If
                drawing = CType(m4, IpfcDrawing)
                Threading.Thread.Sleep(1000)
                smodel = drawing.Descr
                Threading.Thread.Sleep(1000)
                smodel.Path = path1
                Threading.Thread.Sleep(1000)
                drawing.Backup(smodel)
                Threading.Thread.Sleep(1000)
            End If
            k += 1
            'm1.Regenerate(Nothing)
        Next
        m1 = activateModel(read("CODE"), 0)
        RegenerateModel(m1)
        'RegenerateModel(AC.Session.GetModel(read("CODE"), 0))
        m3 = activateModel(str_address, 2)

        m3.Rename(read("CODE"), True)
        drawing = CType(m3, IpfcDrawing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("type") = 1 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    除油，去毛刺，涂磷化底漆X06-1和铁红环氧底漆H06-2各一次；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                    焊接技术要求按GB985-85;
                                    湿热带电机技术要求按OSB.684.3000;
                                    有圆度要求的直径其平均直径应在公差带范围内", ";")
                note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d362")
                修改绘制尺寸值_new(note_Item_1, read("foot_hole_number"))
                'note_Item_2 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d374")
                '修改绘制尺寸值_new(note_Item_2, read("foot_hole_number"))
            End If
            零件技术要求(drawing, REQUIREMENT, {500, 200})
        ElseIf read("type") = 2 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣;
                                    消除焊接应力, 焊后进行除锈， 防锈处理；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                       湿热带电机技术要求按OSB.684.3000;
                                        加工表面涂防锈油", ";")
                note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d216")
                修改绘制尺寸值_new(note_Item_1, read("foot_hole_number"))
                'note_Item_2 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d374")
                '修改绘制尺寸值_new(note_Item_2, read("foot_hole_number"))
            End If

            零件技术要求(drawing, REQUIREMENT, {600, 280})
        ElseIf read("type") = 3 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    除油，去毛刺，涂磷化底漆X06-1和铁红环氧底漆H06-2各一次；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                    焊接技术要求按GB985-85;
                                    湿热带电机技术要求按OSB.684.3000;
                                    有圆度要求的直径其平均直径应在公差带范围内", ";")
                note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d495")
                修改绘制尺寸值_new(note_Item_1, read("foot_hole_number"))
            End If
            零件技术要求(drawing, REQUIREMENT, {600, 200})
        ElseIf read("type") = 4 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    除油，去毛刺，涂磷化底漆X06-1和铁红环氧底漆H06-2各一次；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                    焊接技术要求按GB985-85;
                                    湿热带电机技术要求按OSB.684.3000;
                                    有圆度要求的直径其平均直径应在公差带范围内", ";")
                note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d666")
                修改绘制尺寸值_new(note_Item_1, read("foot_hole_number"))
            End If
            零件技术要求(drawing, REQUIREMENT, {500, 320})
        ElseIf read("type") = 5 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    除油，去毛刺，涂磷化底漆X06-1和铁红环氧底漆H06-2各一次；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                    焊接技术要求按GB985-85;
                                    湿热带电机技术要求按OSB.684.3000;
                                    有圆度要求的直径其平均直径应在公差带范围内", ";")
                note_Item_1 = listModelItem_1(AC.Session.GetModel(read("CODE"), 0), "DIMENSION", "d390")
                修改绘制尺寸值_new(note_Item_1, read("foot_hole_number"))
            End If
            零件技术要求(drawing, REQUIREMENT, {580, 300})
        ElseIf read("type") = 6 Then
            If REQUIREMENT.Length = 0 Then
                REQUIREMENT = Split("焊接牢固、焊缝平整、清除焊渣，时效处理;
                                     未注倒角C0.5；
                                    除油，去毛刺，涂磷化底漆X06-1和铁红环氧底漆H06-2各一次；
                                    未注公差尺寸的极限偏差按GB/T1804-m级精度；
                                    焊接技术要求按GB985-85;
                                    湿热带电机技术要求按OSB.684.3000;
                                    有圆度要求的直径其平均直径应在公差带范围内", ";")
            End If
            零件技术要求(drawing, REQUIREMENT, {120, 320})
        End If


        'texts = read("T_MOTOR")
        添加图幅注释(m3， read("T_MOTOR"))
        '无引线注释(drawing, texts, 2, 188, 0, 0)
        ' modelItems = listModelItem(m3, "DTL_NOTE")
        ' note_Item_1 = modelItems.Item(modelItems.Count - 1)
        ' 修改注释字体大小(modelItems, modelItems.Count - 1, 3.0)
        Reg_Csheet()
        smodel = drawing.Descr
        smodel.Path = path
        m3.Backup(smodel)

        m3 = activateModel(read("CODE"), 2)
        mxs = 明细表(m3)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        Threading.Thread.Sleep(2000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If
        endApp()
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub per_mag_main_farme(localhost$, tabledase$, ID#, path$, imageName$)
        Dim requirements As String()
        openModel("prt", "E:\works\creo\main_frame\600\dj20-014-04-01")
        mysql_new2(localhost$, "creo", tabledase$, ID#)
        retrieveModel("frm", "E:\works\creo\main_frame\600\part_a0_sb.frm")
        'retrieveModel("frm", "asm_a1_sb")
        m2 = retrieveModel("drw", "E:\works\creo\main_frame\600\dj20-014-04-01")
        m1 = activateModel("dj20-014-04-01", 1)
        setParamValue(m1, "d5", read2("outside_diameter"), "浮点型")  '外径
        setParamValue(m1, "d9", read2("inside_diameter"), "浮点型")  '内径

        setParamValue(m1, "d7", (Get_ParamValue(m1, "d9") + 8), "浮点型")
        setParamValue(m1, "d287", (Get_ParamValue(m1, "d9") - 10), "浮点型")
        setParamValue(m1, "d280", (Get_ParamValue(m1, "d9") - 10) / 2, "浮点型")
        setParamValue(m1, "d778", (Get_ParamValue(m1, "d280") * 2), "浮点型")
        setParamValue(m1, "d294", (Get_ParamValue(m1, "d9") - 12), "浮点型")
        setParamValue(m1, "d292", (Get_ParamValue(m1, "d9") - 18), "浮点型")
        setParamValue(m1, "d296", (Get_ParamValue(m1, "d294") - 2), "浮点型")
        setParamValue(m1, "d4", read2("sh_length"), "浮点型")  '总长
        setParamValue(m1, "d284", read2("t_pro_length"), "浮点型")   '加工长度
        setParamValue(m1, "d238", (Get_ParamValue(m1, "d4") - Get_ParamValue(m1, "d230") * 2), "浮点型")  '凸台长度
        'setParamValue(m1, "d295", (Get_ParamValue(m1, "d4") - Get_ParamValue(m1, "d284") - Get_ParamValue(m1, "d291") - 56), "浮点型")
        setParamValue(m1, "d295", (read2("td_length")), "浮点型") '励磁机安装位置
        setParamValue(m1, "d291", Get_ParamValue(m1, "d4") - Get_ParamValue(m1, "d284") - Get_ParamValue(m1, "d295") - 56, "浮点型")
        Threading.Thread.Sleep(1000)
        RegenerateModel(m1)
        Threading.Thread.Sleep(4000)
        ExportJpg(path, imageName)
        m2 = activateModel("dj20-014-04-01", 2)
        m2.Rename(read2("CODE"), True)
        m1.Rename(read2("CODE"), True)
        drawing = CType(m2, IpfcDrawing)

        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {250, 250})
        添加图幅注释(m2, read("T_MOTOR"))

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        endApp()

    End Sub
    Public Sub water_main_frame(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)
        Dim d4, d5, d10, d12, d17, d28, d61, d62, d63, d76, d85, d86, d89, d115 As Double
        'mysql_new(localhost$, database$, tabledase$, ID#)
        Dim requirements As String()
        openModel("prt", "E:\works\creo\main_frame\500\dj18-103-01")
        'retrieveModel("frm", "asm_a1_sb")
        retrieveModel("frm", "E:\works\creo\main_frame\500\asm_a1_sb.frm")
        m2 = retrieveModel("drw", "E:\works\creo\main_frame\500\dj18-103-01-02")
        m1 = activateModel("dj18-103-01", 1)
        partValue(m1)
        'm1.Regenerate(Nothing)dd

        'If read("type") = 1 Then
        setParamValue(m1, "d5", read("f_cover_ex_diameter"), "浮点型")      '前端盖外径
        setParamValue(m1, "d14", read("f_cover_in_diameter"), "浮点型")  '前端盖内径

        setParamValue(m1, "d4", read("f_cover_thickness"), "浮点型")      '前端盖厚度 


        setParamValue(m1, "d17", read("f_cover_hole_diameter"), "浮点型")     '前端盖孔直径
        d17 = Get_ParamValue(m1, "d17")
        setParamValue(m1, "d99", d17, "浮点型")    '前端盖输水孔直径
        setParamValue(m1, "d98", read("w_hole_length"), "浮点型")     '前端盖输水孔长度


        setParamValue(m1, "d10", read("b_cover_ex_diameter"), "浮点型") '后端盖外径
        setParamValue(m1, "d12", read("b_cover_in_diameter"), "浮点型") '后端盖内径
        setParamValue(m1, "d38", read("b_cover_thickness"), "浮点型")    '后端盖厚度
        d10 = Get_ParamValue(m1, "d10")
        d12 = Get_ParamValue(m1, "d12")
        setParamValue(m1, "d18", d10, "浮点型")     '前端盖孔构造圆直径

        setParamValue(m1, "d127", (d10 + d12) / 2, "浮点型")
        d4 = Get_ParamValue(m1, "d4")
        d5 = Get_ParamValue(m1, "d5")
        setParamValue(m1, "d9", d5 + d4, "浮点型") '圆筒长度 
        setParamValue(m1, "d11", read("lu_length"), "浮点型")    '加工长度
        d61 = Get_ParamValue(m1, "d61")
        d62 = Get_ParamValue(m1, "d62")
        d63 = Get_ParamValue(m1, "d63")
        setParamValue(m1, "d61", Int((d10 / 333.4) * d61）, "浮点型")    '左右吊攀
        setParamValue(m1, "d62", Int((d10 / 333.4) * d62), "浮点型")    '中缝长度
        setParamValue(m1, "d63", Int((d10 / 333.4) * d63), "浮点型")    '长度
        d76 = Get_ParamValue(m1, "d76")
        d115 = Get_ParamValue(m1, "d115")
        d89 = Get_ParamValue(m1, "d89")
        d86 = Get_ParamValue(m1, "d86")
        d85 = Get_ParamValue(m1, "d85")
        d28 = Get_ParamValue(m1, "d28")
        setParamValue(m1, "d76", Int((d10 / 333.4) * d76）, "浮点型")
        setParamValue(m1, "d115", Int((d10 / 333.4) * d115）, "浮点型")
        setParamValue(m1, "d85", Int((d10 / 333.4) * d85）, "浮点型")
        setParamValue(m1, "d86", Int((d10 / 333.4) * d86）, "浮点型")
        setParamValue(m1, "d89", Int(((d10 / 333.4) * d86) + 2）, "浮点型")
        setParamValue(m1, "d28", Int((d10 / 333.4) * d28), "浮点型")
        RegenerateModel(m1)
        ExportJpg(path, imageName)


        m2 = activateModel("dj18-103-01-02", 2)
        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        drawing = CType(m2, IpfcDrawing)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {560, 350})
        添加图幅注释(m2, read("T_MOTOR"))
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        endApp()



    End Sub
    Public Function Get_ParamValue(model As IpfcModel, paramName$， Optional angle# = 0) As Double
        Dim n As Double
        If model IsNot Nothing Then
            iParameterOwner = CType(model, IpfcParameterOwner)
            iParameter = iParameterOwner.GetParam(paramName)
            iparamValue = iParameter.GetScaledValue
            'AC.Session.RunMacro("imi  ~Command `ProCmdRegenPart` ;")
            iParameter.SetScaledValue(iparamValue, Nothing)
        End If
        Return iparamValue.DoubleValue
    End Function
    Public Function xiugai(partName$， fei$, Com_name$, material$) As IpfcModel '废物
        m2 = activateModel(partName$, 1)

        m2.CommonName = Com_name
        setParamValue(m2, "MATERIAL", material, "字符串")
        RegenerateModel(m2)


        closeWindow(m2)

        Return m2
    End Function
    '无工程图
    Public Sub box(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        If read("type") = 1 Then
            deleteFileChangeModel("asm", "E:\works\creo\box_assembly\3sb-676-001.asm")
            m1 = activateModel("transition", 0)
            'partValue(m1)
            RegenerateModel(m1)


            m2 = activateModel("8sb-050-002", 1)
            partValue(m2)
            RegenerateModel(m2)
            setParamValue(m2, "d20", read("box_radius"), "浮点型") '弧线半径
            setParamValue(m2, "d366", read("box_height"), "浮点型") '高度
            setParamValue(m2, "d17", read("second_side_length"), "浮点型") '宽度
            setParamValue(m2, "d392", read("box_rad_height"), "浮点型") '弧线离顶高
            setParamValue(m2, "d15", read("thickness"), "浮点型") '厚度
            setParamValue(m2, "d196", read("first_side_length"), "浮点型") '正面长度

        End If
        '重命名
        m2 = activateModel("8sb-050-002", 1)
        m2.Rename(read("CODE") + "_1", True)
        Threading.Thread.Sleep(1000)

        m3 = activateModel("8sb-064-003", 1)
        m3.Rename(read("CODE") + "_2", True)
        Threading.Thread.Sleep(1000)

        m4 = activateModel("8sb-150-004", 1)
        m4.Rename(read("CODE") + "_3", True)
        Threading.Thread.Sleep(1000)

        m5 = activateModel("8sb-064-005", 1)
        m5.Rename(read("CODE") + "_4", True)
        Threading.Thread.Sleep(1000)

        m1 = activateModel("transition", 0)
        'partValue(m1)
        RegenerateModel(m1)
        m1.Rename(read("CODE"), True)


        RegenerateModel(m6)
        Threading.Thread.Sleep(1000)
        ExportJpg_New(path, imageName)


        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)
        endApp()
    End Sub
    Public Sub stator_core(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库path_1
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "stator_lamination", read("stator_lamination_id"))
        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类


        If read("clasp_code") = "0" Then
            If read("stator_pressing_ring_path") = "0" Then
                componentModel_1 = 固定零件(assembly, 1, read("stator_lamination_path"))

            Else
                componentModel_1 = 固定零件(assembly, 1, read("stator_lamination_path"))
                asmcomp_1 = 插入零件_1(assembly, 1, read("stator_pressing_ring_path"))
                a = {84}
                aa = {87}
                constraints = 面面约束(asmcomp_1, a, aa, 64, 64, 0)
                constraints = 轴约束(asmcomp_1, a, aa, "A_1", "A_1")
                constraints.Clear()
                asmcomp_1 = 插入零件_1(assembly, 1, read("stator_pressing_ring_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(modelItems.Count - 2).Id}
                constraints = 面面约束(asmcomp_1, a, aa, 67, 64, 0)
                constraints = 轴约束(asmcomp_1, a, aa, "A_1", "A_1")
                constraints.Clear()
            End If
        Else
            If read("stator_pressing_ring_path") = "0" Then
                componentModel_1 = 固定零件(assembly, 1, read("stator_lamination_path"))


                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("clasp_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_1, IpfcViewOwner)
                view = viewer.GetView("FRONT")
                transform3D_1 = view.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                modelItems = listModelItem(m1, "FEATURE")
                aa = {modelItems.Item(7).Id}
                a = {84}
                'aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "TOP", 0)

                'a = {modelItems.Item(8).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 67, 243, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 70, 132, 7)
                constraints.Clear()


            Else
                smodel_1 = (New CCpfcModelDescriptor).Create(1, read("stator_lamination_path"), Nothing)
                componentModel_1 = AC.Session.RetrieveModel(smodel_1)
                asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
                'asmcomp_1 = 插入零件_1(m1, "E:\works\Creo\template\stator_core\8ly_660_000.prt")
                constraints = New CpfcComponentConstraints
                constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
                constraints.Append(constraint)
                asmcomp_1.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                ' 将零件或组件插入到总组件中，需要与总组件内其他元件有一定的距离
                ' 1、先NEW一个模型项目类型数组对象，在数组对象中设置类型
                ' 2、通过类型转换获得视图所有者对象，通过视图所有者的获得视图的方法返回需要的视图对象
                ' 3、            
                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("stator_pressing_ring_path"), Nothing)
                componentModel_2 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_1, IpfcViewOwner)
                view = viewer.GetView("FRONT")
                transform3D_1 = view.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_2, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                ids = (New Cintseq)
                ids.Append(84)
                path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                compItem_1 = componentModel_1.GetItemByName(4, "A_1")
                compItem_2 = componentModel_2.GetItemByName(4, "A_1")
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path_1)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_1.GetItemByID(1, 64)
                compItem_4 = componentModel_2.GetItemByID(1, 67)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path_1)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0) '重合偏移=1
                'constraint1.Offset = -30
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("stator_pressing_ring_path"), Nothing)
                componentModel_4 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_1, IpfcViewOwner)
                view = viewer.GetView("FRONT")
                transform3D_1 = view.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_4, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                modelItems = listModelItem(m1, "FEATURE")
                ids = (New Cintseq)
                ids.Append(84)
                path_1 = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
                compItem_1 = componentModel_1.GetItemByName(4, "A_1")
                compItem_2 = componentModel_4.GetItemByName(4, "A_1")
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, path_1)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Nothing)

                compItem_3 = componentModel_1.GetItemByID(1, 67)
                compItem_4 = componentModel_4.GetItemByID(1, 64)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(compItem_3, path_1)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(compItem_4, Nothing)

                constraint = (New CCpfcComponentConstraint).Create(2) '重合=0
                constraint.AssemblyReference = compSelect_1
                constraint.ComponentReference = compSelect_2

                constraint1 = (New CCpfcComponentConstraint).Create(0) '重合偏移=1
                constraint1.AssemblyReference = compSelect_3
                constraint1.ComponentReference = compSelect_4

                constraints.Append(constraint)
                constraints.Append(constraint1)
                asmcomp_2.SetConstraints(constraints, Nothing)
                AC.Session.CurrentWindow.Refresh()
                constraints.Clear()

                smodel_2 = (New CCpfcModelDescriptor).Create(1, read("clasp_path"), Nothing)
                componentModel_3 = AC.Session.RetrieveModel(smodel_2)
                excludes = New CpfcModelItemTypes
                excludes.Set(0, EpfcModelItemType.EpfcITEM_AXIS)
                excludes.Set(1, EpfcModelItemType.EpfcITEM_POINT)
                excludes.Set(2, EpfcModelItemType.EpfcITEM_COORD_SYS)
                viewer = CType(componentModel_1, IpfcViewOwner)
                view = viewer.GetView("FRONT")
                transform3D_1 = view.Transform
                outline = assembly.EvalOutline(transform3D_1, excludes)
                p3d = outline.Item(1)
                asmcomp_2 = assembly.AssembleComponent(componentModel_3, transform3D_1)
                model.Display()
                AC.Session.CurrentWindow.Activate() '激活当前窗口的模型
                AC.Session.CurrentWindow.Refresh() '刷新当前窗口的模型    
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "TOP", 0)

                a = {modelItems.Item(8).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 67, 243, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 70, 132, 7)
                constraints.Clear()



                Threading.Thread.Sleep(3000)
                AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node10`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
                ' 根据轴阵列
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                '轴阵列()
                'If read1("sl_type") = 1 Then
                '    setParamValue(m1, "d89", "", "角度", (360 / read1("sl_number")))
                '    setParamValue(m1, "p92", read1("sl_number"), "浮点型")
                'Else
                '    setParamValue(m1, "d86", "", "角度", (360 / read1("sl_number")))
                '    setParamValue(m1, "p89", read1("sl_number"), "浮点型")

                'End If
                setParamValue(m1, "d89", "", "角度", (360 / read1("sl_number")))
                setParamValue(m1, "p92", read1("sl_number"), "浮点型")
            End If
        End If




        m2 = activateModel(read("stator_lamination_code"), 1)
        Threading.Thread.Sleep(500)

        setParamValue(m2, "d4", read("core_thickness"), "浮点型")
        setParamValue(m2, "MASS", read("mass"), "浮点型")
        Threading.Thread.Sleep(1000)
        RegenerateModel(m2)
        If read1("slot_type") = 1 Then
            setParamValue(m2, "d118", "", "角度"， 90) '槽斜角度
            setParamValue(m2, "d128", "", "角度"， 90 + read("slot_angle")) '槽斜角度
        ElseIf read1("slot_type") = 2 Then
            setParamValue(m2, "d142", "", "角度"， 90) '槽斜角度
            setParamValue(m2, "d157", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
        ElseIf read1("slot_type") = 3 Then
            setParamValue(m2, "d176", "", "角度"， 90) '槽斜角度
            setParamValue(m2, "d187", "", "角度"， 90 + (read("slot_angle"))) '槽斜角度
        End If
        RegenerateModel(m2)
        Threading.Thread.Sleep(500)



        asmItem_1 = model.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d7")
        BaDimension = CType(asmItem_1, IpfcBaseDimension)
        Dimension1 = CType(BaDimension, IpfcDimension)

        closeWindow(m2)
        Threading.Thread.Sleep(10000) ' 10秒
        RegenerateModel(m1)


        If read1("piece") = 1 Then
            modelItems = listModelItem(m1, "FEATURE")
            compItem_1 = modelItems.Item(6)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            ' 根据轴阵列
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `6`;" +
                                    "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst` `6`;" +
                                    "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_num_inst`;" +
                                    "~ Input `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr` `60`;" +
                                    "~ Update `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr` `60`;" +
                                    "~ FocusOut `main_dlg_cur` `maindashInst0.ui_pat_axis_1_incr`;\" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            '轴阵列()
            'setParamValue(m1, "d89", "", "角度", 60)
            'setParamValue(m1, "p92", 6, "浮点型")
            'setParamValue(m1, "d94", "", "角度", 60)
            'setParamValue(m1, "p97", 6, "浮点型")
        End If

        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        m1.Rename(read("code"), True)
        Threading.Thread.Sleep(1000)
        RegenerateModel(m1)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {300, 250}, {800, 500}, {0, 0}, {350, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {250, 250}, {750, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {140, 250}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 200}, {700, 500}, {0, 0}, {250, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 100}, {300, 180}, {0, 0}, {140, 180})
        End If

        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")




        If read("clasp_code") = "0" Then
            If read("stator_pressing_ring_path") <> "0" Then
                刨视图("view_2", "XSEC0001", "fullPlane", 9)

                If read1("piece") = 1 Then
                    AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node5`;")
                    AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node16`;")
                Else
                    AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node5`;")
                End If
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row29` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row32` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row35` `show`;")
                'AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_apply`;")
                'AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tab_dtl_types` 1;")
                'AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_sel_all_dtm`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0) - 20, drawing.GetDimensionLocation(Dimension1).Item(1) - 100))
            Else
                刨视图("view_2", "XSEC0001", "fullPlane", 5)
            End If

        ElseIf read("clasp_code") <> "0" Then
            If read("stator_pressing_ring_path") <> "0" Then
                刨视图("view_2", "XSEC0001", "fullPlane", 10)


                If read1("piece") = 1 Then
                    AC.Session.RunMacro("8 ~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node6`;")
                    AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node17`;")
                Else
                    AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node6`;")
                End If
                AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row29` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row32` `show`;")
                AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row35` `show`;")
                'AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_apply`;")
                'AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tab_dtl_types` 1 \")
                'AC.Session.RunMacro("8 `lay_datum`;~ Activate `show_model_annotations` `psh_sel_all_dtm`;\")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
                AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")
                drawing.SetDimensionLocation(Dimension1, CreatePoint(drawing.GetDimensionLocation(Dimension1).Item(0) - 20, drawing.GetDimensionLocation(Dimension1).Item(1) - 100))
            Else
                刨视图("view_2", "XSEC0001", "fullPlane", 7)
            End If
        End If


        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        零件工程图转移(Replace(read("stator_lamination_path"), "prt", "drw"), path + "\" + read("stator_lamination_code") + ".drw.1")
        If read("stator_pressing_ring_path") <> "0" Then
            零件工程图转移(Replace(read("stator_pressing_ring_path"), "prt", "drw"), path + "\" + read("stator_pressing_ring_code") + ".drw.1")
        End If
        If read("clasp_path") <> "0" Then
            零件工程图转移(Replace(read("clasp_path"), "prt", "drw"), path + "\" + read("clasp_code") + ".drw.1")
        End If
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub front_cover_assembly(localhost$, tabledase$, ID#, path$, imageName$)
        Dim string_2, string_3 As Istringseq
        Dim path1 As String
        path1 = path + "\\parts"
        mysql_new(localhost$, tabledase$, ID#)
        m1 = openModel("asm", "E:\works\creo\front_cover\single\8ly_013_000.asm")
        m1 = activateModel("8ly_013_000", 0)
        partValue(m1)
        string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\front_cover\single")
        string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\works\creo\front_cover\single")
        For i = 0 To string_3.Count - 1
            m2 = retrieveModel("frm", string_3.Item(i))
        Next
        For i = 0 To string_2.Count - 1
            m2 = retrieveModel("drw", string_2.Item(i))
        Next
        RegenerateModel(m1)
        closeWindow(m1)
        '------------------------------ 后法兰 -----------------------------
        m3 = activateModel("8ly_013_000-01", 1)
        m3.CommonName = "后法兰"
        setParamValue(m3, "MATERIAL", read("thickness_1").ToString + "X65扁板 Q235", "字符串")
        setParamValue(m3, "d4", read("thickness_1"), "浮点型") '后法兰厚度
        setParamValue(m3, "d5", read("outer_diameter_1"), "浮点型") '后法兰外径
        setParamValue(m3, "d6", read("inside_diameter_1"), "浮点型") '后法兰内径
        RegenerateModel(m3)
        m4 = activateModel("8ly_013_000-01", 2)
        RegenerateModel(m4)
        drawing = CType(m4, IpfcDrawing)
        modelItems = listModelItem(m4, "DTL_NOTE")
        If read("outer_diameter_1") <= 404 Then ' 180
            修改注释(modelItems, 31, "1/2.5")
        ElseIf read("outer_diameter_1") > 404 And read("outer_diameter_1") <= 450 Then '200
            修改注释(modelItems, 31, "1/2.5")
        ElseIf read("outer_diameter_1") > 450 And read("outer_diameter_1") <= 526 Then '250
            修改注释(modelItems, 31, "1/3")
        ElseIf read("outer_diameter_1") > 526 And read("outer_diameter_1") <= 600 Then '280
            修改注释(modelItems, 31, "1/3")
        ElseIf read("outer_diameter_1") > 600 And read("outer_diameter_1") <= 740 Then ' 355
            修改注释(modelItems, 31, "1/3.5")
        End If
        添加图幅注释(m4， read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m4.Rename(read("CODE") + "-01", True)
        m3.Rename(read("CODE") + "-01", True)
        activateModel(m3.FileName, 1)
        RegenerateModel(m3)
        smodel = drawing.Descr
        smodel.Path = path1
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m3)
        closeWindow(m4)
        '------------------------------ 筋条 -----------------------------
        m5 = activateModel("8ly_013_000-02", 1)
        m5.CommonName = "筋条"
        setParamValue(m5, "MATERIAL", read("rib_high").ToString + "X" + read("rib_wide").ToString + "扁钢 Q235", "字符串")
        setParamValue(m5, "d4", read("rib_length"), "浮点型") '筋条长度
        setParamValue(m5, "d6", read("rib_wide"), "浮点型")  '筋条宽
        setParamValue(m5, "d5", read("rib_high"), "浮点型") '筋条高
        setParamValue(m5, "d8", read("chamfer"), "浮点型") '倒角
        RegenerateModel(m5)
        m6 = activateModel("8ly_013_000-02", 2)
        RegenerateModel(m6)
        drawing = CType(m6, IpfcDrawing)
        note_Item_1 = listModelItem_1(m6, "DTL_NOTE", "Note_61")

        修改注释_name(note_Item_1, "1/2.5")
        添加图幅注释(m6， read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m6.Rename(read("CODE") + "-02", True)
        m5.Rename(read("CODE") + "-02", True)
        activateModel(m5.FileName, 1)
        RegenerateModel(m5)
        smodel = drawing.Descr
        smodel.Path = path1
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m5)
        closeWindow(m6)
        '------------------------------ 前法兰 -----------------------------
        m7 = activateModel("8ly_013_000-03", 1)
        m7.CommonName = "前法兰"
        setParamValue(m7, "MATERIAL", read("thickness_2").ToString + "X85扁板 Q235", "字符串")
        setParamValue(m7, "d4", read("thickness_2"), "浮点型") '前法兰厚度
        setParamValue(m7, "d5", read("outer_diameter_2"), "浮点型") '前法兰外径
        setParamValue(m7, "d6", read("inside_diameter_2"), "浮点型") '前法兰内径
        RegenerateModel(m7)
        m8 = activateModel("8ly_013_000-03", 2)
        RegenerateModel(m8)
        drawing = CType(m8, IpfcDrawing)
        modelItems = listModelItem(m8, "DTL_NOTE")
        If read("outer_diameter_2") <= 404 Then ' 180
            修改注释(modelItems, 31, "1/2.5")
        ElseIf read("outer_diameter_2") > 404 And read("outer_diameter_2") <= 450 Then '200
            修改注释(modelItems, 31, "1/2.5")
        ElseIf read("outer_diameter_2") > 450 And read("outer_diameter_2") <= 520 Then '250
            修改注释(modelItems, 31, "1/3")
        ElseIf read("outer_diameter_2") > 520 And read("outer_diameter_2") <= 596 Then '280
            修改注释(modelItems, 31, "1/3")
        ElseIf read("outer_diameter_2") > 596 And read("outer_diameter_2") <= 730 Then ' 355
            修改注释(modelItems, 31, "1/3.5")
        End If
        添加图幅注释(m8， read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m8.Rename(read("CODE") + "-03", True)
        m7.Rename(read("CODE") + "-03", True)
        activateModel(m7.FileName, 1)
        RegenerateModel(m7)
        smodel = drawing.Descr
        smodel.Path = path1
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m7)
        closeWindow(m8)

        m1 = activateModel("8ly_013_000", 0)
        'modelItems = listModelItem(m1, "DTL_NOTE")
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()

        'If read("outer_diameter_3") = read("outer_diameter_1") Then
        '    deleteFeature(m1, 85)
        'Else
        '    setParamValue(m1, "d81", read("outer_diameter_3"), "浮点型") '前法兰加工后直径
        'End If
        setParamValue(m1, "d81", read("outer_diameter_3"), "浮点型") '前法兰加工后直径
        setParamValue(m1, "d155", read("inside_diameter_3"), "浮点型") '前法兰加工后内径
        setParamValue(m1, "d83", read("thickness_3"), "浮点型") '前法兰加工去除厚度
        setParamValue(m1, "d85", read("SA_depth_1"), "浮点型") '止口深
        setParamValue(m1, "d86", read("SA_diameter_1"), "浮点型") '止口直径
        setParamValue(m1, "d90", read("slot_connect_1"), "浮点型") '孔定位直径
        setParamValue(m1, "d89", "", "角度", read("slot_x_angle_1")) '孔相对X轴偏转角度
        setParamValue(m1, "d91", read("slot_diameter_1"), "浮点型") '孔直径
        setParamValue(m1, "p96", read("slot_number_1"), "浮点型") '孔数


        setParamValue(m1, "d103", read("thickness_4"), "浮点型") '后法兰加工去除厚度
        setParamValue(m1, "d105", read("SA_depth_2"), "浮点型") '止口深
        setParamValue(m1, "d106", read("SA_diameter_2"), "浮点型") '止口直径
        setParamValue(m1, "d109", read("slot_connect_2"), "浮点型") '孔定位直径
        setParamValue(m1, "d110", "", "角度", read("slot_x_angle_2")) '孔相对X轴偏转角度
        setParamValue(m1, "d111", read("slot_diameter_2"), "浮点型") '孔直径
        setParamValue(m1, "p116", read("slot_number_2"), "浮点型") '孔数

        setParamValue(m1, "d99", read("f_b_distance"), "浮点型") '前后法兰距离
        setParamValue(m1, "p123", read("rib_number"), "浮点型") '筋条数
        'setParamValue(m1, "d140", read("slot_connect_2") / 2, "浮点型")
        setParamValue(m1, "d153", (read("outer_diameter_3") - 4) / 2, "浮点型")
        'If read("outer_diameter_4") = read("outer_diameter_2") Then
        '    deleteFeature(m1, 405)
        'Else

        'End If


        setParamValue(m1, "d158", read("inside_diameter_4"), "浮点型") '后法兰加工后内径
        setParamValue(m1, "d101", read("outer_diameter_4"), "浮点型") '后法兰加工后直径



        '新增
        setParamValue(m1, "d161", read("outer_diameter_3") - 4, "浮点型") '前法兰防护罩止口内径
        setParamValue(m1, "d164", read("outer_diameter_4") - 4, "浮点型") '后法兰防护罩止口内径


        setParamValue(m1, "d175", read("solt_name"), "浮点型") '拆装孔
        setParamValue(m1, "d174", read("solt_angle"), "浮点型") '拆装孔
        asmItem_2 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d91")
        asmItem_3 = m1.GetItemByName(EpfcModelItemType.EpfcITEM_DIMENSION, "d111")
        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m2 = activateModel("8ly_013_000", 2)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        modelItems = listModelItem(m2, "DTL_NOTE")
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        Dim aaa As IpfcModelItem
        aaa = listModelItem_1(m2, "DTL_NOTE", "Note_198")
        '’''msgbox(aaa.GetName, aaa.Id)
        修改注释_name(aaa, view2Ds.Item(0).Scale.ToString)

        'If read("outer_diameter_1") <= 404 Then ' 180
        '    修改注释(modelItems, 32, "1/2.5")
        '    view2Ds.Item(0).Scale = 4 / 10
        '    view2Ds.Item(1).Scale = 4 / 10
        'ElseIf read("outer_diameter_1") > 404 And read("outer_diameter_1") <= 450 Then '200
        '    修改注释(modelItems, 32, "1/2.5")
        '    view2Ds.Item(0).Scale = 4 / 10
        '    view2Ds.Item(1).Scale = 4 / 10
        'ElseIf read("outer_diameter_1") > 450 And read("outer_diameter_1") <= 520 Then '250
        '    修改注释(modelItems, 32, "1/3")
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read("outer_diameter_1") > 520 And read("outer_diameter_1") <= 596 Then '280
        '    修改注释(modelItems, 32, "1/3")
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read("outer_diameter_1") > 596 And read("outer_diameter_1") <= 730 Then ' 355
        '    修改注释(modelItems, 32, "1/4")
        '    view2Ds.Item(0).Scale = 1 / 4
        '    view2Ds.Item(1).Scale = 1 / 4
        'End If

        'modelItems = m2.ListItems(EpfcModelItemType.EpfcITEM_DIMENSION)

        'change_txt_note_text2(listModelItem_1(m2, "DTL_NOTE", "Note_166"), "2-" + read("solt_name") + "-H6")
        change_txt_note_text2(listModelItem_1(m2, "DTL_NOTE", "Note_166"), "2-M" + （read("solt_name")）.ToString + "ESQ")
        添加图幅注释(m2， read("T_MOTOR"))

        修改绘制尺寸值_new(asmItem_2， read("slot_number_1"))
        修改绘制尺寸值_new(asmItem_3， read("slot_number_2"))


        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})




        Threading.Thread.Sleep(1000)
        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        If m1.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
            activateModel(m1.FileName, 0)
        ElseIf m1.Type = EpfcModelType.EpfcMDL_PART Then
            activateModel(m1.FileName, 1)
        End If
        RegenerateModel(m1)
        closeWindow(m1)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
        End If

        endApp()
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub rear_cover_assembly(localhost$, tabledase$, ID#, path$, imageName$)
        Dim string_2, string_3 As Istringseq
        mysql_new(localhost$, tabledase$, ID#)
        m1 = openModel("asm", "E:\works\creo\rear_cover\180\5ly_014_180.asm")
        m1 = activateModel("5ly_014_180", 0)
        partValue(m1)
        string_2 = CType(AC.Session, IpfcBaseSession).ListFiles("*.drw", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\desktop\rear_cover\180")
        string_3 = CType(AC.Session, IpfcBaseSession).ListFiles("*.frm", EpfcFileListOpt.EpfcFILE_LIST_LATEST, "E:\desktop\rear_cover\180")
        For i = 0 To string_3.Count - 1
            m2 = retrieveModel("frm", string_3.Item(i))
        Next
        For i = 0 To string_2.Count - 1
            m2 = retrieveModel("drw", string_2.Item(i))
        Next
        RegenerateModel(m1)
        closeWindow(m1)
        '------------------------------ 法兰 -----------------------------
        m3 = activateModel("8ly_014_180-01", 1)
        m3.CommonName = "法兰"
        setParamValue(m3, "MATERIAL", read("thickness_1").ToString + "钢板Q235", "字符串")
        setParamValue(m3, "d4", read("thickness_1"), "浮点型") '法兰厚度
        setParamValue(m3, "d5", read("outer_diameter_1"), "浮点型") '法兰外径
        setParamValue(m3, "d6", read("inside_diameter_1"), "浮点型") '法兰内径

        setParamValue(m3, "d9", read("inside_diameter_2"), "浮点型") '轴承处内径
        setParamValue(m3, "d10", read("outer_diameter_2"), "浮点型") '轴承处外径

        setParamValue(m3, "d14", read("rib_wide_1"), "浮点型") '筋条宽
        setParamValue(m3, "d13", "", "角度", (read("rib_x_angle_1"))) '筋条相对X轴偏转角度
        setParamValue(m3, "p17", read("rib_number_1"), "浮点型") '筋条
        setParamValue(m3, "d16", read("rib_fillet_1"), "浮点型") '筋条处圆角
        setParamValue(m3, "d70", read("rib_fillet_1"), "浮点型") '筋条处圆角
        setParamValue(m3, "d71", read("rib_fillet_1"), "浮点型") '筋条处圆角
        setParamValue(m3, "d72", read("rib_fillet_1"), "浮点型") '筋条处圆角

        setParamValue(m3, "d22", read("chamfer_1"), "浮点型")  '倒角
        RegenerateModel(m3)
        m4 = activateModel("8ly_014_180-01", 2)
        drawing = CType(m4, IpfcDrawing)
        modelItems = listModelItem(m4, "DTL_NOTE")
        If read("outer_diameter_1") <= 404 Then ' 180
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_1") > 404 And read("outer_diameter_1") <= 450 Then '200
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_1") > 450 And read("outer_diameter_1") <= 526 Then '250
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_1") > 526 And read("outer_diameter_1") <= 600 Then '280
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_1") > 600 And read("outer_diameter_1") <= 740 Then ' 355
            修改注释(modelItems, 30, "1/3.5")
        End If
        添加图幅注释(m4, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m4, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)
        Threading.Thread.Sleep(1000)
        m4.Rename(read("CODE") + "-01", True)
        m3.Rename(read("CODE") + "-01", True)
        activateModel(m3.FileName, 1)
        RegenerateModel(m3)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m3)
        closeWindow(m4)
        '------------------------------ 轴承室 -----------------------------
        m5 = activateModel("8ly_014_180-02", 1)
        m5.CommonName = "轴承室"
        setParamValue(m5, "MATERIAL", read("thickness_3").ToString + "钢板Q235", "字符串")
        setParamValue(m5, "d4", read("thickness_3"), "浮点型") '轴承室厚度
        setParamValue(m5, "d5", read("outer_diameter_3"), "浮点型") '轴承室外径
        setParamValue(m5, "d6", read("inside_diameter_3"), "浮点型") '轴承室内径

        setParamValue(m5, "d8", read("thickness_4"), "浮点型") '轴承室余料长度
        setParamValue(m5, "d9", read("outer_diameter_4"), "浮点型") ' 轴承室余料外径

        setParamValue(m5, "d11", read("chamfer_2"), "浮点型")  '倒角
        RegenerateModel(m5)
        m6 = activateModel("8ly_014_180-02", 2)
        drawing = CType(m6, IpfcDrawing)
        modelItems = listModelItem(m6, "DTL_NOTE")
        If read("outer_diameter_3") <= 404 Then ' 180
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_3") > 404 And read("outer_diameter_3") <= 450 Then '200
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_3") > 450 And read("outer_diameter_3") <= 520 Then '250
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_3") > 520 And read("outer_diameter_3") <= 596 Then '280
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_3") > 596 And read("outer_diameter_3") <= 730 Then ' 355
            修改注释(modelItems, 30, "1/3.5")
        End If

        添加图幅注释(m6, read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m6.Rename(read("CODE") + "-02", True)
        m5.Rename(read("CODE") + "-02", True)
        activateModel(m5.FileName, 1)
        RegenerateModel(m5)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
        closeWindow(m5)
        closeWindow(m6)
        '------------------------------ 后端盖 -----------------------------
        m1 = activateModel("5ly_014_180", 0)
        m1.CommonName = "后端盖"
        setParamValue(m1, "d94", read("thickness_5"), "浮点型") '后端盖轴承厚度
        setParamValue(m1, "d95", read("outer_diameter_5"), "浮点型") '后端盖轴承外径
        setParamValue(m1, "d150", read("inside_diameter_5"), "浮点型") '后端盖轴套内径

        setParamValue(m1, "d82", read("outer_diameter_6"), "浮点型") '加工去除外径
        setParamValue(m1, "d84", read("thickness_6"), "浮点型") '加工去除厚度 暂时搁置

        setParamValue(m1, "d86", read("thickness_7"), "浮点型") '止口深
        setParamValue(m1, "d87", read("outer_diameter_7"), "浮点型") '止口直径

        setParamValue(m1, "d91", read("thickness_8"), "浮点型") '与防护罩配合处切削深度
        setParamValue(m1, "d92", read("outer_diameter_8"), "浮点型")  '与防护罩配合处直径

        setParamValue(m1, "d100", read("outer_diameter_9"), "浮点型") '孔定位直径
        setParamValue(m1, "d99", "", "角度", (read("slot_x_angle_1"))) '孔相对X轴偏转角度
        setParamValue(m1, "d101", read("slot_diameter_1"), "浮点型") '孔直径
        setParamValue(m1, "p106", read("slot_number_1"), "浮点型") '孔数

        setParamValue(m1, "d111", read("outer_radius"), "浮点型") '防护罩孔定位半径
        setParamValue(m1, "p121", read("slot_number_2"), "浮点型") '防护罩孔数

        setParamValue(m1, "d126", read("outer_diameter_9") / 2, "浮点型") '拆卸孔定位直径 同d100
        RegenerateModel(m1)
        Threading.Thread.Sleep(1000)
        ExportJpg(path, imageName)
        m2 = activateModel("5ly_014_180", 2)
        drawing = CType(m2, IpfcDrawing)
        modelItems = listModelItem(m2, "DTL_NOTE")
        If read("outer_diameter_1") <= 404 Then ' 180
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_1") > 404 And read("outer_diameter_1") <= 450 Then '200
            修改注释(modelItems, 30, "1/2.5")
        ElseIf read("outer_diameter_1") > 450 And read("outer_diameter_1") <= 526 Then '250
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_1") > 526 And read("outer_diameter_1") <= 600 Then '280
            修改注释(modelItems, 30, "1/3")
        ElseIf read("outer_diameter_1") > 600 And read("outer_diameter_1") <= 740 Then ' 355
            修改注释(modelItems, 30, "1/3.5")
        End If
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        零件技术要求(drawing, REQUIREMENT, {100, 200})
        添加图幅注释(m2, read("T_MOTOR"))
        Threading.Thread.Sleep(1000)
        m2.Rename(read("CODE"), True)
        m1.Rename(read("CODE"), True)
        activateModel(m1.FileName, 0)
        RegenerateModel(m1)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        Threading.Thread.Sleep(1000)
    End Sub
    Public Sub stator_core_winding(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "stator_core_assembly", read("stator_core_id"))
        mysql_new2(localhost$, "creo", "stator_lamination", read1("stator_lamination_id"))
        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)

        Threading.Thread.Sleep(2000)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()

        If read2("slot_type") = 1 Then
            componentModel_1 = 固定零件(assembly, 0, read("stator_core_path"))
            m1 = activateModel(read2("Code"), 1)
            setParamValue(m1, "d118", "", "角度"， 90) '槽斜角度
            setParamValue(m1, "d128", "", "角度"， 90) '槽斜角度
            'setParamValue(m2, "MASS", read("mass"), "浮点型")
            RegenerateModel(m1)
            closeWindow(m1)
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\8ly_769_000")
            m2 = activateModel("8ly_769_000", 1)
            setParamValue(m2, "d10", read2("inside_diameter"), "浮点型") '内径
            setParamValue(m2, "d5", read2("slot_wide_mouth"), "浮点型") '槽口宽
            setParamValue(m2, "d6", read2("slot_wide_neck"), "浮点型") '槽肩宽
            setParamValue(m2, "d12", read2("slot_wide_neck") - 1, "浮点型")
            setParamValue(m2, "d8", read2("slot_diameter") * 2, "浮点型") '槽圆角直径
            setParamValue(m2, "d4", read2("slot_high_mouth"), "浮点型") '槽口高
            setParamValue(m2, "d9", read2("slot_high_shoulder"), "浮点型") '槽肩高
            setParamValue(m2, "d7", read2("slot_high_neck"), "浮点型") '槽颈高
            setParamValue(m2, "d19", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
            m2.CommonName = "相间绝缘"
            m2.Rename(read("phase_insulation_name"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("transition", 0)
            Threading.Thread.Sleep(1000)
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 1).Id}
            B = modelItems.Item(modelItems.Count - 1).Id
            idc = {1366, 67}
            idb = {227, 201}
            ida = {0, 3}
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\winding\8ly_542_000")
            m2 = activateModel("8ly_542_000", 1)
            setParamValue(m2, "d18", read2("slot_wide_neck") - 1, "浮点型") '槽肩宽
            setParamValue(m2, "d19", read2("slot_diameter") * 2 - 1, "浮点型") '槽圆角直径
            setParamValue(m2, "d20", read2("slot_high_neck") - read2("slot_high_shoulder") - 1, "浮点型") '槽颈高
            setParamValue(m2, "d17", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            m2.CommonName = "槽绝缘"
            m2.Rename(read("coli_name"), True)

            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            Threading.Thread.Sleep(1000)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {B}
            aa = {modelItems.Item(modelItems.Count - 2).Id}
            T1 = modelItems.Item(modelItems.Count - 2).Id
            idc = {231, 197}
            idb = {192, 178}
            ida = {0, 2}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\slot_wedge\8ly_783_000")
            m2 = activateModel("8ly_783_000", 1)
            setParamValue(m2, "d5", read2("slot_wide_mouth"), "浮点型") '槽楔口宽
            setParamValue(m2, "d6", read2("slot_wide_neck"), "浮点型") '槽楔肩宽
            setParamValue(m2, "d7", read2("slot_high_shoulder") - read2("slot_high_mouth"), "浮点型") '槽楔高
            setParamValue(m2, "d4", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
            m2.CommonName = "槽楔"
            m2.Rename(read("slot_wedge_name"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {B}
            aa = {modelItems.Item(modelItems.Count - 3).Id}
            T2 = modelItems.Item(modelItems.Count - 3).Id
            idc = {259, 197}
            idb = {78, 64}
            ida = {0, 2}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read("linelength"), "浮点型")
            'setParamValue(m2, "d4", 20, "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban2_material"), "字符串")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            m2.CommonName = "线圈"
            m2.Rename(read("gaiban_name2"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            T3 = modelItems.Item(modelItems.Count - 4).Id
            constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read("linelength") - 10, "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban1_material"), "字符串")
            m2.CommonName = "端部绝缘"
            m2.Rename(read("gaiban_name1"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            RegenerateModel(m1)
            Threading.Thread.Sleep(1000)


            '出线

            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)

            'setParamValue(m2, "d8", （read2("inside_diameter") + 2 * read2("slot_high_shoulder")） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            'setParamValue(m2, "d34", (read2("slot_high_neck") - 5) / 2, "浮点型") '顶边高度
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度
            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(11).Id}
            'aa = {modelItems.Item(13).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
            'a = {84, 84}
            'aa = {modelItems.Item(13).Id}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
            'constraints.Clear()
            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)
            'setParamValue(m2, "d8", （read2("inside_diameter") + 2 * read2("slot_high_shoulder")） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            'setParamValue(m2, "d34", (read2("slot_high_neck") - 5) / 2, "浮点型") '顶边高度
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度
            'm2.CommonName = "绕组出线"
            'm2.Rename(read("coli_name") + "_1", True)
            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(12).Id}
            'aa = {modelItems.Item(14).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
            'a = {84, 84}
            'aa = {modelItems.Item(14).Id}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
            'constraints.Clear()

            'msgbox（111）


            插入固定零件("槽绝缘", read("slot_insulation"), read("slot_insulation_material"))

            feats = listModelItem(m1, "FEATURE")
            compItem_1 = feats.Item(8)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            setParamValue(m1, "d93", "", "角度", (360 / read2("slot_number"))) '长
            setParamValue(m1, "p96", read2("slot_number"), "浮点型") '长
            RegenerateModel(m1)
            compItem_1 = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            compItem_1 = feats.Item(10)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()


            '阵列(modelItems.Item(12), m1, read2("slot_number"))
            阵列(modelItems.Item(14), m1, read2("slot_number"))

            'compItem_1 = feats.Item(13)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            'compItem_1 = feats.Item(15)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            RegenerateModel(m1)

        ElseIf read2("slot_type") = 2 Then
            componentModel_1 = 固定零件(assembly, 0, read("stator_core_path"))
            m1 = activateModel(read2("Code"), 1)

            setParamValue(m6, "d142", "", "角度"， 90) '槽斜角度
            setParamValue(m6, "d157", "", "角度"， 90) '槽斜角度
            RegenerateModel(m1)
            closeWindow(m1)
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\8ly_769_001")
            m2 = activateModel("8ly_769_001", 1)
            setParamValue(m2, "d4", read2("slot_wide_mouth"), "浮点型") '绝缘宽
            setParamValue(m2, "d9", read2("slot_wide_neck") - 1, "浮点型")
            setParamValue(m2, "d10", read2("slot_high_neck") - read2("slot_high_shoulder") - read2("slot_high_mouth"), "浮点型") '绝缘高
            setParamValue(m2, "d17", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
            m2.CommonName = "相间绝缘"
            m2.Rename(read("phase_insulation_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")

            a = {84, 84}
            aa = {87}
            'idc = {319, 64}
            idc = {5627, 64}
            idb = {281, 235}
            ida = {0, 3}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\winding\8ly_542_001")
            m2 = activateModel("8ly_542_001", 1)
            setParamValue(m2, "d5", read2("slot_wide_neck") - 1, "浮点型") '绕组宽
            setParamValue(m2, "d6", read2("slot_high_neck") - read2("slot_high_shoulder") - read2("slot_high_mouth") - 1, "浮点型") '槽颈高
            setParamValue(m2, "d4", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            m2.CommonName = "槽绝缘"
            m2.Rename(read("coli_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            '’''msgbox(0)
            a = {87}
            ' aa = {90}
            '’''msgbox(modelItems.Item(modelItems.Count - 2).Id)
            aa = {modelItems.Item(modelItems.Count - 2).Id}
            idc = {285, 235}
            idb = {80, 64}
            ida = {0, 2}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\slot_wedge\8ly_783_001")
            m2 = activateModel("8ly_783_001", 1)
            setParamValue(m2, "d5", read2("slot_wide_neck"), "浮点型") '槽楔宽
            setParamValue(m2, "d6", read2("slot_high_shoulder"), "浮点型") '槽楔高
            setParamValue(m2, "d9", "", "角度", (read2("slot_neck_angle"))) '槽楔角度
            setParamValue(m2, "d4", read1("core_thickness") + 30, "浮点型") '槽楔长度
            setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
            m2.CommonName = "槽楔"
            m2.Rename(read("slot_wedge_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            '’''msgbox(modelItems.Item(modelItems.Count - 3).Id)
            a = {87}
            'aa = {91}
            aa = {modelItems.Item(modelItems.Count - 3).Id}

            idc = {233, 235}
            idb = {88, 64}
            ida = {0, 2}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read2("linelength"), "浮点型")
            setParamValue(m2, "d4", 10, "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban2_material"), "字符串")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            m2.CommonName = "线圈"
            m2.Rename(read("gaiban_name2"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            T3 = modelItems.Item(modelItems.Count - 4).Id
            constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read2("linelength"), "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban1_material"), "字符串")
            m2.CommonName = "端部绝缘"
            m2.Rename(read("gaiban_name1"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            RegenerateModel(m1)
            Threading.Thread.Sleep(1000)


            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)
            'setParamValue(m2, "d8", （（read2("inside_diameter") + 2 * read2("slot_high_shoulder")） - 5） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            ''setParamValue(m2, "d33", （read("linehigh") - read2("slot_high_neck") - （read2("inside_diameter") + 2 * read2("slot_high_shoulder")） / 2） - 10, "浮点型") '顶边高度
            'setParamValue(m2, "d34"， (read2("slot_high_neck") - 6) / 2, "浮点型")
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度

            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(11).Id}
            'aa = {modelItems.Item(13).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
            'a = {84, 84}
            'aa = {modelItems.Item(13).Id}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
            'constraints.Clear()
            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)
            'setParamValue(m2, "d8", （（read2("inside_diameter") + 2 * read2("slot_high_shoulder")） - 5） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            'setParamValue(m2, "d34", (read2("slot_high_neck") - 5) / 2, "浮点型") '顶边高度 
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度
            'm2.CommonName = "绕组出线"
            'm2.Rename(read("coli_name") + "_1", True)
            ''  m2.Rename(read("exciter_gaiban2"), True)
            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(12).Id}
            'aa = {modelItems.Item(14).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
            'a = {84, 84}
            'aa = {modelItems.Item(14).Id}
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
            'constraints.Clear()
            插入固定零件("槽绝缘", read("slot_insulation"), read("slot_insulation_material"))
            feats = listModelItem(m1, "FEATURE")
            compItem_1 = feats.Item(8)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            setParamValue(m1, "d93", "", "角度", (360 / read2("slot_number"))) '长
            setParamValue(m1, "p96", read2("slot_number"), "浮点型") '长
            RegenerateModel(m1)
            compItem_1 = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            compItem_1 = feats.Item(10)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            阵列(modelItems.Item(14), m1, read3("groove_number"))
            'compItem_1 = feats.Item(13)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            'compItem_1 = feats.Item(15)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            RegenerateModel(m1)


        ElseIf read2("slot_type") = 3 Then
            componentModel_1 = 固定零件(assembly, 0, read("stator_core_path"))
            m1 = activateModel(read2("Code"), 1)
            setParamValue(m6, "d176", "", "角度"， 90) '槽斜角度
            setParamValue(m6, "d187", "", "角度"， 90) '槽斜角度
            RegenerateModel(m1)
            closeWindow(m1)
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\insulation\8ly_769_002")
            m2 = activateModel("8ly_769_002", 1)
            setParamValue(m2, "d7", read2("slot_wide_mouth"), "浮点型") '绝缘口宽
            setParamValue(m2, "d12", read2("slot_wide_neck"), "浮点型") '绝缘肩径
            setParamValue(m2, "d15", read2("slot_wide_neck") - 1, "浮点型")
            setParamValue(m2, "d5", read2("slot_high_mouth"), "浮点型") '绝缘口高
            setParamValue(m2, "d13", read2("slot_high_shoulder"), "浮点型") '绝缘肩高
            setParamValue(m2, "d6", read2("slot_high_neck"), "浮点型") '绝缘颈高
            setParamValue(m2, "d8", read2("slot_neck_angle"), "浮点型") '绝缘角度
            setParamValue(m2, "d9", read2("slot_r_corners"), "浮点型") '槽肩圆角
            setParamValue(m2, "d4", read2("inside_diameter"), "浮点型") '内径
            setParamValue(m2, "d23", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
            m2.CommonName = "相间绝缘"
            m2.Rename(read("phase_insulation_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            a = {84, 84}
            aa = {87}
            idc = {6238, 64}
            'idc = {886, 64}
            idb = {283, 237}
            ida = {0, 3}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\winding\8ly_542_002")
            m2 = activateModel("8ly_542_002", 1)
            setParamValue(m2, "d5", read2("slot_wide_neck") - 1, "浮点型") '槽肩宽
            setParamValue(m2, "d9", read2("slot_r_corners") - 1.5, "浮点型") '槽圆角直径
            setParamValue(m2, "d7", read2("slot_high_neck") - read2("slot_high_shoulder") - 1, "浮点型") '槽颈高
            setParamValue(m2, "d8", read2("slot_neck_angle"), "浮点型") '绝缘角度
            setParamValue(m2, "d4", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("coli_material"), "字符串")
            'setParamValue(m2, "MASS", read("mass"), "浮点型")
            m2.CommonName = "槽绝缘"
            m2.Rename(read("coli_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            a = {87}
            aa = {333}
            ''aa={90}
            idc = {239, 237}
            idb = {78, 64}
            ida = {0, 2}
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 15)
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\slot_wedge\8ly_783_000")
            m2 = activateModel("8ly_783_000", 1)
            setParamValue(m2, "d5", read2("slot_wide_mouth"), "浮点型") '槽楔口宽
            setParamValue(m2, "d6", read2("slot_wide_neck"), "浮点型") '槽楔肩宽
            setParamValue(m2, "d7", read2("slot_high_shoulder") - read2("slot_high_mouth"), "浮点型") '槽楔高
            setParamValue(m2, "d4", read1("core_thickness") + 30, "浮点型") '绝缘长度
            setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
            m2.CommonName = "槽楔"
            m2.Rename(read("slot_wedge_name"), True)
            RegenerateModel(m2)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            a = {87}
            'aa = {90}
            aa = {370}
            idc = {331, 237}
            idb = {78, 64}
            ida = {0, 2}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read2("linelength"), "浮点型")
            setParamValue(m2, "d4", 10, "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban2_material"), "字符串")
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            m2.CommonName = "线圈"
            m2.Rename(read("gaiban_name2"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            T3 = modelItems.Item(modelItems.Count - 4).Id
            constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 4).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
            m2 = activateModel("gaiban", 1)
            setParamValue(m2, "d5", read2("inside_diameter") + 2 * read2("slot_high_neck") + read2("slot_diameter") * 2 + 2, "浮点型") '端板外径
            setParamValue(m2, "d6", read2("inside_diameter") + 2 * read2("slot_high_shoulder") - 2, "浮点型") '端板内径
            setParamValue(m2, "d13", read2("linelength"), "浮点型")

            setParamValue(m2, "MATERIAL", read("gaiban1_material"), "字符串")
            m2.CommonName = "端部绝缘"
            m2.Rename(read("gaiban_name1"), True)
            Threading.Thread.Sleep(1000)
            RegenerateModel(m2)
            Threading.Thread.Sleep(1000)
            closeWindow(m2)
            m1 = activateModel("transition", 0)
            modelItems = listModelItem(m1, "FEATURE")
            a = {T2}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 0, 0)
            a = {84, 84}
            aa = {modelItems.Item(modelItems.Count - 5).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            RegenerateModel(m1)
            Threading.Thread.Sleep(1000)


            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)
            'setParamValue(m2, "d8", （（read2("inside_diameter") + 2 * read2("slot_high_shoulder")） - 5） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            'setParamValue(m2, "d34", (read2("slot_high_neck") - 5) / 2, "浮点型") '顶边高度
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度
            'RegenerateModel(m2)

            ''m2.CommonName = "线圈"
            ''m2.Rename(read("exciter_gaiban1"), True)
            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(11).Id}
            'aa = {modelItems.Item(13).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 基准面约束(asmcomp_2, a, aa, "RIGHT", "RIGHT")
            'constraints.Clear()
            'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
            'modelItems = listModelItem(m1, "FEATURE")
            'm2 = activateModel("coil_part", 1)
            'setParamValue(m2, "d8", （（read2("inside_diameter") + 2 * read2("slot_high_shoulder")） - 5） / 2, "浮点型") '下底高度
            'setParamValue(m2, "d32", read2("slot_high_neck") - 5, "浮点型") '两线间距
            'setParamValue(m2, "d31", read("linehigh"), "浮点型") '总高度
            'setParamValue(m2, "d34", (read2("slot_high_neck") - 5) / 2, "浮点型") '顶边高度
            'setParamValue(m2, "d7", read("linelength"), "浮点型") '长度
            'm2.CommonName = "绕组出线"
            'm2.Rename(read("coli_name") + "_1", True)
            'RegenerateModel(m2)
            'closeWindow(m2)
            'a = {modelItems.Item(12).Id}
            'aa = {modelItems.Item(14).Id}
            'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
            'constraints.Clear()

            插入固定零件("槽绝缘", read("slot_insulation"), read("slot_insulation_material"))
            feats = listModelItem(m1, "FEATURE")
            compItem_1 = feats.Item(8)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            setParamValue(m1, "d94", "", "角度", (360 / read2("slot_number"))) '长
            setParamValue(m1, "p97", read2("slot_number"), "浮点型") '长
            RegenerateModel(m1)
            compItem_1 = feats.Item(9)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            compItem_1 = feats.Item(10)
            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            selBuffer.AddSelection(compSelect_1)
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            selBuffer.Clear()
            阵列(modelItems.Item(14), m1, read3("groove_number"))

            'compItem_1 = feats.Item(13)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            'compItem_1 = feats.Item(15)
            'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
            'selBuffer.AddSelection(compSelect_1)
            'AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
            '                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
            '                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
            '                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
            '                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            'selBuffer.Clear()
            RegenerateModel(m1)

        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)

        m1.Rename(read("code"), True)
        RegenerateModel(m1)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {350, 150}, {800, 500}, {0, 0}, {350, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {250, 200}, {750, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {140, 200}, {700, 500}, {0, 0}, {250, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 200}, {650, 500}, {0, 0}, {140, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 100}, {300, 180}, {0, 0}, {140, 180})
        End If

        刨视图("view_2", "XSEC0001", "halfPlane", 13)
        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))



        'If read2("outer_diameter") <= 300 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read2("outer_diameter") > 300 And read2("outer_diameter") <= 340 Then
        '    view2Ds.Item(0).Scale = 1 / 2
        '    view2Ds.Item(1).Scale = 1 / 2
        'ElseIf read2("outer_diameter") > 340 And read2("outer_diameter") <= 430 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read2("outer_diameter") > 430 And read2("outer_diameter") <= 493 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read2("outer_diameter") > 493 And read2("outer_diameter") <= 620 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read2("outer_diameter") > 620 And read2("outer_diameter") <= 720 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read2("outer_diameter") > 720 And read2("outer_diameter") <= 800 Then
        '    view2Ds.Item(0).Scale = 1 / 8
        '    view2Ds.Item(1).Scale = 1 / 8
        'End If
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")

        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`;")
        AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row6` `show`;")

        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")



        modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
        note_Item_1 = modelItems.Item(3)
        note_Item_2 = modelItems.Item(4)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
        selBuffer.AddSelection(compSelect_1)
        selBuffer.AddSelection(compSelect_2)
        AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
        AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")

        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 300, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        '     AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
        '  "~ Command `ProCmdEditDelete@PopupMenuTree`;;")

        closeWindow(m2)

        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";") '不超过255字符
        添加bom新内容(ItemString, m8)

        closeWindow(m8)
        m2 = activateModel(read("code"), 2)

        ''’’''msgbox(read("itemstring"))
        ''‘’''msgbox(Len(read("itemstring"))


        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        零件工程图转移(Replace(read("stator_core_path"), "prt", "drw"), path + "\" + read("stator_core_code") + ".drw.1")
        零件工程图转移(Replace(read("stator_core_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_core_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_core_code") + "_MX" + ".xlsx")
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 励磁机定子铁芯(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "exciter_stator", read("exciter_stator_id"))
        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类

        If read1("type") = 1 Then
            If read1("groove_type") = 1 Then
                componentModel_1 = 固定零件(assembly, 1, read("exciter_stator_path"))
                m2 = activateModel(read("exciter_stator_path"), 1)
                setParamValue(m2, "d4", read("thickness"), "浮点型") '装配厚度
                setParamValue(m2, "MASS", read("mass"), "浮点型")
                closeWindow(m2)

                'If read1("Gap_type") = 0 Then
                '    m2 = activateModel(read("exciter_stator_code"), 1)
                '    setParamValue(m2, "d4", read("thickness"), "浮点型") '装配厚度
                '    closeWindow(m2)
                'End If
                'If read1("Gap_type") = 1 Then
                '    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\1\8sb-001-002")
                '    m3 = activateModel("8sb-001-002", 1)
                '    setParamValue(m3, "d6", read1("Gap_width"), "浮点型") '宽度
                '    setParamValue(m3, "d5", read1("Gap_lenght"), "浮点型") '长度
                '    setParamValue(m3, "d4", read("thickness"), "浮点型") '装配厚度
                '    m3.CommonName = "磁钢绝缘"
                '    RegenerateModel(m3)
                '    closeWindow(m3)
                '    Threading.Thread.Sleep(1000)
                '    m1 = activateModel(m1.FullName, 0)
                '    aa = {84}
                '    a = {87}
                '    idc = {70, 2908, 2906} '2906顶 2908侧
                '    idb = {69, 76, 74} '80顶 74侧
                '    ida = {2, 0, 0}
                '    constraints = threeID(asmcomp_2, a, aa, idc, idb, ida, 0)
                '    constraints.Clear()
                'End If


            End If
            If read1("groove_type") = 2 Then
                componentModel_1 = 固定零件(assembly, 1, read("exciter_stator_path"))
                m2 = activateModel(read("exciter_stator_code"), 1)
                setParamValue(m2, "d4", read("thickness"), "浮点型") '装配宽度
                setParamValue(m2, "MASS", read("mass"), "浮点型")
                closeWindow(m2)
            End If

        End If



        If read1("type") = 2 Then


            componentModel_1 = 固定零件(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-001")
            m2 = activateModel(read("exciter_stator_code"), 1)
            setParamValue(m2, "d4", read("thickness"), "浮点型") '装配宽度
            setParamValue(m2, "MASS", read("mass"), "浮点型")
            closeWindow(m2)

        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)

        RegenerateModel(m1)
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {350, 150}, {800, 500}, {0, 0}, {350, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {250, 200}, {750, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {140, 100}, {700, 500}, {0, 0}, {250, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 130}, {650, 500}, {0, 0}, {250, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 100}, {300, 300}, {0, 0}, {300, 150})
        End If
        刨视图("view_2", "XSEC0001", "halfPlane", 7)
        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read1("outside_diameter1") <= 300 Then
        '    view2Ds.Item(0).Scale = 8 / 10
        '    view2Ds.Item(1).Scale = 8 / 10
        'ElseIf read1("outside_diameter1") > 300 And read1("outside_diameter1") <= 340 Then
        '    view2Ds.Item(0).Scale = 8 / 10
        '    view2Ds.Item(1).Scale = 8 / 10
        'ElseIf read1("outside_diameter1") > 340 And read1("outside_diameter1") <= 430 Then
        '    view2Ds.Item(0).Scale = 5 / 10
        '    view2Ds.Item(1).Scale = 5 / 10
        'ElseIf read1("outside_diameter1") > 430 And read1("outside_diameter1") <= 493 Then
        '    view2Ds.Item(0).Scale = 5 / 10
        '    view2Ds.Item(1).Scale = 5 / 10
        'ElseIf read1("outside_diameter1") > 493 And read1("outside_diameter1") <= 620 Then
        '    view2Ds.Item(0).Scale = 3 / 10
        '    view2Ds.Item(1).Scale = 3 / 10
        'ElseIf read1("outside_diameter1") > 620 And read1("outside_diameter1") <= 720 Then
        '    view2Ds.Item(0).Scale = 3 / 10
        '    view2Ds.Item(1).Scale = 3 / 10
        'ElseIf read1("outside_diameter1") > 720 And read1("outside_diameter1") <= 800 Then
        '    view2Ds.Item(0).Scale = 2 / 10
        '    view2Ds.Item(1).Scale = 2 / 10
        'End If
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)




        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node3`;")
        AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row29` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row28` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row26` `show`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")






        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        零件工程图转移(Replace(read("exciter_stator_path"), "prt", "drw"), path + "\" + read("exciter_stator_code") + ".drw.1")

        mxs = 明细表(m2)
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub 带绕组励磁机定子铁芯装配(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "ex_sta_co_asm", read("exciter_stator_core_id"))
        mysql_new3(localhost$, "creo", "exciter_stator", read1("exciter_stator_id"))
        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        Threading.Thread.Sleep(2000)
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        If read3("type") = 1 Then
            If read3("groove_type") = 1 Then
                componentModel_1 = 固定零件(assembly, 0, read("exciter_stator_core_path"))
                '绝缘
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\1\8sb-001-003")
                m2 = activateModel("8sb-001-003", 1)

                setParamValue(m2, "d15", read3("groove_distance"), "浮点型") '槽离中心线距离
                setParamValue(m2, "d12", read3("groove_lenght1"), "浮点型") '槽长1
                setParamValue(m2, "d18", read3("groove_lenght2"), "浮点型") '槽长2
                setParamValue(m2, "d14", read3("groove_lenght3"), "浮点型") '槽长3
                setParamValue(m2, "d16", read3("groove_lenght4"), "浮点型") '槽长4
                setParamValue(m2, "d13", read3("groove_width1"), "浮点型") '槽宽1
                setParamValue(m2, "d17", read3("groove_width2"), "浮点型") '槽宽2
                setParamValue(m2, "d8", read3("inside_diameter") / 2, "浮点型") '内径

                setParamValue(m2, "d5", 180 / read3("groove_number"), "角度", 180 / read3("groove_number")) '
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型") '
                setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
                m2.CommonName = "极身绝缘"
                m2.Rename(read("phase_insulation_name"), True)
                RegenerateModel(m2)
                closeWindow(m2)
                aa = {87}  '插入零件
                a = {84, 84} '

                constraints = 装配约束(asmcomp_2, a, aa, 70, 81, 1, 1, "", "", 3, 5)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                '绕组
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\1\8sb-001-004")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8sb-001-004", 1)
                setParamValue(m2, "d54", read3("groove_distance") + 0.5, "浮点型") '槽离中心线距离
                setParamValue(m2, "d61", read3("groove_lenght1"), "浮点型") '槽长1
                setParamValue(m2, "d60", read3("groove_lenght2") + 0.5, "浮点型") '槽长2
                setParamValue(m2, "d52", read3("groove_lenght3"), "浮点型") '槽长3
                setParamValue(m2, "d59", read3("groove_lenght4") - 1, "浮点型") '槽长4
                setParamValue(m2, "d53", read3("groove_width2") - 0.5, "浮点型") '槽宽1
                setParamValue(m2, "d51", read3("groove_width1"), "浮点型") '槽宽2
                setParamValue(m2, "d55", read3("inside_diameter") / 2 + 0.5, "浮点型") '内径


                setParamValue(m2, "d5", 180 / read3("groove_number"), "角度", 180 / read3("groove_number")) '
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型") '
                setParamValue(m2, "MATERIAL", read("exciter_gaiban2_material"), "字符串")
                m2.CommonName = "套管"
                m2.Rename(read("exciter_gaiban2"), True)
                RegenerateModel(m2)
                closeWindow(m2)
                aa = {modelItems.Item(modelItems.Count - 2).Id}
                a = {87}
                constraints = 装配约束(asmcomp_2, a, aa, 81, 81, 1, 1, "", "", 2, 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\1\8sb-001-005")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8sb-001-005", 1)
                setParamValue(m2, "d30", read3("groove_distance"), "浮点型") '槽离中心线距离
                setParamValue(m2, "d27", read3("groove_lenght1"), "浮点型") '槽长1
                setParamValue(m2, "d23", read3("groove_lenght2"), "浮点型") '槽长2
                setParamValue(m2, "d14", read3("groove_lenght3"), "浮点型") '槽长3
                setParamValue(m2, "d32", read3("groove_lenght4"), "浮点型") '槽长4
                setParamValue(m2, "d29", read3("groove_width2"), "浮点型") '槽宽1
                setParamValue(m2, "d24", read3("groove_width1"), "浮点型") '槽宽2
                setParamValue(m2, "d31", read3("inside_diameter") / 2, "浮点型") '内径
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型") '
                setParamValue(m2, "d25", 180 / read3("groove_number"), "角度", 180 / read3("groove_number")) '角度
                setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
                m2.CommonName = "槽楔"
                m2.Rename(read("slot_wedge_name"), True)
                RegenerateModel(m2)
                closeWindow(m2)


                aa = {modelItems.Item(10).Id}
                a = {87}
                constraints = 装配约束(asmcomp_2, a, aa, 81, 73, 1, 1, "", "", 2, 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("outside_diameter1") - read3("groove_lenght4") + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("inside_diameter") + read3("groove_lenght1") + 2, "浮点型") '端板内径
                setParamValue(m2, "d13", read3("linelength"), "浮点型")
                setParamValue(m2, "d4", 10, "浮点型")
                setParamValue(m2, "MATERIAL", read("coli_material"), "字符串") 'coli_material
                setParamValue(m2, "MASS", read("mass"), "浮点型")
                m2.CommonName = "线圈"
                m2.Rename(read("coli_name"), True) 'coli_name
                RegenerateModel(m2)

                closeWindow(m2)
                a = {modelItems.Item(10).Id}
                aa = {modelItems.Item(11).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
                a = {84, 84}
                aa = {modelItems.Item(11).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("outside_diameter1") - read3("groove_lenght4") + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("inside_diameter") + read3("groove_lenght1") + 2, "浮点型") '端板内径
                setParamValue(m2, "MATERIAL", read("exciter_gaiban1_material"), "字符串")
                setParamValue(m2, "d13", read("linelength"), "浮点型")

                m2.CommonName = "套管"
                m2.Rename(read("exciter_gaiban1"), True)
                RegenerateModel(m2)

                closeWindow(m2)
                a = {modelItems.Item(10).Id}
                aa = {modelItems.Item(12).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 64, 0, 0)
                a = {84, 84}
                aa = {modelItems.Item(12).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()

                '' 出线
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                'm2 = activateModel("coil_part", 1)
                ''setParamValue(m2, "d7", read("出线端长度"), "浮点型") '端板外径
                '' setParamValue(m2, "d31", read("高度"), "浮点型") '端板内径   
                '' m2.CommonName = "线圈"
                '' m2.Rename(read("exciter_gaiban1"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(11).Id}
                'aa = {modelItems.Item(13).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(13).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                'constraints.Clear()
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                '' m2 = activateModel("gaiban", 1)
                '' setParamValue(m2, "d5", read3("groove_arc") + 2, "浮点型") '端板外径
                ''setParamValue(m2, "d6", read3("groove_arc2") + 2, "浮点型") '端板内径
                '' m2.CommonName = "盖板"
                ''  m2.Rename(read("exciter_gaiban2"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(12).Id}
                'aa = {modelItems.Item(14).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(14).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
                'constraints.Clear()

                '’''msgbox(1)
                插入固定零件("极身绝缘", read("Magnetic_steel_insulation"), read("Magnetic_steel_insulation_material"))



                m1 = activateModel("transition", 0)
                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(8)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                Threading.Thread.Sleep(3000)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
                setParamValue(m1, "d93", read3("groove_number"), "角度", 360 / read3("groove_number")) '角度
                setParamValue(m1, "p96", read3("groove_number"), "浮点型") '角度
                参考阵列(modelItems， 9)
                参考阵列(modelItems， 10)

                阵列(modelItems.Item(14), m1, read3("groove_number"))

            End If
            If read3("groove_type") = 2 Then
                componentModel_1 = 固定零件(assembly, 0, read("exciter_stator_core_path"))
                ' 相间绝缘
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\3\8sb-003-002_")
                m2 = activateModel("8sb-003-002_", 1)
                setParamValue(m2, "d33", 180 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d42", read3("groove_distance"), "浮点型")
                setParamValue(m2, "d48", read3("groove_lenght1"), "浮点型")
                ' setParamValue(m1, "d95", read("groove_lenght2"), "浮点型")
                setParamValue(m2, "d49", read3("groove_lenght3"), "浮点型")
                setParamValue(m2, "d50", read3("groove_lenght4") - read3("groove_lenght3") - read3("groove_lenght1"), "浮点型")
                '  setParamValue(m1, "d97", read("groove_width1"), "浮点型")
                setParamValue(m2, "d43", read3("groove_location") / 2, "浮点型")

                setParamValue(m2, "d32", read3("groove_arc") / 2, "浮点型")

                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型")
                setParamValue(m2, "d46", read3("inside_diameter") / 2, "浮点型")
                setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
                m2.CommonName = "极身绝缘"
                m2.Rename(read("phase_insulation_name"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(2000)
                closeWindow(m2)


                aa = {87}  '插入零件
                a = {84, 84} '固定零件项
                constraints = 装配约束(asmcomp_2, a, aa, 70, 69, 1, 1, "", "", 3, 5)
                constraints = 装配约束(asmcomp_2, a, aa, 2696, 258, 1, 1, "", "", 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints.Clear()

                ' 槽楔
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\3\8sb-003-003_")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8Sb-003-003_", 1)
                setParamValue(m2, "d31", 360 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d47", read3("groove_distance") - read3("groove_width1"), "浮点型")
                setParamValue(m2, "d44", read3("groove_lenght1"), "浮点型")
                setParamValue(m2, "d45", read3("groove_lenght2"), "浮点型")
                setParamValue(m2, "d42", read3("groove_lenght3"), "浮点型")
                ' setParamValue(m1, "d98", read("groove_lenght4") - read("groove_lenght3") - read("groove_lenght1"), "浮点型")
                setParamValue(m2, "d46", read3("groove_width1"), "浮点型")

                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型")
                setParamValue(m2, "d43", read3("inside_diameter") / 2, "浮点型")
                setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
                m2.CommonName = "槽楔"
                m2.Rename(read("slot_wedge_name"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(1000)
                closeWindow(m2)

                aa = {modelItems.Item(9).Id}  '插入零件
                a = {modelItems.Item(8).Id} '固定零件项
                constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 256, 228, 1, 1, "", "", 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                ' 绕组
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\3\8sb-003-004_")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8Sb-003-004_", 1)
                setParamValue(m2, "d33", 180 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d45", read3("groove_distance") + 0.5, "浮点型")
                setParamValue(m2, "d50", read3("groove_lenght1"), "浮点型")
                ' setParamValue(m1, "d95", read("groove_lenght2"), "浮点型")
                setParamValue(m2, "d51", read3("groove_lenght3") + 0.5, "浮点型")
                setParamValue(m2, "d53", read3("groove_lenght4") - read3("groove_lenght3") - read3("groove_lenght1") - 1, "浮点型")
                '  setParamValue(m1, "d97", read("groove_width1"), "浮点型")
                setParamValue(m2, "d49", read3("groove_location") / 2 - 0.5, "浮点型")
                setParamValue(m2, "d38", read3("groove_arc") / 2 - 0.5, "浮点型")
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型")
                setParamValue(m2, "d47", read3("inside_diameter") / 2, "浮点型")
                setParamValue(m2, "MATERIAL", read("exciter_gaiban2_material"), "字符串")
                'setParamValue(m2, "MASS", read("mass"), "浮点型")
                m2.CommonName = "套管"
                m2.Rename(read("exciter_gaiban2"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(1000)
                closeWindow(m2)

                aa = {modelItems.Item(10).Id}  '插入零件
                a = {modelItems.Item(8).Id} '固定零件项
                constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 278, 229, 1, 1, "", "", 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                ' 盖板
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("groove_location") + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("inside_diameter") + read3("groove_lenght1") + 2, "浮点型") '端板内径
                setParamValue(m2, "d13", read("linelength"), "浮点型")
                setParamValue(m2, "d4", 10, "浮点型")
                setParamValue(m2, "MATERIAL", read("coli_material"), "字符串") 'coli_material
                setParamValue(m2, "MASS", read("mass"), "浮点型")
                m2.CommonName = "线圈"
                m2.Rename(read("coli_name"), True) 'coli_name
                RegenerateModel(m2)
                closeWindow(m2)
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(11).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
                a = {84, 84}
                aa = {modelItems.Item(11).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("groove_location") + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("inside_diameter") + read3("groove_lenght1") + 2, "浮点型") '端板内径
                setParamValue(m2, "MATERIAL", read("exciter_gaiban1_material"), "字符串")
                setParamValue(m2, "d13", read("linelength"), "浮点型")

                m2.CommonName = "套管"
                m2.Rename(read("exciter_gaiban1"), True)
                RegenerateModel(m2)
                closeWindow(m2)
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(12).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 0, 0)
                a = {84, 84}
                aa = {modelItems.Item(12).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()

                ' 出线
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                'm2 = activateModel("coil_part", 1)
                ''setParamValue(m2, "d7", read("出线端长度"), "浮点型") '端板外径
                '' setParamValue(m2, "d31", read("高度"), "浮点型") '端板内径   
                '' m2.CommonName = "线圈"
                '' m2.Rename(read("exciter_gaiban1"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(11).Id}
                'aa = {modelItems.Item(13).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(13).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                'constraints.Clear()
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                '' m2 = activateModel("gaiban", 1)
                '' setParamValue(m2, "d5", read3("groove_arc") + 2, "浮点型") '端板外径
                ''setParamValue(m2, "d6", read3("groove_arc2") + 2, "浮点型") '端板内径
                '' m2.CommonName = "盖板"
                ''  m2.Rename(read("exciter_gaiban2"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(12).Id}
                'aa = {modelItems.Item(14).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(14).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
                'constraints.Clear()
                插入固定零件("极身绝缘", read("Magnetic_steel_insulation"), read("Magnetic_steel_insulation_material"))
                m1 = activateModel("transition", 0)
                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(8)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                Threading.Thread.Sleep(3000)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                                    "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                                    "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                    "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                    "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
                'setParamValue(m1, "d87", read3("groove_number"), "角度", 360 / read3("groove_number")) '角度
                'setParamValue(m1, "p90", read3("groove_number"), "浮点型") '角度
                setParamValue(m1, "d93", read3("groove_number"), "角度", 360 / read3("groove_number")) '角度
                setParamValue(m1, "p96", read3("groove_number"), "浮点型") '角度


                参考阵列(modelItems， 9)
                参考阵列(modelItems， 10)
                阵列(modelItems.Item(14), m1, read3("groove_number"))
            End If

            If read3("groove_type") = 3 Then
                componentModel_1 = 固定零件(assembly, 0, read("exciter_stator_core_path"))
                ' 相间绝缘
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-003_")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8sb-002-003_", 1)
                setParamValue(m2, "d35", read3("groove_arc") / 2, "浮点型")
                setParamValue(m2, "d34", read3("groove_arc2") / 2, "浮点型")
                setParamValue(m2, "d36", 180 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d32", read3("groove_distance"), "浮点型")
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型") '长度
                setParamValue(m2, "MATERIAL", read("phase_insulation_material"), "字符串")
                m2.CommonName = "相间绝缘"
                m2.Rename(read("phase_insulation_name"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(1000)
                closeWindow(m2)

                aa = {modelItems.Item(8).Id}  '插入零件
                a = {84, 84} '固定零件项

                constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 3, 5)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                ' 槽楔
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-002_")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8sb-002-002_", 1)
                setParamValue(m2, "d32", read3("groove_arc2") / 2, "浮点型")
                setParamValue(m2, "d27", 180 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d31", read3("groove_distance"), "浮点型")
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型")
                setParamValue(m2, "MATERIAL", read("exciter_gaiban2_material"), "字符串")
                m2.CommonName = "槽绝缘"
                m2.Rename(read("exciter_gaiban2"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(1000)
                closeWindow(m2)
                aa = {modelItems.Item(9).Id}  '插入零件
                a = {modelItems.Item(8).Id} '固定零件项

                constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2, 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                '绕组
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-004_")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("8sb-002-004_", 1)
                setParamValue(m2, "d24", read3("groove_arc") / 2 - 0.5, "浮点型")
                setParamValue(m2, "d39", read3("groove_arc2") / 2 + 0.5, "浮点型")
                setParamValue(m2, "d36", 180 / read3("groove_number"), "角度", 180 / read3("groove_number"))
                setParamValue(m2, "d38", read3("groove_distance") + 0.5, "浮点型")
                setParamValue(m2, "d4", read1("thickness") + 10, "浮点型")
                setParamValue(m2, "MATERIAL", read("slot_wedge_material"), "字符串")
                'setParamValue(m2, "MASS", read("mass"), "浮点型")
                m2.CommonName = "槽楔"
                m2.Rename(read("slot_wedge_name"), True)
                RegenerateModel(m2)
                Threading.Thread.Sleep(1000)
                closeWindow(m2)

                aa = {modelItems.Item(10).Id}  '插入零件
                a = {modelItems.Item(9).Id} '固定零件项
                constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2, 0)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                constraints.Clear()

                '盖板
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("inside_diameter") + read3("groove_arc") / 2 + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("inside_diameter") + read3("groove_arc2") / 2 - 2, "浮点型") '端板内径
                setParamValue(m2, "d13", read3("linelength"), "浮点型")
                setParamValue(m2, "d4", 10, "浮点型")
                setParamValue(m2, "MATERIAL", read("coli_material"), "字符串") 'coli_material
                setParamValue(m2, "MASS", read("mass"), "浮点型")
                m2.CommonName = "线圈"
                m2.Rename(read("coli_name"), True) 'coli_name
                RegenerateModel(m2)
                closeWindow(m2)
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(11).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0, 0)
                a = {84, 84}
                aa = {modelItems.Item(11).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\gaiban\gaiban")
                modelItems = listModelItem(m1, "FEATURE")
                m2 = activateModel("gaiban", 1)
                setParamValue(m2, "d5", read3("groove_arc") + 2, "浮点型") '端板外径
                setParamValue(m2, "d6", read3("groove_arc2") + 2, "浮点型") '端板内径
                setParamValue(m2, "MATERIAL", read("exciter_gaiban1_material"), "字符串")
                setParamValue(m2, "d13", read3("linelength"), "浮点型")

                m2.CommonName = "套管"
                m2.Rename(read("exciter_gaiban1"), True)
                RegenerateModel(m2)
                closeWindow(m2)
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(12).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 69, 64, 2, 0)
                a = {84, 84}
                aa = {modelItems.Item(12).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()



                ' 出线
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                'm2 = activateModel("coil_part", 1)
                ''setParamValue(m2, "d7", read("出线端长度"), "浮点型") '端板外径
                '' setParamValue(m2, "d31", read("高度"), "浮点型") '端板内径   
                '' m2.CommonName = "线圈"
                '' m2.Rename(read("exciter_gaiban1"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(11).Id}
                'aa = {modelItems.Item(13).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 64, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(13).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 2)
                'constraints.Clear()
                'asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_ro_co_win_asm\wing\coil_part")
                'modelItems = listModelItem(m1, "FEATURE")
                '' m2 = activateModel("gaiban", 1)
                '' setParamValue(m2, "d5", read3("groove_arc") + 2, "浮点型") '端板外径
                ''setParamValue(m2, "d6", read3("groove_arc2") + 2, "浮点型") '端板内径
                '' m2.CommonName = "盖板"
                ''  m2.Rename(read("exciter_gaiban2"), True)
                'RegenerateModel(m2)
                'closeWindow(m2)
                'a = {modelItems.Item(12).Id}
                'aa = {modelItems.Item(14).Id}
                'constraints = 面面约束(asmcomp_2, a, aa, 69, 968, 0, 0)
                'a = {84, 84}
                'aa = {modelItems.Item(14).Id}
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
                'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "RIGHT", 1)
                constraints.Clear()
                If read3("Gap_type") = 1 Then
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-006")
                    modelItems = listModelItem(m1, "FEATURE")
                    m2 = activateModel("8sb-002-006", 1)
                    setParamValue(m2, "d5", read3("Gap_lenght"), "浮点型")
                    setParamValue(m2, "d6", read3("Gap_width"), "浮点型")
                    setParamValue(m2, "d4", read1("thickness"), "浮点型")
                    setParamValue(m2, "MATERIAL", read("Magnetic_steel_insulation_material"), "字符串")
                    m2.CommonName = "磁钢绝缘"
                    m2.Rename(read("Magnetic_steel_insulation"), True)
                    RegenerateModel(m2)
                    closeWindow(m2)


                    aa = {modelItems.Item(13).Id}  '插入零件
                    a = {84, 84} '固定零件项
                    constraints = 装配约束(asmcomp_2, a, aa, 823, 170, 1, 1, "", "", 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 825, 172, 1, 1, "", "", 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2)
                    constraints.Clear()
                    asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\ex_sta_co_asm\2\8sb-002-005_")
                    modelItems = listModelItem(m1, "FEATURE")
                    m2 = activateModel("8sb-002-005_", 1)
                    setParamValue(m2, "d5", read3("Gap_lenght") - 1, "浮点型")
                    setParamValue(m2, "d6", read3("Gap_width") - 1, "浮点型")
                    setParamValue(m2, "d4", read1("thickness"), "浮点型")
                    setParamValue(m2, "MATERIAL", read("Magnetic_steel_insulation_material"), "字符串")
                    m2.CommonName = "磁钢绝缘"
                    m2.Rename(read("Magnetic_steel_insulation"), True)
                    RegenerateModel(m2)
                    closeWindow(m2)


                    aa = {modelItems.Item(14).Id}  '插入零件
                    a = {modelItems.Item(13).Id} '固定零件项
                    constraints = 装配约束(asmcomp_2, a, aa, 184, 74, 1, 1, "", "", 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 182, 76, 1, 1, "", "", 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 69, 69, 1, 1, "", "", 2)
                    constraints.Clear()


                End If

                modelItems = listModelItem(m1, "FEATURE")
                compItem_1 = modelItems.Item(8)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
                selBuffer.AddSelection(compSelect_1)
                Threading.Thread.Sleep(3000)
                AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ;" +
                                "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` `0`;" +
                                "~ Trigger `main_dlg_cur` `maindashInst0.ui_pat_dim_2_num` ``;" +
                                "~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`;" +
                                "~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_axis`;" +
                                "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node2`;" +
                                "~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
                selBuffer.Clear()
                '''msgbox(1)
                setParamValue(m1, "d87", read3("groove_number"), "角度", 360 / read3("groove_number")) '角度
                setParamValue(m1, "p90", read3("groove_number"), "浮点型") '角度
                参考阵列(modelItems， 10)


            End If

        End If

        'closeWindow(m1)

        'm1 = activateModel("transition", 0)

        '插入固定零件("槽绝缘", read("Magnetic_steel_insulation"), read("Magnetic_steel_insulation_material"))
        'modelItems = listModelItem_有弹窗(m1, "FEATURE")
        'MsgBox(modelItems.Count)
        '阵列(modelItems.Item(modelItems.Count - 2), m1, read3("groove_number"))




        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        '''msgbox(1)
        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {350, 150}, {800, 500}, {0, 0}, {350, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {250, 200}, {750, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {140, 200}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 200}, {650, 500}, {0, 0}, {140, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {85, 100}, {300, 180}, {0, 0}, {140, 180})
        End If

        刨视图("view_2", "XSEC0001", "fullPlane", 14)
        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        'If read3("outside_diameter1") <= 300 Then
        '    view2Ds.Item(0).Scale = 8 / 10
        '    view2Ds.Item(1).Scale = 8 / 10
        'ElseIf read3("outside_diameter1") > 300 And read3("outside_diameter1") <= 340 Then
        '    view2Ds.Item(0).Scale = 8 / 10
        '    view2Ds.Item(1).Scale = 8 / 10
        'ElseIf read3("outside_diameter1") > 340 And read3("outside_diameter1") <= 430 Then
        '    view2Ds.Item(0).Scale = 6 / 10
        '    view2Ds.Item(1).Scale = 6 / 10
        'ElseIf read3("outside_diameter1") > 430 And read3("outside_diameter1") <= 493 Then
        '    view2Ds.Item(0).Scale = 6 / 10
        '    view2Ds.Item(1).Scale = 6 / 10
        'ElseIf read3("outside_diameter1") > 493 And read3("outside_diameter1") <= 620 Then
        '    view2Ds.Item(0).Scale = 4 / 10
        '    view2Ds.Item(1).Scale = 4 / 10
        'ElseIf read3("outside_diameter1") > 620 And read3("outside_diameter1") <= 720 Then
        '    view2Ds.Item(0).Scale = 4 / 10
        '    view2Ds.Item(1).Scale = 4 / 10
        'ElseIf read3("outside_diameter1") > 720 And read3("outside_diameter1") <= 800 Then
        '    view2Ds.Item(0).Scale = 2 / 10
        '    view2Ds.Item(1).Scale = 2 / 10
        'End If

        'modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
        'note_Item_1 = modelItems.Item(3)
        'note_Item_2 = modelItems.Item(5)
        'compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
        'compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
        'selBuffer.AddSelection(compSelect_1)
        'selBuffer.AddSelection(compSelect_2)
        'AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
        'AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
        '                            "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
        '            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2, read("T_MOTOR"))



        AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node4`;")
        AC.Session.RunMacro("8 ~ Command `ProCmdDwgShowAllAnnots` ;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;")
        AC.Session.RunMacro("8 ~ Select `show_model_annotations` `tbl_dim` 2 `row6` `show`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_ok`;")
        AC.Session.RunMacro("8 ~ Activate `show_model_annotations` `psh_cancel`;")

        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 300, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)
        closeWindow(m2)
        m8 = activateModel(read("code"), 0)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";") '不超过255字符
        添加bom新内容(ItemString, m8)
        closeWindow(m8)
        m2 = activateModel(read("code"), 2)
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")
        ''‘’''msgbox(555)
        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        零件工程图转移(Replace(read("exciter_stator_core_path"), "prt", "drw"), path + "\" + read("exciter_stator_core_code") + ".drw.1")
        零件工程图转移(Replace(read("exciter_stator_core_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("exciter_stator_core_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("exciter_stator_core_code") + "_MX" + ".xlsx")
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub stator_assembly1(localhost$, tabledase$, ID#, path$, imageName$)
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "main_frame", read("main_frame_id"))

        mysql_new2(localhost$, "creo",
                        "sta_co_win_asm",
                        read("stator_core_winding_id"))
        mysql_new3(localhost$, "creo", "stator_core_assembly", read2("stator_core_id"))
        mysql_new4(localhost$, "creo", "stator_lamination", read3("stator_lamination_id"))

        If read("exciter_stator_core_winding_id") <> 0 Then
            mysql_new5(localhost$, "creo",
                       "ex_sta_co_win_asm",
                       read("exciter_stator_core_winding_id"))
            mysql_new6(localhost$, "creo",
                       "ex_sta_co_asm",
                       read5("exciter_stator_core_id"))
            mysql_new7(localhost$, "creo", "exciter_stator", read6("exciter_stator_id"))
        End If

        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        If read1("house_number") = 180 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                    'componentModel_1 = 固定零件(assembly, 0, "E:\works\Creo\parts\main_frame\180\2\5sb-034-180")
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                    'componentModel_1 = 固定零件(assembly, 0, "E:\works\Creo\parts\main_frame\180\1\5sb-034-180")
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")

                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        'aa = {90, 84, 84}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 200 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 250 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))

                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)

                a = {84, 90}
                aa = {87, 84, 84}

                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 280 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                'constraints = 面面约束(asmcomp_2, a, aa, 1107297295, 64, 2)
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)

                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 355 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 1819}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 1819}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 1819}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 1818}
                        aa = {88, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {88, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 400 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 面面约束(asmcomp_2, a, aa, 1107297295, 64, 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                a = {84, 90}
                aa = {87, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {87, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {90, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {90, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                    End If
                End If
            End If
        End If
        ExportJpg(path, imageName)
        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)

        drawing = 工程图(m1, "asm_a3_sb", 0.2, "Z", 1, 0, 1, {"1111", "333", "222"}, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        If read1("bracket_type") = 1 Then
            刨视图("view_1", "XSEC0001", "halfPlane", 9)
        Else
            刨视图("view_1", "XSEC0001", "halfPlane", 8)
        End If

        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)
        If read1("house_number") = 180 Then
            view2Ds.Item(0).Scale = 1 / 3
            view2Ds.Item(1).Scale = 1 / 3
        ElseIf read1("house_number") = 200 Then
            view2Ds.Item(0).Scale = 1 / 3
            view2Ds.Item(1).Scale = 1 / 3
        ElseIf read1("house_number") = 250 Then
            view2Ds.Item(0).Scale = 1 / 4
            view2Ds.Item(1).Scale = 1 / 4
        ElseIf read1("house_number") = 280 Then
            view2Ds.Item(0).Scale = 1 / 4
            view2Ds.Item(1).Scale = 1 / 4
        ElseIf read1("house_number") = 355 Then
            view2Ds.Item(0).Scale = 1 / 4
            view2Ds.Item(1).Scale = 1 / 4
        ElseIf read1("house_number") = 400 Then
            view2Ds.Item(0).Scale = 1 / 5
            view2Ds.Item(1).Scale = 1 / 5
        ElseIf read1("house_number") = 500 Then
            view2Ds.Item(0).Scale = 1 / 8
            view2Ds.Item(1).Scale = 1 / 8
        End If
        AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `page_Table_control_btn` 1;" +
                            "~ Command `ProCmdDwgTblBlnShow`;")
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        endApp()

    End Sub
    Public Function stator_assembly(localhost$, tabledase$, ID#, path$, imageName$) As ArrayList

        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "main_frame", read("main_frame_id"))
        mysql_new2(localhost$, "creo",
                        "sta_co_win_asm",
                        read("stator_core_winding_id"))
        mysql_new3(localhost$, "creo", "stator_core_assembly", read2("stator_core_id"))
        mysql_new4(localhost$, "creo", "stator_lamination", read3("stator_lamination_id"))
        If read("exciter_stator_core_winding_id") <> 0 Then
            mysql_new5(localhost$, "creo",
                       "ex_sta_co_win_asm",
                       read("exciter_stator_core_winding_id"))
            mysql_new6(localhost$, "creo",
                       "ex_sta_co_asm",
                       read5("exciter_stator_core_id"))
            mysql_new7(localhost$, "creo", "exciter_stator", read6("exciter_stator_id"))
        End If
        'modelItems.Item(modelItems.Count - 1).Id
        ' modelItems = listModelItem(m1, "FEATURE")

        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        If read1("house_number") = 180 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                    'componentModel_1 = 固定零件(assembly, 0, "E:\works\Creo\parts\main_frame\180\2\5sb-034-180")
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                    'componentModel_1 = 固定零件(assembly, 0, "E:\works\Creo\parts\main_frame\180\1\5sb-034-180")
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")

                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 199}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 200 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 2586}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_15", "A_1")
                        a = {84, 3970}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 84, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 250 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                If read3("stator_pressing_ring_path") <> "0" Then
                    aa = {modelItems.Item(modelItems.Count - 1).Id, 84, 87}
                Else
                    aa = {modelItems.Item(modelItems.Count - 1).Id, 84, 84}
                End If

                'aa = {modelItems.Item(modelItems.Count - 1).Id, 84, 84}
                'aa = {modelItems.Item(modelItems.Count - 1).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                a = {84, 90}
                aa = {modelItems.Item(modelItems.Count - 1).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 5639}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_63", "A_1")
                        a = {84, 5900}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 280 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM15", "", 0)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3216}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
                        a = {84, 5812}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 355 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 1819}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 1819}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3709}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 1819}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM8", "", 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 1818}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3907}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If
        ElseIf read1("house_number") = 400 Then
            If read4("slot_type") = 1 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 面面约束(asmcomp_2, a, aa, 1107297295, 64, 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If

            ElseIf read4("slot_type") = 2 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 面面约束(asmcomp_2, a, aa, 1107297295, 64, 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            ElseIf read4("slot_type") = 3 Then
                If read1("bracket_type") = 2 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                ElseIf read1("bracket_type") = 1 Then
                    componentModel_1 = 固定零件(assembly, 0, read("main_frame_path"))
                End If
                asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 90}
                aa = {modelItems.Item(7).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                aa = {modelItems.Item(7).Id, 84, 87}
                constraints = 面面约束(asmcomp_2, a, aa, 1107297295, 64, 2)
                constraints.Clear()
                If read1("bracket_type") = 1 Then
                    If read7("type") = 1 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 70, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    ElseIf read7("type") = 2 Then
                        asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                        modelItems = listModelItem(m1, "FEATURE")
                        a = {84, 90}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(8).Id, 84, 84}
                        constraints = 面面约束(asmcomp_2, a, aa, 579, 69, 0)
                        constraints.Clear()
                        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\screw\M" + read("standard_part1") + "\gb71_m" + read("standard_part1"))
                        modelItems = listModelItem(m1, "FEATURE")
                        m2 = activate("gb71_m" + read("standard_part1"), 1)
                        addParam(m2, "SHEET_SIZE", "无图", "字符串")
                        setParamValue(m2, "d2", read("screw1"), "浮点型")
                        m2.Rename("gb71_m" + read("standard_part1") + "x" + read("screw1"), True)
                        m2.CommonName = "螺钉" + read("standard_part1") + "x" + read("screw1")
                        RegenerateModel(m2)
                        Threading.Thread.Sleep(500)
                        closeWindow(m2)
                        a = {84}
                        aa = {modelItems.Item(9).Id}
                        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
                        a = {84, 3710}
                        aa = {modelItems.Item(9).Id}
                        constraints = 面面约束(asmcomp_2, a, aa, 581, 225, 2)
                        constraints.Clear()
                    End If
                End If
            End If

        ElseIf read1("house_number") = 600 Then
            componentModel_1 = 固定零件(assembly, 1, read("main_frame_path"))
            asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {84}
            aa = {modelItems.Item(7).Id, 84, 84}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 面面约束(asmcomp_2, a, aa, 39399, 67, 0)
            constraints.Clear()
            If read7("type") = 1 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(8).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints = 面面约束(asmcomp_2, a, aa, 38495, 70, 0)
                constraints.Clear()
            ElseIf read7("type") = 2 Then
                asmcomp_2 = 插入零件_1(assembly, 0, read("exciter_stator_core_winding_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {84}
                aa = {modelItems.Item(8).Id, 84, 84}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints = 面面约束(asmcomp_2, a, aa, 38495, 69, 0)
                constraints.Clear()

            End If
        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)

        m1.Rename(read("CODE"), True)
        RegenerateModel(m1)
        Threading.Thread.Sleep(400)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            If read1("house_number") = 600 Then
                drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            Else
                drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            End If
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            If read1("house_number") = 600 Then
                drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            Else
                drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            End If
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            If read1("house_number") = 600 Then
                drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            Else
                drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            End If
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            If read1("house_number") = 600 Then
                drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            Else
                drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            End If
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            If read1("house_number") = 600 Then
                drawing = 工程图(m1, sheet_size, 0.2, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            Else
                drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
            End If
        End If

        If read1("bracket_type") = 1 Then
            If read1("house_number") = 600 Then
                刨视图("view_2", "XSEC0001", "halfPlane", 9)
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 10)
            End If
        Else
            If read1("house_number") = 600 Then
                刨视图("view_2", "XSEC0001", "halfPlane", 8)
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 8)
            End If
        End If
        ' boms = bom表()
        m2 = activateModel(read("code"), 2)
        Threading.Thread.Sleep(10000)
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)


        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))

        'If read1("house_number") = 180 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read1("house_number") = 200 Then
        '    view2Ds.Item(0).Scale = 1 / 3
        '    view2Ds.Item(1).Scale = 1 / 3
        'ElseIf read1("house_number") = 250 Then
        '    view2Ds.Item(0).Scale = 1 / 4
        '    view2Ds.Item(1).Scale = 1 / 4
        'ElseIf read1("house_number") = 280 Then
        '    view2Ds.Item(0).Scale = 1 / 4.5
        '    view2Ds.Item(1).Scale = 1 / 4.5
        'ElseIf read1("house_number") = 355 Then
        '    view2Ds.Item(0).Scale = 1 / 5.5
        '    view2Ds.Item(1).Scale = 1 / 5.5
        'ElseIf read1("house_number") = 400 Then
        '    view2Ds.Item(0).Scale = 1 / 5
        '    view2Ds.Item(1).Scale = 1 / 5
        'ElseIf read1("house_number") = 500 Then
        '    view2Ds.Item(0).Scale = 1 / 8
        '    view2Ds.Item(1).Scale = 1 / 8
        'End If

        加入球标()
        modelItems = listModelItem(m2, "DTL_NOTE")
        Threading.Thread.Sleep(1000)
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2， read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)

        零件工程图转移(Replace(read("main_frame_path"), "asm", "drw"), path + "\" + read("main_frame_code") + ".drw.1")

        零件工程图转移(Replace(read("stator_core_winding_path"), "asm.", "drw."), path + "\" + read("stator_core_winding_code") + ".drw.1")
        零件工程图转移(Replace(read("stator_core_winding_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_core_winding_code") + "_MX" + ".xlsx")
        If read("exciter_stator_core_winding_path") <> "0" Then
            零件工程图转移(Replace(read("exciter_stator_core_winding_path"), "asm.", "drw."), path + "\" + read("exciter_stator_core_winding_code") + ".drw.1")
            零件工程图转移(Replace(read("exciter_stator_core_winding_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("exciter_stator_core_winding_code") + "_MX" + ".xlsx")
        End If
        mxs = 明细表(m2)

        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("exciter_stator_core_winding_path") <> "0" Then
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_core_winding_code") + "_MX" + ".xlsx", path + "\" + read("exciter_stator_core_winding_code") + "_MX" + ".xlsx")
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_core_winding_code") + "_MX" + ".xlsx")
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Function
    Public Function 是否外购(sources_mx) As Boolean
        是否外购 = False
        For i = 0 To sources_mx.Count - 1
            If sources_mx(i) = "外购件" Then
                是否外购 = True
            End If
        Next
        Return 是否外购
    End Function
    Public Function 是否标准(sources_mx) As Boolean
        是否标准 = False
        For i = 0 To sources_mx.Count - 1
            If sources_mx(i) = "标准件" Then
                是否标准 = True
            End If
        Next
        Return 是否标准
    End Function
    Public Function 外购表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-wg", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        Threading.Thread.Sleep(500)
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ' '‘’''msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_wg.Add(GetTableInfo)
                    ''‘’''msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_wg.Add(GetTableInfo)
                    ''‘’''msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    materials_wg.Add(GetTableInfo)
                    ''‘’''msgbox(materials(i - 1))
                End If
                If n = 5 Then
                    numbers_wg.Add(GetTableInfo)
                    ''‘’''msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_wg.Add(GetTableInfo)
                    ''‘’''msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_wg.Add(GetTableInfo)
                    ''‘’''msgbox(materials(i - 1))
                End If
            Next
        Next
        wgs.Add(codes_wg)
        wgs.Add(conNames_wg)
        wgs.Add(materials_wg)
        wgs.Add(numbers_wg)
        wgs.Add(remarks_wg)
        endApp()
        Return wgs

    End Function
    Public Function 标准表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-bz", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        Threading.Thread.Sleep(500)
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’''msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_bz.Add(GetTableInfo)
                    ''‘’''msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_bz.Add(GetTableInfo)
                    ''‘’''msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    materials_bz.Add(GetTableInfo)
                    ''‘’''msgbox(materials(i - 1))
                End If
                If n = 5 Then
                    numbers_bz.Add(GetTableInfo)
                    ''‘’''msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_bz.Add(GetTableInfo)
                    ''‘’''msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_bz.Add(GetTableInfo)
                    ''‘’''msgbox(materials(i - 1))
                End If
            Next
        Next
        bzs.Add(codes_bz)
        bzs.Add(conNames_bz)
        bzs.Add(materials_bz)
        bzs.Add(numbers_bz)
        bzs.Add(remarks_bz)
        endApp()
        Return bzs

    End Function
    Public Function 自制表(address$, asmName$, frmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        retrieveModel("frm", address + "/" + frmName)
        retrieveModel("drw", address + "/" + asmName)
        m1 = activateModel(asmName, 2)
        drawing = CType(drw, IpfcDrawing)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’''msgbox(TablesInfo)
        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_zz.Add(GetTableInfo)
                End If
            Next
        Next
        m3 = activateModel(asmName, 0)
        models = session.ListModels()
        For z = 0 To codes_zz.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                m2 = activateModel(m2.FullName, m2.Type)
                closeWindow(m2)
                If GetParamStringValue(m2, "SOURCE") = "自制件" Then
                    If m2.FullName = codes_zz(z) Then
                        If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                            m1 = activateModel(codes_zz(z), 0)
                            code_news_zz.Add(GetParamStringValue(m1, "PART_NUMBER"))
                            conNames_zz.Add(GetParamStringValue(m1, "PART_NAME"))
                            sources_zz.Add(GetParamStringValue(m1, "SOURCE"))
                            materials_zz.Add(GetParamStringValue(m1, "MATERIAL"))
                            sin_weights_zz.Add(GetParamDoubleValue(m1, "MASS"))
                            sheet_sizes_zz.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                            importances_zz.Add(GetParamStringValue(m1, "IMPORTANCE"))
                            remarks_zz.Add(GetParamStringValue(m1, "REMARK"))
                            own_asm_zz.Add(m3.FullName)
                            numbers_zz.Add(1)
                            closeWindow(m1)
                        ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                            m1 = activateModel(codes_zz(z), 1)
                            code_news_zz.Add(GetParamStringValue(m1, "PART_NUMBER"))
                            conNames_zz.Add(GetParamStringValue(m1, "PART_NAME"))
                            sources_zz.Add(GetParamStringValue(m1, "SOURCE"))
                            materials_zz.Add(GetParamStringValue(m1, "MATERIAL"))
                            sin_weights_zz.Add(GetParamDoubleValue(m1, "MASS"))
                            sheet_sizes_zz.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                            importances_zz.Add(GetParamStringValue(m1, "IMPORTANCE"))
                            remarks_zz.Add(GetParamStringValue(m1, "REMARK"))
                            own_asm_zz.Add(m3.FullName)
                            numbers_zz.Add(1)
                            closeWindow(m1)
                        End If
                    End If
                End If
            Next
        Next
        zzs.Add(code_news_zz)
        zzs.Add(conNames_zz)
        zzs.Add(own_asm_zz)
        zzs.Add(numbers_zz)
        zzs.Add(numbers_zz)
        zzs.Add(sources_zz)
        zzs.Add(materials_zz)
        zzs.Add(sin_weights_zz)
        zzs.Add(sheet_sizes_zz)
        zzs.Add(importances_zz)
        zzs.Add(remarks_zz)
        endApp()
        Return zzs

    End Function
    Public Function 明细表_new(model As IpfcModel) As ArrayList
        codes_mx.Clear()
        sheet_sizes_mx.Clear()
        conNames_mx.Clear()
        own_asm_mx.Clear()
        numbers_mx.Clear()
        numbers_mx.Clear()
        materials_mx.Clear()
        sin_weights_mx.Clear()
        con_weights_mx.Clear()
        remarks_mx.Clear()
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_mx.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames_mx.Add(GetTableInfo)
                End If
                If n = 4 Then
                    numbers_mx.Add(GetTableInfo)
                End If
                If n = 5 Then
                    materials_mx.Add(GetTableInfo)
                End If
                If n = 6 Then
                    sin_weights_mx.Add(GetTableInfo)
                End If
                If n = 7 Then
                    con_weights_mx.Add(GetTableInfo)
                End If
                If n = 8 Then
                    remarks_mx.Add(GetTableInfo)
                End If
            Next
        Next
        closeWindow(m1)
        Threading.Thread.Sleep(5000)
        m3 = activateModel(model.FullName, 0)
        models = session.ListModels()
        For z = 0 To codes_mx.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                If m2.FullName = codes_mx(z) Then
                    If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                        m1 = activateModel(codes_mx(z), 0)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(m3.FullName)
                        closeWindow(m1)
                    ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                        m1 = activateModel(codes_mx(z), 1)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(m3.FullName)
                        closeWindow(m1)
                    End If
                End If
            Next
        Next
        mxs.Add(codes_mx)
        mxs.Add(sheet_sizes_mx)
        mxs.Add(conNames_mx)
        mxs.Add(own_asm_mx)
        mxs.Add(numbers_mx)
        mxs.Add(numbers_mx)
        mxs.Add(materials_mx)
        mxs.Add(sin_weights_mx)
        mxs.Add(con_weights_mx)
        mxs.Add(remarks_mx)

        Return mxs

    End Function
    Public Function 明细表(model As IpfcModel) As ArrayList
        codes_mx.Clear()
        sheet_sizes_mx.Clear()
        conNames_mx.Clear()
        own_asm_mx.Clear()
        numbers_mx.Clear()
        numbers_mx.Clear()
        materials_mx.Clear()
        sin_weights_mx.Clear()
        con_weights_mx.Clear()
        remarks_mx.Clear()
        mxs.Clear()
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(3)
        TablesInfo += "第" + (3 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)


        For n = 2 To table.GetColumnCount
            For i = 3 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_mx.Add(GetTableInfo)
                End If
                If n = 3 Then
                    conNames_mx.Add(GetTableInfo)
                End If
                If n = 4 Then
                    numbers_mx.Add(GetTableInfo)
                End If
                If n = 5 Then
                    materials_mx.Add(GetTableInfo)
                End If
                If n = 6 Then
                    sin_weights_mx.Add(GetTableInfo)
                End If
                If n = 7 Then
                    con_weights_mx.Add(GetTableInfo)
                End If
                If n = 8 Then
                    remarks_mx.Add(GetTableInfo)
                End If
            Next
        Next
        closeWindow(model)
        Threading.Thread.Sleep(5000)

        m3 = activateModel(model.FullName, 0)
        models = session.ListModels()



        For i = 0 To codes_mx.Count - 1
            codes_mx_new.Add(Replace(codes_mx(i), ".", "_"))
            codes_mx_new2.Add(Replace(codes_mx(i), "_", "."))
        Next
        For z = 0 To codes_mx.Count - 1
            For j = 0 To models.Count - 1
                m2 = models.Item(j)
                If m2.FullName = codes_mx_new(z) Then


                    If m2.Type = EpfcModelType.EpfcMDL_ASSEMBLY Then
                        m1 = activateModel(codes_mx_new(z), 0)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(Replace（m3.FullName, "_", "."))

                        closeWindow(m1)
                    ElseIf m2.Type = EpfcModelType.EpfcMDL_PART Then
                        m1 = activateModel(codes_mx_new(z), 1)
                        sources_mx.Add(GetParamStringValue(m1, "SOURCE"))
                        sheet_sizes_mx.Add(GetParamStringValue(m1, "SHEET_SIZE"))
                        importances_mx.Add(GetParamStringValue(m1, "IMPORTANCE"))
                        own_asm_mx.Add(Replace（m3.FullName, "_", "."))

                        closeWindow(m1)
                    End If
                End If
            Next
        Next
        mxs.Add(codes_mx_new2)
        mxs.Add(sheet_sizes_mx)
        mxs.Add(conNames_mx)
        mxs.Add(own_asm_mx)
        mxs.Add(numbers_mx)
        mxs.Add(numbers_mx)
        mxs.Add(materials_mx)
        mxs.Add(sin_weights_mx)
        mxs.Add(con_weights_mx)
        mxs.Add(remarks_mx)
        endApp()
        Return mxs

    End Function
    Public Function 通借用表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-tjy", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        ''‘’''msgbox(666)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’''msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    codes_tjy.Add(GetTableInfo)
                    ''‘’''msgbox(codes(i - 1))
                End If
                If n = 3 Then
                    conNames_tjy.Add(GetTableInfo)
                    ' '‘’''msgbox(conNames(i - 1))
                End If
                If n = 4 Then
                    numbers_tjy.Add(GetTableInfo)
                    ''‘’''msgbox(numbers(i - 1))
                End If
                If n = 5 Then
                    materials_tjy.Add(GetTableInfo)
                    ' '‘’''msgbox(materials(i - 1))
                End If
                If n = 6 Then
                    sin_weights_tjy.Add(GetTableInfo)
                    ' '‘’''msgbox(sin_weights(i - 1))
                End If
                If n = 7 Then
                    con_weights_tjy.Add(GetTableInfo)
                    ''‘’''msgbox(con_weights(i - 1))
                End If
                If n = 8 Then
                    remarks_tjy.Add(GetTableInfo)
                    ' '‘’''msgbox(remarks(i - 1))
                End If
            Next
        Next
        tjys.Add(codes_tjy)
        tjys.Add(conNames_tjy)
        tjys.Add(materials_tjy)
        tjys.Add(numbers_tjy)
        tjys.Add(remarks_tjy)
        endApp()
        Return tjys

    End Function
    Public Function 图样目录表(address$, asmName$) As ArrayList
        m1 = openModel_new("asm", address + "/" + asmName)
        m1 = activateModel(asmName, 0)
        closeWindow(m1)
        drawingOptions.Insert(0, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_DISPLAY_DRAWING)
        drawingOptions.Insert(1, EpfcDrawingCreateOption.EpfcDRAWINGCREATE_SHOW_ERROR_DIALOG)
        ' 创建绘图对象
        drawing = AC.Session.CreateDrawingFromTemplate(m1.FullName, "hzb_sb-tm", m1.Descr, drawingOptions)
        m1 = activateModel(asmName, 2)
        ' '‘’''msgbox(666)
        AC.Session.RunMacro("GBBALLOON ~ Command `ProCmdDwgTblProperties` ;~ Select `Odui_Dlg_00` `pg_vis_tab` 1 `tab_2`;~ Open `Odui_Dlg_00` `t2.opt_balloon_type`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `simple`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `quantity`;~ Trigger `Odui_Dlg_00` `t2.opt_balloon_type` `custom`;~ Close `Odui_Dlg_00` `t2.opt_balloon_type`;~ Select `Odui_Dlg_00` `t2.opt_balloon_type` 1 `custom`;~ FocusOut `Odui_Dlg_00` `t2.opt_balloon_type`;~ Activate `Odui_Dlg_00` `t2.push_browse_balloon_sym`;~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;~ Select `file_open` `Ph_list.Filelist` 1 `guo_biao.sym`;~ Command `ProFileSelPushOpen@context_dlg_open_cmd` ;~ Activate `Odui_Dlg_00` `stdbtn_1`;")
        model = AC.Session.CurrentModel
        tableOwner = CType(model, IpfcTableOwner)
        tables = tableOwner.ListTables()
        table = tables.Item(2)
        TablesInfo += "第" + (1 + 1).ToString() + "个表格ID为" + table.Id.ToString() + "," + table.GetRowCount.ToString() + "X" + table.GetColumnCount.ToString() + "的表格。" + Chr(10)
        ''‘’''msgbox(TablesInfo) ' 明细表（1，2） 外购表（1，2）
        For n = 2 To table.GetColumnCount
            For i = 1 To table.GetRowCount
                tablecell = (New CCpfcTableCell).Create(i, n)
                cellnote = table.GetCellNote(tablecell)
                detailNoteItem = CType(cellnote, IpfcDetailNoteItem)
                detailNoteInstructions = detailNoteItem.GetInstructions(False)
                GetTableInfo = ""
                GetTableInfo = detailNoteInstructions.TextLines.Item(0).Texts.Item(0).Text
                If n = 2 Then
                    sheet_sizes_tm.Add(GetTableInfo)
                    ''‘’''msgbox(sheet_sizes(i - 1))
                End If
                If n = 3 Then
                    codes_tm.Add(GetTableInfo)
                    ' '‘’''msgbox(codes(i - 1))
                End If
                If n = 4 Then
                    conNames_tm.Add(GetTableInfo)
                    ''‘’''msgbox(conNames(i - 1))
                End If
                If n = 5 Then
                    numbers_tm.Add(GetTableInfo)
                    ''‘’''msgbox(numbers(i - 1))
                End If
                If n = 6 Then
                    remarks_tm.Add(GetTableInfo)
                    ''‘’''msgbox(remarks(i - 1))
                End If
                If n = 7 Then
                    partTypes_tm.Add(GetTableInfo)
                    ''‘’''msgbox(partTypes(i - 1))
                End If
            Next
        Next
        tms.Add(sheet_sizes_tm)
        tms.Add(codes_tm)
        tms.Add(conNames_tm)
        tms.Add(numbers_tm)
        tms.Add(remarks_tm)
        endApp()
        Return tms

    End Function
    Public Sub 导入表(path$, name$, Optional tap$ = "", Optional code$ = "")
        Dim xlApp As New Excel.Application
        Dim xlBook As Microsoft.Office.Interop.Excel.Workbook
        Dim xlSheet As Microsoft.Office.Interop.Excel.Worksheet
        xlApp = CreateObject("Excel.Application")
        xlApp.Visible = True
        'xlBook = xlApp.Workbooks.Add
        On Error Resume Next
        '打开mx表
        If mxs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15MX.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (mxs(0).Count / 20) < 1 Then
                For i = 0 To mxs(0).Count - 1

                    mxs.Add(codes_mx_new2)
                    mxs.Add(sheet_sizes_mx)
                    mxs.Add(conNames_mx)
                    mxs.Add(own_asm_mx)
                    mxs.Add(numbers_mx)
                    mxs.Add(numbers_mx)
                    mxs.Add(materials_mx)
                    mxs.Add(sin_weights_mx)
                    mxs.Add(con_weights_mx)
                    mxs.Add(remarks_mx)


                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 1 < (mxs(0).Count / 20) < 2 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To mxs(0).Count - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(15 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 2 < (mxs(0).Count / 20) < 3 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To 40 - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(15 + i, 29).Value = mxs(9)(i)
                Next
                For i = 40 To mxs(0).Count - 1
                    xlSheet.Cells(25 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(25 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(25 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(25 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(25 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(25 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(25 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(25 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(25 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
            ElseIf 3 < (mxs(0).Count / 20) < 4 Then
                For i = 0 To 20 - 1
                    xlSheet.Cells(5 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(5 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(5 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(5 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(5 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(5 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(5 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(5 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(5 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 20 To 40 - 1
                    xlSheet.Cells(15 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(15 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(15 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(15 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(15 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(15 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(15 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(15 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(15 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 40 To 60 - 1
                    xlSheet.Cells(25 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(25 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(25 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(25 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(25 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(25 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(25 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(25 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(25 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(5 + i, 29).Value = mxs(9)(i)
                Next
                For i = 60 To mxs(0).Count - 1
                    xlSheet.Cells(34 + i, 3).Value = mxs(0)(i)
                    xlSheet.Cells(34 + i, 7).Value = mxs(1)(i)
                    xlSheet.Cells(34 + i, 8).Value = mxs(2)(i)
                    xlSheet.Cells(34 + i, 14).Value = mxs(3)(i)
                    xlSheet.Cells(34 + i, 19).Value = mxs(4)(i)
                    xlSheet.Cells(34 + i, 20).Value = mxs(5)(i)
                    xlSheet.Cells(34 + i, 23).Value = mxs(6)(i)
                    xlSheet.Cells(34 + i, 21).Value = mxs(7)(i)
                    xlSheet.Cells(34 + i, 22).Value = mxs(8)(i)
                    xlSheet.Cells(34 + i, 29).Value = mxs(9)(i)
                Next
            End If
            If (mxs(0).Count / 32) < 1 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
            ElseIf 1 < (mxs(0).Count / 32) < 2 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
            ElseIf 2 < (mxs(0).Count / 32) < 3 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
                xlSheet.Range("S89").Value = tap
                xlSheet.Range("X89").Value = code
            ElseIf 3 < (mxs(0).Count / 32) < 4 Then
                xlSheet.Range("S29").Value = tap
                xlSheet.Range("X29").Value = code
                xlSheet.Range("S59").Value = tap
                xlSheet.Range("X59").Value = code
                xlSheet.Range("S89").Value = tap
                xlSheet.Range("X89").Value = code
                xlSheet.Range("S129").Value = tap
                xlSheet.Range("X129").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_MX" + ".xlsx")
            xlBook.Close()
        End If
        '打开bz表
        If bzs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15BZ.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (bzs(0).Count / 32) < 1 Then
                For i = 1 To bzs(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 1 < (bzs(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To bzs(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 2 < (bzs(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
                For i = 67 To bzs(0).Count - 1
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = bzs(4)(i)
                Next
            ElseIf 3 < (bzs(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = bzs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = bzs(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = bzs(4)(i)
                Next
                For i = 100 To bzs(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = bzs(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = bzs(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = bzs(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = bzs(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = bzs(4)(i)
                Next
            End If
            If (bzs(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (bzs(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (bzs(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (bzs(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_BZ" + ".xlsx")
            xlBook.Close()
        End If
        '打开WG表
        If wgs.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15WG.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (wgs(0).Count / 32) < 1 Then
                For i = 1 To wgs(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 1 < (wgs(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To wgs(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 2 < (wgs(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
                For i = 67 To wgs(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = wgs(4)(i)
                Next
            ElseIf 3 < (wgs(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = wgs(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = wgs(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = wgs(4)(i)
                Next
                For i = 100 To wgs(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = wgs(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = wgs(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = wgs(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = wgs(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = wgs(4)(i)
                Next
            End If

            If (wgs(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (wgs(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (wgs(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (wgs(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_WG" + ".xlsx")
            xlBook.Close()

        End If
        '打开TJ表
        If tjys.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15TJY.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (tjys(0).Count / 32) < 1 Then
                For i = 1 To tjys(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 1 < (tjys(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To tjys(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 2 < (tjys(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
                For i = 67 To tjys(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(22 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(22 + i, 14).Value = tjys(4)(i)
                Next
            ElseIf 3 < (tjys(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(2 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(2 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(2 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(2 + i, 14).Value = tjys(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(12 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(12 + i, 12).Value = tjys(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tjys(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tjys(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(22 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(22 + i, 12).Value = tjys(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tjys(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tjys(4)(i)
                Next
                For i = 10 To tjys(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = tjys(0)(i)
                    xlSheet.Cells(32 + i, 6).Value = tjys(1)(i)
                    xlSheet.Cells(32 + i, 12).Value = tjys(3)(i)
                    xlSheet.Cells(32 + i, 13).Value = tjys(2)(i)
                    xlSheet.Cells(32 + i, 14).Value = tjys(4)(i)
                Next
            End If


            If (tjys(0).Count / 32) < 1 Then
                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
            ElseIf 1 < (tjys(0).Count / 32) < 2 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code

            ElseIf 2 < (tjys(0).Count / 32) < 3 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
            ElseIf 3 < (tjys(0).Count / 32) < 4 Then

                xlSheet.Range("G42").Value = tap
                xlSheet.Range("L41").Value = code
                xlSheet.Range("G85").Value = tap
                xlSheet.Range("L84").Value = code
                xlSheet.Range("G128").Value = tap
                xlSheet.Range("L127").Value = code
                xlSheet.Range("G171").Value = tap
                xlSheet.Range("L170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_TJY" + ".xlsx")
            xlBook.Close()
        End If
        '打开TM表
        If tms.Count <> 0 Then
            xlBook = xlApp.Workbooks.Open("E:\works\creo\T009-15TM.xlsx")
            xlSheet = xlBook.Sheets("Sheet1")
            '存数据
            If (tms(0).Count / 32) < 1 Then
                For i = 1 To tms(0).Count
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)

                Next
            ElseIf 1 < (tms(0).Count / 32) < 2 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To tms(0).Count
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
            ElseIf 2 < (tms(0).Count / 32) < 3 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
                For i = 67 To tms(0).Count
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(22 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(22 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tms(4)(i)
                Next
            ElseIf 3 < (tms(0).Count / 32) < 4 Then
                For i = 1 To 33
                    xlSheet.Cells(2 + i, 2).Value = i.ToString
                    xlSheet.Cells(2 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(2 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(2 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(2 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(2 + i, 14).Value = tms(4)(i)
                Next
                For i = 34 To 66
                    xlSheet.Cells(12 + i, 2).Value = i.ToString
                    xlSheet.Cells(12 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(12 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(12 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(12 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(12 + i, 14).Value = tms(4)(i)
                Next
                For i = 67 To 99
                    xlSheet.Cells(22 + i, 2).Value = i.ToString
                    xlSheet.Cells(22 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(22 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(22 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(22 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(22 + i, 14).Value = tms(4)(i)
                Next
                For i = 100 To tms(0).Count
                    xlSheet.Cells(32 + i, 2).Value = i.ToString
                    xlSheet.Cells(32 + i, 3).Value = tms(0)(i)
                    xlSheet.Cells(32 + i, 4).Value = tms(1)(i)
                    xlSheet.Cells(32 + i, 7).Value = tms(2)(i)
                    xlSheet.Cells(32 + i, 13).Value = tms(3)(i)
                    xlSheet.Cells(32 + i, 14).Value = tms(4)(i)
                Next
            End If
            Dim A1, A2, A3, A4, A0 As Double
            A1 = 0
            A2 = 0
            A3 = 0
            A4 = 0
            A0 = 0
            For i = 0 To tms(0).Count - 1
                If tms(0)(i) = "A1" Then
                    A1 = A1 + 1
                ElseIf tms(0)(i) = "A2" Then
                    A2 = A2 + 1
                ElseIf tms(0)(i) = "A3" Then
                    A3 = A3 + 1
                ElseIf tms(0)(i) = "A4" Then
                    A4 = A4 + 1
                ElseIf tms(0)(i) = "A0" Then
                    A0 = A0 + 1
                End If
            Next

            If (tms(0).Count / 32) < 1 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
            ElseIf 1 < (tms(0).Count / 32) < 2 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code

            ElseIf 2 < (tms(0).Count / 32) < 3 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H122").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H123").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H124").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code
                xlSheet.Range("H128").Value = tap
                xlSheet.Range("M127").Value = code
            ElseIf 3 < (tms(0).Count / 32) < 4 Then
                xlSheet.Range("H36").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H37").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H38").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H79").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H80").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H81").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H122").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H123").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H124").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H165").Value = "0#" + A0.ToString + "张  1#" + A1.ToString + "张"
                xlSheet.Range("H166").Value = "2#" + A2.ToString + "张  3#" + A3.ToString + "张"
                xlSheet.Range("H167").Value = "4#" + A4.ToString + "张"
                xlSheet.Range("H42").Value = tap
                xlSheet.Range("M41").Value = code
                xlSheet.Range("H85").Value = tap
                xlSheet.Range("M84").Value = code
                xlSheet.Range("H128").Value = tap
                xlSheet.Range("M127").Value = code
                xlSheet.Range("H171").Value = tap
                xlSheet.Range("M170").Value = code
            End If
            xlSheet.SaveAs(path + "\" + name + "_TM" + ".xlsx")
            xlBook.Close()
        End If
        xlApp.Quit()
    End Sub
    Public Sub 明细表合并(path$, Optional path1$ = "", Optional path2$ = "", Optional path3$ = "", Optional path4$ = "", Optional path5$ = "")
        Dim xlApp As New Excel.Application
        Dim xlBook, xlBook2, xlBook3, xlBook4, xlBook5, xlBook6 As Microsoft.Office.Interop.Excel.Workbook
        Dim xlSheet, xlSheet2, xlSheet3, xlSheet4, xlSheet5, xlSheet6 As Microsoft.Office.Interop.Excel.Worksheet
        xlApp = CreateObject("Excel.Application")
        xlApp.Visible = True
        'xlBook = xlApp.Workbooks.Add
        On Error Resume Next
        '打开明细表
        xlBook = xlApp.Workbooks.Open(path)
        xlSheet = xlBook.Sheets("Sheet1")
        If path1$ <> "" Then
            '打开子装配明细表 定子
            xlBook2 = xlApp.Workbooks.Open(path1)
            xlSheet2 = xlBook2.Sheets("Sheet1")

            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet2.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet2.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next
                            Exit For
                        End If
                    Next
                    Exit For

                End If
            Next
        End If
        '打开子装配明细表 转子
        If path2$ <> "" Then
            xlBook3 = xlApp.Workbooks.Open(path2)
            xlSheet3 = xlBook3.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet3.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet3.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path3$ <> "" Then
            xlBook4 = xlApp.Workbooks.Open(path3)
            xlSheet4 = xlBook4.Sheets("Sheet1")

            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet4.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet4.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value

                            Next

                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path4$ <> "" Then
            xlBook5 = xlApp.Workbooks.Open(path4)
            xlSheet5 = xlBook5.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet5.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet5.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value
                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        If path5$ <> "" Then
            xlBook6 = xlApp.Workbooks.Open(path5)
            xlSheet6 = xlBook6.Sheets("Sheet1")
            For i = 0 To 30 Step 3
                If xlSheet.Range("C" + i.ToString + "5").Value = Nothing Then
                    For t = 0 To 30 Step 3
                        If xlSheet6.Range("C" + t.ToString + "5").Value = Nothing Then
                            For l = 0 To t / 3
                                xlSheet.Range("C" + (i + (l * 3)).ToString + "5" + ":AC" + ((i + (l * 3)) + 2).ToString + "8").Value = xlSheet6.Range("C" + (l * 3).ToString + "5" + ":AC" + ((l * 3) + 2).ToString + "8").Value
                            Next
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        End If
        xlBook.Save()
        xlBook.Close()
        xlApp.Quit()
    End Sub
    Public Sub 水冷定子装配(localhost$, tabledase$, ID#, path$, imageName$)
        Dim a, aa, aaa, ida, idb, idc As Double()
        '数据库
        mysql_new(localhost$, tabledase$, ID#)
        m1 = openModel("asm", "E:\works\creo\template\start_asm")
        m1 = activateModel("start_asm.asm", 0)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        '机座
        smodel_1 = (New CCpfcModelDescriptor).Create(1, read("main_frame_path"), Nothing)
        componentModel_1 = AC.Session.RetrieveModel(smodel_1)
        asmcomp_1 = assembly.AssembleComponent(componentModel_1, Nothing)
        constraints = New CpfcComponentConstraints
        constraint = (New CCpfcComponentConstraint).Create(13) '13=固定在载入位置
        constraints.Append(constraint)
        asmcomp_1.SetConstraints(constraints, Nothing)
        AC.Session.CurrentWindow.Refresh()
        constraints.Clear()
        smodel_2 = (New CCpfcModelDescriptor).Create(0, read("stator_core_winding_path"), Nothing)
        asmcomp_2 = 插入零件_1(assembly, 0, read("stator_core_winding_path"))
        a = {84}
        aa = {87, 84, 84}
        constraints = 面面约束(asmcomp_2, a, aa, 1080, 67, 3， -read("distance"))
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        RegenerateModel(m1)
        m1.Rename(read("CODE"), True)
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)

        ExportJpg(path, imageName)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            drawing = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {700, 500}, {0, 0}, {300, 500})
        End If

        刨视图("view_1", "XSEC0001", "halfPlane", 9)

        m2 = activateModel(read("code"), 2)
        view2Ds = listViews(drawing)

        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        modelItems = listModelItem(m2, "DTL_NOTE")
        修改注释(modelItems, 31, view2Ds.Item(0).Scale.ToString)
        添加图幅注释(m2， read("T_MOTOR"))

        smodel = drawing.Descr
        smodel.Path = path
        drawing.Backup(smodel)
        endApp()

        mxs = 明细表(m2)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        Threading.Thread.Sleep(2000)
    End Sub
    Public Sub creo_generator_assembly250(localhost$, tabledase$, ID#, imgPath$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new2(localhost$, "creo", "rear_cover", read("rear_cover_id"))
        mysql_new1(localhost$, "creo", "stator_assembly", read("stator_id"))
        'mysql_new2(localhost$, "creo", "main_frame", read1("main_frame_id"))
        'If read("ex_stator_id") <> 0 Then
        '    mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read("ex_stator_id"))
        '    mysql_new4(localhost$, "creo", "ex_sta_co_asm", read3("exciter_stator_core_id"))
        '    mysql_new5(localhost$, "creo", "exciter_stator", read4("exciter_stator_id"))
        'Else
        '    mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read1("exciter_stator_core_winding_id"))
        '    mysql_new4(localhost$, "creo", "ex_sta_co_asm", read3("exciter_stator_core_id"))
        '    mysql_new5(localhost$, "creo", "exciter_stator", read4("exciter_stator_id"))
        'End If
        Dim a, aa, aaa, ida, idb, idc As Double()
        Dim c, d As Double
        m1 = openModel("asm", "E:\works\creo\template\start_asm.asm")
        m1 = activateModel("start_asm", 0)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        componentModel_1 = 固定零件(assembly, 0, read("stator_path")) '定子总装配
        asmcomp_2 = 插入零件_2(assembly, 0, read("rotor_path"))
        modelItems = listModelItem(m1, "FEATURE")
        T1 = modelItems.Item(7).Id
        m2 = activateModel(read("rotor_code"), 0)
        modelItems = listModelItem(m2, "FEATURE")
        T2 = modelItems.Item(8).Id
        T3 = modelItems.Item(7).Id
        closeWindow(m2)
        m1 = activateModel("start_asm", 0)
        a = {84, 87, 84, 84}
        aa = {T1, T2, 84, 80}  '(87,110,84,80)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '前端盖
        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            If read("type") = 1 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("front_cover_path")) '单支撑
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84}
                aa = {modelItems.Item(8).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 137, 1, 1, "ADTM16", "", 0)
                a = {84, 84, 90}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(8).Id}
                'constraints = 轴约束(asmcomp_2, a, aa, "AA_35", "A_25")
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            ElseIf read("type") = 2 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("front_cover_path")) '双支撑
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84}
                aa = {modelItems.Item(8).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 99, 1, 1, "ADTM16", "", 0)
                a = {84, 84, 90}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(8).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                'constraints = 轴约束(asmcomp_2, a, aa, "AA_35", "A_32")
                constraints.Clear()
            End If
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
            asmcomp_2 = 插入零件_2(assembly, 0, read("front_cover_path")) '装配件
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            a = {84, 84}
            aa = {c, 379}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 64, 1, 1, "ADTM16", "", 0)
            a = {84, 84, 90}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
            constraints.Clear()




        End If

        '后端盖
        If read2("bracket_type") = 2 Then
            asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path")) '无凸起部分   <等待修改>
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(9).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 190, 1, 1, "ADTM17", "", 0)
            a = {84, 84, 90}
            aa = {modelItems.Item(9).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            a = {84}
            aa = {modelItems.Item(9).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_FRONT", "RIGHT", 0)
            constraints.Clear()
            '与后端盖配合的防护罩        
            asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(9).Id}
            aa = {modelItems.Item(10).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 321, 130, 0) '4175
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "FRONT", 2)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
        ElseIf read2("bracket_type") = 1 Then
            asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path")) '有凸起部分
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(9).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 807, 1, 1, "ADTM17", "", 0)
            a = {84, 84}
            aa = {modelItems.Item(9).Id}
            '‘’''msgbox(0)
            constraints = 轴约束(asmcomp_2, a, aa, "AA_72", "A_18") 'AA_51
            constraints = 轴约束(asmcomp_2, a, aa, "AA_7", "A_1")
            constraints.Clear()
            '与后端盖配合的防护罩        
            asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(9).Id} '89
            aa = {modelItems.Item(10).Id} '90
            constraints = 面面约束(asmcomp_2, a, aa, 939, 130, 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "FRONT", 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            'constraints = 面面约束(asmcomp_2, a, aa, 3796, 180, 0)
            'constraints = 面面约束(asmcomp_2, a, aa, 76, 150, 0)
            constraints.Clear()
        End If
        '与前端盖配合的防护罩  

        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(8).Id}
            aa = {modelItems.Item(11).Id}
            If read("type") = 1 Then
                idc = {151, 64} '单支撑172->64
            ElseIf read("type") = 2 Then
                idc = {151, 140} '双支撑
            End If
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 4065, 1, 1, "RIGHT", "", 0)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask_path"))
            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(11).Id
            a = {c, 84}
            aa = {d}
            idc = {78, 64}
            idb = {1454, 1457}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        End If

        '与基座配合的防护罩
        asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask1_path"))
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84, 1106}
        aa = {modelItems.Item(12).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 518, 1454, 0)
        a = {84, 84}
        aa = {modelItems.Item(12).Id}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 1458, 1, 1, "ADTM14", "", 2)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "AA_48", "DTM3", 9)
        a = {84, 84, 1106}
        aa = {modelItems.Item(12).Id}
        constraints.Clear()

        '箱体
        asmcomp_2 = 插入零件_2(assembly, 0, read("junction_box_path"))
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84, 1106}
        aa = {modelItems.Item(13).Id, 123}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
        constraints = 面面约束(asmcomp_2, a, aa, 479, 146, 2) '侧面
        constraints = 面面约束(asmcomp_2, a, aa, 469, 82, 0) '圆弧
        constraints.Clear()

        ' 前端盖与基座配合标准件安装
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
        End If
        If InStr(read("front_cover_path"), ".prt.") <> 0 Then
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(8).Id}
            aa = {modelItems.Item(14).Id}
            If read("type") = 1 Then
                idc = {215, 1014} '单支撑
            ElseIf read("type") = 2 Then
                idc = {64, 2061} '双支撑
            End If
            idb = {2, 16}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
        ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

            feats = listModelItem(m1, "FEATURE")
            c = feats.Item(8).Id
            d = feats.Item(14).Id
            a = {c}
            aa = {d}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_26", "A_1")
            a = {c, 572}
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            constraints.Clear()
        End If



        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(14).Id}
        aa = {modelItems.Item(15).Id}
        idc = {16, 7}
        idb = {16, 2}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        'Threading.Thread.Sleep(3000)

        If read("material_model1") = "1" Then
            If read("screw_pole1") = "GB5782" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_304")
            End If
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(15).Id}
        aa = {modelItems.Item(16).Id}
        idc = {16, 7}
        idb = {16, 47}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        'Threading.Thread.Sleep(3000)

        ' 前端盖上固定防护罩标准件安装
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(11).Id}
        aa = {modelItems.Item(17).Id}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(11).Id}
        aa = {modelItems.Item(18).Id}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 2, 1, 1, "DTM2", "", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(17).Id}
        aa = {modelItems.Item(19).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 7, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(18).Id}
        aa = {modelItems.Item(20).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 7, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(19).Id}
        aa = {modelItems.Item(21).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 2, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(20).Id}
        aa = {modelItems.Item(21).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 2, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        ' 螺母
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(17).Id}
        aa = {modelItems.Item(23).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 2, 456, 2, 6)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 474, 0)
        constraints.Clear()
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(18).Id}
        aa = {modelItems.Item(24).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 2, 456, 2, 6)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 474, 0)
        constraints.Clear()


        '后端盖与基座配合标准件安装

        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer3") + "\d" + read("standard_part3") + "_" + Replace(read("washer3"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(9).Id} '后端盖
        aa = {modelItems.Item(25).Id}
        'constraints = 面面约束(asmcomp_2, a, aa, 64, 10， 0)
        If read2("bracket_type") = 1 Then '有凸起
            constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
            'constraints = 面面约束(asmcomp_2, a, aa, 2073, 24， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 3581, 16， 0)
        ElseIf read2("bracket_type") = 2 Then '无凸起
            constraints = 面面约束(asmcomp_2, a, aa, 9672, 2， 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_44", "A_1")
            'constraints = 面面约束(asmcomp_2, a, aa, 3581, 24， 0)
        End If
        constraints.Clear()


        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part3") + "_gb93_316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part3") + "_gb93_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part3") + "_gb93_dacromet")
        End If '垫圈93 弹垫
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(25).Id} '848
        aa = {modelItems.Item(26).Id} '93
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints.Clear()


        If read("material_model3") = "1" Then
            If read("screw_pole3") = "GB5782" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_316l")
            Else
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_304")

            End If
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_zn")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole3") + "\" + "m" + read("standard_part3") + "x" + read("screw_pole_length3") + "_" + Replace(read("screw_pole3"), "GB", "gb") + "_dacromet")
        End If  '螺杆
        modelItems = listModelItem(m1, "FEATURE")
        m1 = activateModel("start_asm", 0)
        a = {modelItems.Item(26).Id}
        aa = {modelItems.Item(27).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints.Clear()

        '防护罩与后端盖装配固定
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
        End If
        'componentModel_2 = AC.Session.RetrieveModel(smodel_2)
        'asmcomp_2 = assembly.AssembleComponent(componentModel_2, Nothing)
        'model.Display()
        'AC.Session.CurrentWindow.Activate()
        'AC.Session.CurrentWindow.Refresh()
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(10).Id}
        aa = {modelItems.Item(28).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 142, 2， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 321, 16， 0)
        constraints.Clear()

        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
        End If '垫圈93 弹垫
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(28).Id} '848
        aa = {modelItems.Item(29).Id} '93
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2， 0)
        constraints.Clear()


        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
        End If

        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(29).Id}
        aa = {modelItems.Item(30).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()


        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))  '轴承
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(7).Id, T3}
        aa = {modelItems.Item(31).Id}  '175
        constraints = 面面约束(asmcomp_2, a, aa, 682, 183， 0)
        constraints = 面面约束(asmcomp_2, a, aa, 533, 193， 0)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")


        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))  '波形弹性垫圈
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(31).Id} '175
        aa = {modelItems.Item(32).Id}  '176
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
        ids = (New Cintseq)
        ids.Append(modelItems.Item(31).Id)   '175
        paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_1 = paths.Leaf
        ids = (New Cintseq)
        ids.Append(modelItems.Item(32).Id)   '176
        Path = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
        componentModel_2 = Path.Leaf

        compItem_1 = componentModel_1.GetItemByID(1, 185)
        compItem_2 = componentModel_2.GetItemByName(1, "TOP")

        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Path)
        constraint = (New CCpfcComponentConstraint).Create(0)
        constraint.AssemblyReference = compSelect_1
        constraint.ComponentReference = compSelect_2
        constraints.Append(constraint)
        asmcomp_2.SetConstraints(constraints, Nothing)
        constraints.Clear()

        '基座与防护罩
        '93垫圈与防护罩
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(33).Id}   '177
        constraints = 轴约束(asmcomp_2, a, aa, "AA_48", "A_1")
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(12).Id}
        aa = {modelItems.Item(33).Id}   '177
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM3", 5)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(33).Id}    '177
        aa = {modelItems.Item(34).Id}    '178
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(34).Id}    '178
        aa = {modelItems.Item(35).Id}    '179
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '2----------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(36).Id}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_38", "A_1")
        a = {modelItems.Item(12).Id}
        aa = {modelItems.Item(36).Id}    '180
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM3", 5)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(36).Id}   '180
        aa = {modelItems.Item(37).Id}   '181
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(37).Id}   '181
        aa = {modelItems.Item(38).Id}    '182
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '3-------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(39).Id}    '183
        constraints = 轴约束(asmcomp_2, a, aa, "AA_47", "A_1")
        a = {modelItems.Item(12).Id}
        aa = {modelItems.Item(39).Id}    '183
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM3", 5)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(39).Id}    '183
        aa = {modelItems.Item(40).Id}     '184
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(40).Id}
        aa = {modelItems.Item(41).Id}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        '4------------------------------------------------------------------------------------------------
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84}
        aa = {modelItems.Item(42).Id}    '186
        constraints = 轴约束(asmcomp_2, a, aa, "AA_37", "A_1")
        a = {modelItems.Item(12).Id}
        aa = {modelItems.Item(42).Id}    '186
        constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
        'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM3", 5)
        constraints.Clear()

        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")

        a = {modelItems.Item(42).Id}   '186
        aa = {modelItems.Item(43).Id}   '187
        constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
        constraints.Clear()
        If read("material_model6") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
        ElseIf read("material_model6") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
        ElseIf read("material_model6") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
        End If
        modelItems = listModelItem(m1, "FEATURE")
        a = {modelItems.Item(43).Id}   '187
        aa = {modelItems.Item(44).Id}   '188
        constraints = 面面约束(asmcomp_2, a, aa, 2, 18, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()

        If read("type") = 2 Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2"))  '轴承
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(7).Id, T3}
            aa = {modelItems.Item(45).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 116, 183， 0)
            constraints = 面面约束(asmcomp_2, a, aa, 170, 193， 0)
            constraints.Clear()
            'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer2"))  '波形弹性垫圈
            modelItems = listModelItem(m1, "FEATURE")

            a = {modelItems.Item(45).Id}
            aa = {modelItems.Item(46).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
            ids = (New Cintseq)
            ids.Append(modelItems.Item(45).Id)
            paths = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            componentModel_1 = paths.Leaf
            ids = (New Cintseq)
            ids.Append(modelItems.Item(46).Id)
            Path = (New CMpfcAssembly).CreateComponentPath(assembly, ids)
            componentModel_2 = Path.Leaf

            compItem_1 = componentModel_1.GetItemByID(1, 185)
            compItem_2 = componentModel_2.GetItemByName(1, "TOP")

            compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, paths)
            compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(compItem_2, Path)
            constraint = (New CCpfcComponentConstraint).Create(0)
            constraint.AssemblyReference = compSelect_1
            constraint.ComponentReference = compSelect_2
            constraints.Append(constraint)
            asmcomp_2.SetConstraints(constraints, Nothing)
            constraints.Clear()
        End If

        If read2("bracket_type") = 1 Then
            If read("type") = 1 Then
                '励磁机定子
                asmcomp_2 = 插入零件_2(assembly, 0, read("ex_stator_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                'aa = {191, 84}
                aa = {modelItems.Item(45).Id, 84, 84}   '189
                constraints = 面面约束(asmcomp_2, a, aa, 6532, 65, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_33", "A_14")
                a = {modelItems.Item(9).Id}
                'aa = {191}
                aa = {modelItems.Item(45).Id}    '189
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "AA_1")
                constraints.Clear()
                '
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                End If
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(45).Id， 84, 84}
                aa = {modelItems.Item(46).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                constraints.Clear()

                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(46).Id}
                aa = {modelItems.Item(47).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()

                If read("material_model5") = "1" Then
                    If read("screw_pole5") = "GB5782" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_316l")
                    Else
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_304")

                    End If
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
                End If  '螺杆
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(47).Id}
                aa = {modelItems.Item(48).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
                constraints.Clear()

            ElseIf read("type") = 2 Then
                '励磁机定子
                asmcomp_2 = 插入零件_2(assembly, 0, read("ex_stator_path"))
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                'aa = {191, 84}
                aa = {modelItems.Item(47).Id, 84, 84}   '189
                constraints = 面面约束(asmcomp_2, a, aa, 6532, 65, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_33", "A_14")
                a = {modelItems.Item(9).Id}
                'aa = {191}
                aa = {modelItems.Item(47).Id}    '189
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "AA_1")
                constraints.Clear()
                '
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                End If
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(47).Id， 84, 84}
                aa = {modelItems.Item(48).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                constraints.Clear()

                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(48).Id}
                aa = {modelItems.Item(49).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()

                If read("material_model5") = "1" Then
                    If read("screw_pole5") = "GB5782" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_316l")
                    Else
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_304")

                    End If
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
                End If  '螺杆
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(49).Id}
                aa = {modelItems.Item(50).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 16, 16, 0)
                constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
                constraints.Clear()

            End If


        End If

        参考阵列(feats, 14)

        参考阵列(feats, 15)

        参考阵列(feats, 16)

        参考阵列(feats, 25)

        参考阵列(feats, 26)

        参考阵列(feats, 27)

        参考阵列(feats, 28)

        参考阵列(feats, 29)

        参考阵列(feats, 30)


        If read2("bracket_type") = 1 Then
            If read("type") = 1 Then
                参考阵列(feats, 46)
                Threading.Thread.Sleep(500)
                参考阵列(feats, 47)
                Threading.Thread.Sleep(500)
                参考阵列(feats, 48)
                Threading.Thread.Sleep(500)

            ElseIf read("type") = 2 Then

                参考阵列(feats, 48)
                Threading.Thread.Sleep(500)
                参考阵列(feats, 49)
                Threading.Thread.Sleep(500)
                参考阵列(feats, 50)
                Threading.Thread.Sleep(500)
            End If
        End If
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)
        添加bom新内容(ItemString, m1)
        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If

        Dim inspect As String
        'inspect = 干涉检查(m1)
        '创建文本(imgPath, inspect)

        ExportJpg(imgPath, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图2(m1, sheet_size, 0.4, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        If read2("bracket_type") = 1 Then
            If read("type") = 1 Then
                刨视图("view_1", "XSEC0001", "halfPlane", 49 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (43 + StringNumber / 4).ToString + "`;" +
            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
            "~ Command `ProCmdDwgShowAllAnnots` ;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (45 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (52 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (59 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(12)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                note_Item_5 = modelItems.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(note_Item_5, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                selBuffer.AddSelection(compSelect_5)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 51 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (45 + StringNumber / 4).ToString + "`;" +
            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
            "~ Command `ProCmdDwgShowAllAnnots` ;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
            "~ Activate `show_model_annotations` `psh_ok`;")
                'seBuffer = selBuffer.Contents.Item(0)
                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (47 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (54 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (61 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(12)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                note_Item_5 = modelItems.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(note_Item_5, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                selBuffer.AddSelection(compSelect_5)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            End If
        Else
            If read("type") = 1 Then
                刨视图("view_1", "XSEC0001", "halfPlane", 45 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (39 + StringNumber / 4).ToString + "`;" +
                                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                                    "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                    "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                                    "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                                    "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                                    "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                                    "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (41 + StringNumber / 4).ToString + "`;" +
                                    "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (50 + StringNumber / 4).ToString + "`;" +
                                    "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (57 + StringNumber / 4).ToString + "`;" +
                                    "~ Command `ProCmdDwgShowAllAnnots` ;" +
                                    "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(12)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                note_Item_5 = modelItems.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(note_Item_5, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                selBuffer.AddSelection(compSelect_5)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 47 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node41`;" +
            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
            "~ Command `ProCmdDwgShowAllAnnots` ;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (43 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (52 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (59 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(12)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                note_Item_5 = modelItems.Item(13)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                compSelect_5 = (New CMpfcSelect).CreateModelItemSelection(note_Item_5, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                selBuffer.AddSelection(compSelect_5)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            End If
        End If
        移动视图("general", "view_1", 280, 391)
        移动视图("general", "view_2", 630, 391)
        添加图幅注释(m2, read("T_MOTOR"))



        smodel = m2.Descr
        smodel.Path = imgPath$
        m2.Backup(smodel)
        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), imgPath$ + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), imgPath$ + "\" + read("rotor_code") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", imgPath$ + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + "_MX.xlsx", imgPath$ + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        'If read("ex_stator_path") <> "0" Then
        '    零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), imgPath$ + "\" + read("ex_stator_code") + ".drw.1")
        '    零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        'End If
        'If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), imgPath$ + "\" + read("front_cover_code") + ".drw.1")
        'ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), imgPath$ + "\" + read("front_cover_code") + ".drw.1")
        'End If
        'If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), imgPath$ + "\" + read("rear_cover_ccode") + ".drw.1")
        'ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), imgPath$ + "\" + read("rear_cover_code") + ".drw.1")
        'End If
        '零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), imgPath$ + "\" + read("round_mask_code") + ".drw.1")
        'If read("strip_mask1_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask1_code") + ".drw.1")
        'End If
        'If read("strip_mask2_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask2_code") + ".drw.1")
        'End If
        'If read("strip_mask_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask_code") + ".drw.1")
        'End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx")

        mxs = 明细表(m2)
        tms = 图样目录表(imgPath$， read("code"))
        tjys = 通借用表(imgPath$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(imgPath$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(imgPath$， read("code"))
        End If
        导入表(imgPath$, read("CODE"), read("MARK"), read("CODE"))
        If read("ex_stator_path") <> "0" Then
            If Dir(imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(imgPath$ + "\" + read("CODE") + "_MX" + ".xlsx", imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(imgPath$ + "\" + read("CODE") + "_MX" + ".xlsx", imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If

        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(imgPath$， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If

        If read("isopen") = "1" Then
            openModel("drw", imgPath + "\" + read("CODE"))
        End If
        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
    End Sub
    Public Function creo_generator_assembly_355(localhost$, tabledase$, ID#, imgPath$, imageName$) As ArrayList
        mysql_new(localhost$, tabledase$, ID#)

        mysql_new1(localhost$, "creo", "stator_assembly", read("stator_id"))
        mysql_new2(localhost$, "creo", "main_frame", read1("main_frame_id"))
        If read("ex_stator_id") <> 0 Then
            mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read("ex_stator_id"))
            mysql_new4(localhost$, "creo", "ex_sta_co_asm", read3("exciter_stator_core_id"))
            mysql_new5(localhost$, "creo", "exciter_stator", read4("exciter_stator_id"))
        Else
            mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read1("exciter_stator_core_winding_id"))
            mysql_new4(localhost$, "creo", "ex_sta_co_asm", read3("exciter_stator_core_id"))
            mysql_new5(localhost$, "creo", "exciter_stator", read4("exciter_stator_id"))
        End If
        Dim a, aa, aaa, aaaa, ida, idb, idc As Double()
        Dim c, d As Double
        Dim standard_part_name1, standard_part_name2 As String
        m1 = openModel("asm", "E:\works\creo\template\start_asm")
        m1 = activateModel("start_asm", 0)
        Threading.Thread.Sleep(2000)
        selBuffer = session.CurrentSelectionBuffer
        selBuffer.Clear()
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        '-----------------------------------------------------------------------------------------------------------
        '定子
        If read2("bracket_type") = 1 Then
            componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
        Else
            If read5("type") = 1 Then
                componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
            Else
                componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
            End If
        End If
        '-----------------------------------------------------------------------------------------------------------
        '转子（单支撑）
        If read("type") = 1 Then
            asmcomp_2 = 插入零件_2(assembly, 0, read("rotor_path"))         ' "E:\works\Creo\parts\rotor\123" 
            modelItems = listModelItem(m1, "FEATURE")
            T1 = modelItems.Item(7).Id
            m2 = activateModel(read("rotor_code"), 0)
            modelItems = listModelItem(m2, "FEATURE")
            T2 = modelItems.Item(8).Id
            T3 = modelItems.Item(7).Id
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            a = {84, 87, 84, 84}
            aa = {T1, T2, 84, 80}  '(87,110,84,80)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            '前端盖（单支撑）
            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("front_cover_path"))                   '"E:\works\Creo\template\front_cover\8ly_013_355" 
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1819}
                aa = {modelItems.Item(8).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 594, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 0)
                'a = {84, 84}
                'aa = {modelItems.Item(8).Id}
                'constraints = 轴约束(asmcomp_2, a, aa, "AA_34", "A_25")
                constraints.Clear()
            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then
                asmcomp_2 = 插入零件_2(assembly, 0, read("front_cover_path")) '装配件
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                a = {84, 84, 1819}
                aa = {c, 379}
                constraints = 面面约束(asmcomp_2, a, aa, 70, 64, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "ASM_TOP", "TOP", 0)
                constraints.Clear()
            End If




            '-----------------------------------------------------------------------------------------------------------
            '后端盖
            If read2("bracket_type") = 2 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path"))                  '"E:\works\Creo\template\rear_cover\8ly_014_356"
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1818}
                aa = {modelItems.Item(9).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 408, 1, 1, "ADTM9", "", 0)
                'constraints = 面面约束(asmcomp_2, a, aa, 1107297680, 408, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "AA_32", "A_42")
                constraints.Clear()
                '-----------------------------------------------------------------------------------------------------------
                '后端盖与防护罩
                asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))    '"E:\works\Creo\template\mask\round_mask\1"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(10).Id}
                idc = {539, 500} '539, 502
                idb = {130, 150}
                ida = {0, 0}
                constraints = 轴约束(asmcomp_2, a, aa, "A_78", "A_2") '"A_49", "A_2"
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            Else
                asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path"))                               '"E:\works\Creo\template\rear_cover\8ly_014_355"
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1818}
                aa = {modelItems.Item(9).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 408, 1, 1, "ADTM9", "", 0)
                'constraints = 面面约束(asmcomp_2, a, aa, 1107297680, 408, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "AA_32", "A_42")
                constraints.Clear()
                '-----------------------------------------------------------------------------------------------------------
                '后端盖与防护罩
                asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))    '"E:\works\Creo\template\mask\round_mask\1"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(10).Id}
                idc = {539, 500} '539, 502
                idb = {130, 150}
                ida = {0, 0}
                constraints = 轴约束(asmcomp_2, a, aa, "A_49", "A_2") '"A_49", "A_2"
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            End If
            '-----------------------------------------------------------------------------------------------------------
            '前端盖与防护罩
            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask_path"))                        '"E:\works\Creo\template\mask\strip_mask\5"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(8).Id}
                aa = {modelItems.Item(11).Id}
                idc = {215, 183}
                idb = {1455, 1507}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

                asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask_path"))
                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                d = feats.Item(11).Id
                a = {c, 84}
                aa = {d}
                idc = {78, 64}
                idb = {1454, 1457}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            End If

            '-----------------------------------------------------------------------------------------------------------
            '接线盒与基座
            'asmcomp_2 = 插入零件_2(assembly, 0, "E:\works\creo\box_assembly\355\3sb-676-355")                   '"E:\works\Creo\template\box\3sb-676-001"
            'MkDir("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString)
            'box_改名("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString, "E:\works\creo\box_assembly\355\3sb-676-355.asm", read("junction_box_name"))
            'm1 = activateModel("start_asm", 0)
            asmcomp_2 = 插入零件_2(assembly, 0, read("junction_box_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84, 1790}
            aa = {modelItems.Item(12).Id, 123}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
            constraints = 面面约束(asmcomp_2, a, aa, 741, 146, 2) '侧面
            constraints = 面面约束(asmcomp_2, a, aa, 469, 82, 0) '圆弧
            constraints.Clear()

            '-----------------------------------------------------------------------------------------------------------
            '防护罩与基座
            asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask1_path"))                   ' "E:\works\Creo\template\mask\strip_mask\7"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84, 1790}
            aa = {modelItems.Item(13).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 469, 1507, 0)
            constraints = 装配约束(asmcomp_2, a, aa, 533, 0, 1, 1, "", "DTM3", 0)
            a = {84, 84}
            aa = {modelItems.Item(13).Id}
            ' constraints = 装配约束(asmcomp_2, a, aa, 0, 1456, 1, 1, "ADTM2", "", 2) '1456
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            '螺栓组、前端盖与基座
            'GB_T93_12 垫圈
            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part1") + "_gb93_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part1") + "_gb93_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part1") + "_gb93_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t93_12"
            If InStr(read("front_cover_path"), ".prt.") <> 0 Then
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(8).Id}
                aa = {modelItems.Item(14).Id}
                idc = {3806, 142}
                idb = {16, 2}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            ElseIf InStr(read("front_cover_path"), ".asm.") <> 0 Then

                feats = listModelItem(m1, "FEATURE")
                c = feats.Item(8).Id
                d = feats.Item(14).Id
                a = {c}
                aa = {d}
                constraints = 轴约束(asmcomp_2, a, aa, "AA_26", "A_1")
                a = {c, 572}
                constraints = 面面约束(asmcomp_2, a, aa, 64, 2， 0)
                constraints.Clear()
            End If

            'GB_T848_12 垫圈
            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_316l")
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer1") + "\d" + read("standard_part1") + "_" + Replace(read("washer1"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(14).Id}
            aa = {modelItems.Item(15).Id}
            idc = {16, 7}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T5782_M12×50 螺栓


            If read("screw_pole5") = "GB5783" Then
                standard_part_name2 = "_304"
            Else
                standard_part_name2 = "_316l"
            End If
            If read("screw_pole1") = "GB5783" Then
                standard_part_name1 = "_304"
            Else
                standard_part_name1 = "_316l"
            End If

            If read("material_model1") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + standard_part_name1)
            ElseIf read("material_model1") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_zn")
            ElseIf read("material_model1") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole1") + "\" + "m" + read("standard_part1") + "x" + read("screw_pole_length1") + "_" + Replace(read("screw_pole1"), "GB", "gb") + "_dacromet")
            End If ' "E:\works\Creo\standard_part\bolt\M12\gbt5782_m12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(15).Id}
            aa = {modelItems.Item(16).Id}
            idc = {16, 2}
            idb = {16, 47}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 前端盖、防护罩与螺钉组
            'GB_T93_6 垫圈
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(11).Id}
            aa = {modelItems.Item(17).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 7, 1, 1, "DTM2", "", 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part4") + "_gb93_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part4") + "_gb93_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part4") + "_gb93_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(11).Id}
            aa = {modelItems.Item(18).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 7, 1, 1, "DTM2", "", 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
            constraints.Clear()
            'GB_T848_6 垫圈
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(17).Id}
            aa = {modelItems.Item(19).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 2, 2, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer4") + "\d" + read("standard_part4") + "_" + Replace(read("washer4"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(18).Id}
            aa = {modelItems.Item(20).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 2, 2, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints.Clear()
            'M6×30 螺钉
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
            End If '"E:\works\Creo\standard_part\screw\gbt67_m6x30"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(19).Id}
            aa = {modelItems.Item(21).Id}
            idc = {16, 7}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part4") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part4") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part4") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
            End If '"E:\works\Creo\standard_part\screw\gbt67_m6x30"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(20).Id}
            aa = {modelItems.Item(22).Id}
            idc = {16, 7}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T6170_M6 螺母
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
            End If '"E:\works\Creo\standard_part\nut\gb_t6170_m6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(21).Id}
            aa = {modelItems.Item(23).Id}
            idc = {18, 16}
            idb = {456, 474}
            ida = {1, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 5.5)
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb6170\m" + read("standard_part4") + "_gb6170_316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb6170\m" + read("standard_part4") + "_gb6170_zn")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb6170\m" + read("standard_part4") + "_gb6170_dacromet")
            End If '"E:\works\Creo\standard_part\nut\gb_t6170_m6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(22).Id}
            aa = {modelItems.Item(24).Id}
            idc = {18, 16}
            idb = {456, 474}
            ida = {1, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida, 5.5)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 基座与防护罩
            ' GB_T93_6 垫圈
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(27).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_43", "A_1")
            a = {modelItems.Item(13).Id}
            aa = {modelItems.Item(27).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM1", 5)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part6") + "_gb93_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part6") + "_gb93_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part6") + "_gb93_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(28).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_42", "A_1")
            a = {modelItems.Item(13).Id}
            aa = {modelItems.Item(28).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 1507, 2, 7)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM1", 5)
            constraints.Clear()
            modelItems = listModelItem(m1, "FEATURE")
            For z = 27 To 28
                方向阵列(modelItems, z)
            Next
            setParamValue(m1, "d91", "686", "浮点型") '圆筒直径+2*防护罩厚度   
            setParamValue(m1, "d98", "686", "浮点型")
            ' GB_T848_6 垫圈
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(28).Id}
            aa = {modelItems.Item(33).Id}
            idc = {16, 7}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(31).Id}
            aa = {modelItems.Item(34).Id}
            idc = {16, 7}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(29).Id}
            aa = {modelItems.Item(35).Id}
            idc = {16, 2}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer6") + "\d" + read("standard_part6") + "_" + Replace(read("washer6"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(32).Id}
            aa = {modelItems.Item(36).Id}
            idc = {16, 2}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T67_M6×10 螺钉
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
            End If  ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(33).Id}
            aa = {modelItems.Item(37).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
            End If ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(34).Id}
            aa = {modelItems.Item(38).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
            End If  ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(35).Id}
            aa = {modelItems.Item(39).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model6") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_316l")
            ElseIf read("material_model6") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_zn")
            ElseIf read("material_model6") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part6") + "x" + read("standard_part6_screw_nail6") + "_gb818_dacromet")
            End If  ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(36).Id}
            aa = {modelItems.Item(40).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 后端盖与防护罩连接
            'GB_T93_M6 垫圈
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part2") + "_gb93_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part2") + "_gb93_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part2") + "_gb93_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(10).Id}
            aa = {modelItems.Item(41).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 142, 2, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_2", "A_1")
            constraints.Clear()
            'GB_T848_M6 垫圈
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer2") + "\d" + read("standard_part2") + "_" + Replace(read("washer2"), ".", "_") + "_dacromet")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(41).Id}
            aa = {modelItems.Item(42).Id}
            idc = {16, 7}
            idb = {16, 2}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T67_M6×10 螺钉
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
            End If
            ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(42).Id}
            aa = {modelItems.Item(43).Id}
            idc = {7, 16}
            idb = {18, 16}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 后端盖与基座连接
            'GB_T93_M12 垫圈
            If read5("type") = 0 Then
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                End If '"E:\works\Creo\standard_part\washers\gb_t93_12"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(44).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 491, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_25", "A_1")
                constraints.Clear()
            Else
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                End If '"E:\works\Creo\standard_part\washers\gb_t93_12"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(44).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 491, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_25", "A_1")
                constraints.Clear()
            End If
            'GB_T848_M12 垫圈

            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
            End If ' "E:\works\Creo\standard_part\washers\gb_t848_12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(44).Id}
            aa = {modelItems.Item(45).Id}
            idc = {16, 7}
            idb = {16, 2}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()

            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + standard_part_name2) '"_316l" 
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
            End If ' "E:\works\Creo\standard_part\bolt\M12\gbt5782_m12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(45).Id}
            aa = {modelItems.Item(46).Id}
            idc = {16, 7}
            idb = {16, 47}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 转子与轴承
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))           '  "E:\works\Creo\standard_part\bearing\gbt276_6315"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(7).Id, T3}
            aa = {modelItems.Item(47).Id}
            idc = {533, 424}
            idb = {205, 233}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))                  '"E:\works\Creo\standard_part\washers\jbt7950_160"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(47).Id}
            aa = {modelItems.Item(48).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)
            constraints.Clear()
            If read2("bracket_type") = 2 Then
                If read5("type") = 1 Then
                    '-----------------------------------------------------------------------------------------------------------
                    ' 励磁机与凸起后端盖
                    asmcomp_2 = 插入零件_2(assembly, 0, read（"ex_stator_path"）)                 '"E:\works\Creo\parts\exciter_stator_core_winding\1\5sb-681-001"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(9).Id}
                    aa = {modelItems.Item(49).Id, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 8405, 70, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints = 轴约束(asmcomp_2, a, aa, "A_65", "A_14")
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    If read("material_model5") = "1" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                    ElseIf read("material_model5") = "2" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                    ElseIf read("material_model5") = "3" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                    End If '"E:\works\Creo\standard_part\washers\gb_t93_10"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(49).Id, 84, 84}
                    aa = {modelItems.Item(50).Id}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 65, 2, 0)
                    constraints.Clear()
                Else
                    asmcomp_2 = 插入零件_2(assembly, 0, read（"ex_stator_path"）)                               '"E:\works\Creo\parts\exciter_stator_core_winding\2\5sb-681-002"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(9).Id}
                    aa = {modelItems.Item(49).Id, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 8405, 69, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints = 轴约束(asmcomp_2, a, aa, "A_65", "A_14")
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    If read("material_model5") = "1" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + "gb93\d" + read("standard_part5") + "_gb93_316l")
                    ElseIf read("material_model5") = "2" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + "gb93\d" + read("standard_part5") + "_gb93_zn")
                    ElseIf read("material_model5") = "3" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + "gb93\d" + read("standard_part5") + "_gb93_dacromet")
                    End If '"E:\works\Creo\standard_part\washers\gb_t93_10"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(49).Id, 84, 84}
                    aa = {modelItems.Item(50).Id}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_3", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 64, 2, 0)
                    constraints.Clear()
                End If
                'GB_T848_10 垫圈

                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("washer5") + "\d" + read("standard_part5") + "_" + Replace(read("washer5"), ".", "_") + "_dacromet")
                End If '"E:\works\Creo\standard_part\washers\gb_t848_10"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(50).Id}
                aa = {modelItems.Item(51).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 7, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                'GB_T5782_M10×100 螺栓
                If read("material_model5") = "1" Then

                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\不锈钢\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + standard_part_name2)
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\镀锌\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_zn")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\达克罗\" + read("screw_pole5") + "\" + "m" + read("standard_part5") + "x" + read("screw_pole_length5") + "_" + Replace(read("screw_pole5"), "GB", "gb") + "_dacromet")
                End If '"E:\works\Creo\standard_part\bolt\M10\gbt5782_m10x100"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(51).Id}
                aa = {modelItems.Item(52).Id}
                idc = {16, 7}
                idb = {16, 47}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
                modelItems = listModelItem(m1, "FEATURE")
                Threading.Thread.Sleep(500)
                For z = 50 To 52
                    参考阵列(modelItems, z)
                Next
            End If
            modelItems = listModelItem(m1, "FEATURE")
            Threading.Thread.Sleep(500)
            For z = 14 To 16
                参考阵列(modelItems, z)
            Next
            For z = 41 To 46
                参考阵列(modelItems, z)
            Next
            '-----------------------------------------------------------------------------------------------------------
            '转子（双支撑）
        ElseIf read("type") = 2 Then

            asmcomp_2 = 插入零件_2(assembly, 0, read("rotor_path"))                          ' "E:\works\Creo\parts\rotor\1234"
            modelItems = listModelItem(m1, "FEATURE")
            T1 = modelItems.Item(7).Id
            m2 = activateModel(read("rotor_code"), 0)
            modelItems = listModelItem(m2, "FEATURE")
            T2 = modelItems.Item(8).Id
            T3 = modelItems.Item(7).Id
            closeWindow(m2)
            m1 = activateModel("start_asm", 0)
            a = {84, 87, 84, 84}
            aa = {T1, T2, 84, 80}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            '前端盖（双支撑）
            name = read("front_cover_path")
            asmcomp_2 = 插入零件_2(assembly, 0, Left(read("front_cover_path"), name.Length - 6) + ".asm.1")                                  '"E:\works\Creo\template\front_cover\8ly_013_356"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84, 1819}
            aa = {modelItems.Item(8).Id, 84}
            constraints = 面面约束(asmcomp_2, a, aa, 70, 4488, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "TOP", 2)
            'a = {84, 84}
            'aa = {88}
            'constraints = 轴约束(asmcomp_2, a, aa, "AA_34", "A_25")
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            '后端盖
            If read2("bracket_type") = 2 Then
                asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path"))      '"E:\works\Creo\template\rear_cover\8ly_014_356"
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1818}
                aa = {modelItems.Item(9).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 408, 1, 1, "ADTM9", "", 0)
                constraints = 轴约束(asmcomp_2, a, aa, "AA_32", "A_42")
                constraints.Clear()
                '-----------------------------------------------------------------------------------------------------------
                '后端盖与防护罩
                asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))      '"E:\works\Creo\template\mask\round_mask\1"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(10).Id}
                idc = {539, 500}
                idb = {130, 150}
                ida = {0, 0, 0}
                constraints = 轴约束(asmcomp_2, a, aa, "A_78", "A_2")
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            Else
                asmcomp_2 = 插入零件_2(assembly, 1, read("rear_cover_path")) '"E:\works\Creo\template\rear_cover\8ly_014_355"
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1818}
                aa = {modelItems.Item(9).Id}
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                a = {84, 84}
                aa = {modelItems.Item(9).Id}
                constraints = 装配约束(asmcomp_2, a, aa, 0, 408, 1, 1, "ADTM9", "", 0)
                constraints = 轴约束(asmcomp_2, a, aa, "AA_32", "A_42")
                constraints.Clear()
                '-----------------------------------------------------------------------------------------------------------
                '后端盖与防护罩
                asmcomp_2 = 插入零件_2(assembly, 1, read("round_mask_path"))    '"E:\works\Creo\template\mask\round_mask\1"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(10).Id}
                idc = {539, 500} '539, 502
                idb = {130, 150}
                ida = {0, 0}
                constraints = 轴约束(asmcomp_2, a, aa, "A_49", "A_2") '"A_49", "A_2"
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            End If
            '-----------------------------------------------------------------------------------------------------------
            '接线盒与基座

            asmcomp_2 = 插入零件_2(assembly, 0, read("junction_box_path"))
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84, 1790}
            aa = {modelItems.Item(11).Id, 123}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "RIGHT", 2)
            constraints = 面面约束(asmcomp_2, a, aa, 741, 146, 2) '侧面
            constraints = 面面约束(asmcomp_2, a, aa, 469, 82, 0) '圆弧
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            '防护罩与基座
            asmcomp_2 = 插入零件_2(assembly, 1, read("strip_mask1_path"))  ' "E:\works\Creo\template\mask\strip_mask\7"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84, 1790}
            aa = {modelItems.Item(12).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 469, 1507, 0)
            constraints = 装配约束(asmcomp_2, a, aa, 533, 0, 1, 1, "", "DTM3", 0)
            a = {84, 84}
            aa = {modelItems.Item(12).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 1456, 1, 1, "ADTM2", "", 2)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 后端盖与防护罩连接
            'GB_T93_M6 垫圈
            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(10).Id}
            aa = {modelItems.Item(13).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 142, 10, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_2", "A_1")
            constraints.Clear()

            'GB_T848_M6 垫圈

            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If ' "E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(13).Id}
            aa = {modelItems.Item(14).Id}
            idc = {24, 15}
            idb = {16, 2}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T67_M6×10 螺钉
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\不锈钢\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\镀锌\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_zn")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\达克罗\gb818\" + "m" + read("standard_part2") + "x" + read("standard_part2_screw_nail2") + "_gb818_dacromet")
            End If
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(14).Id}
            aa = {modelItems.Item(15).Id}
            idc = {16, 7}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 后端盖与基座连接
            'GB_T93_M12 垫圈
            If read2("bracket_type") = 2 Then
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
                End If '"E:\works\Creo\standard_part\washers\gb_t93_12"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(16).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 491, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_25", "A_1")
                constraints.Clear()
            Else
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
                End If '"E:\works\Creo\standard_part\washers\gb_t93_12"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(9).Id}
                aa = {modelItems.Item(16).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 491, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_25", "A_1")
                constraints.Clear()
            End If
            'GB_T848_M12 垫圈

            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If ' "E:\works\Creo\standard_part\washers\gb_t848_12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(16).Id}
            aa = {modelItems.Item(17).Id}
            idc = {24, 15}
            idb = {16, 2}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T5782_M12×50 螺栓
            If read("material_model3") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
            ElseIf read("material_model3") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
            ElseIf read("material_model3") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
            End If '"E:\works\Creo\standard_part\bolt\M12\gbt70_m12"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(17).Id}
            aa = {modelItems.Item(18).Id}
            idc = {16, 7}
            idb = {16, 47}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 基座与防护罩
            ' GB_T93_6 垫圈
            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(19).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_43", "A_1")
            a = {modelItems.Item(12).Id}
            aa = {modelItems.Item(19).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM1", 5)
            constraints.Clear()
            If read("material_model5") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
            ElseIf read("material_model5") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
            ElseIf read("material_model5") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t93_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {84, 84}
            aa = {modelItems.Item(20).Id}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_42", "A_1")
            a = {modelItems.Item(12).Id}
            aa = {modelItems.Item(20).Id}
            constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM1", 5)
            constraints.Clear()
            modelItems = listModelItem(m1, "FEATURE")
            For z = 19 To 20
                方向阵列(modelItems, z)
            Next
            setParamValue(m1, "d89", "686", "浮点型") '圆筒直径+2*防护罩厚度
            setParamValue(m1, "d96", "686", "浮点型") '圆筒直径+2*防护罩厚度

            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(20).Id}
            aa = {modelItems.Item(25).Id}
            idc = {24, 15}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(21).Id}
            aa = {modelItems.Item(26).Id}
            idc = {24, 10}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(23).Id}
            aa = {modelItems.Item(27).Id}
            idc = {24, 15}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model4") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
            ElseIf read("material_model4") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
            ElseIf read("material_model4") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
            End If '"E:\works\Creo\standard_part\washers\gb_t848_6"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(24).Id}
            aa = {modelItems.Item(28).Id}
            idc = {24, 10}
            idb = {16, 7}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'GB_T67_M6×10 螺钉
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-50-316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-镀锌")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-达克罗")
            End If ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(25).Id}
            aa = {modelItems.Item(29).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-50-316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-镀锌")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-达克罗")
            End If ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(26).Id}
            aa = {modelItems.Item(30).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-50-316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-镀锌")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-达克罗")
            End If ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(27).Id}
            aa = {modelItems.Item(31).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            If read("material_model2") = "1" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-50-316l")
            ElseIf read("material_model2") = "2" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-镀锌")
            ElseIf read("material_model2") = "3" Then
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gb818" + "\gb818m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-4_8级-达克罗")
            End If ' "E:\works\Creo\standard_part\screw\gbt67_m6x10"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(28).Id}
            aa = {modelItems.Item(32).Id}
            idc = {16, 2}
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 转子与轴承
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing1"))         '"E:\works\Creo\standard_part\bearing\gbt276_6315"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(7).Id, T3}
            aa = {modelItems.Item(33).Id}
            idc = {533, 424}
            idb = {205, 233}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\jbt7950_" + read("spring_washer1"))        '"E:\works\Creo\standard_part\washers\jbt7950_160"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(33).Id}
            aa = {modelItems.Item(34).Id}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)
            constraints.Clear()
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bearing\gbt276_" + read("bearing2"))          '"E:\works\Creo\standard_part\bearing\gbt283_320"
            modelItems = listModelItem(m1, "FEATURE")
            a = {modelItems.Item(7).Id, T3}
            aa = {modelItems.Item(35).Id}
            idc = {533, 680}
            idb = {205, 233}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            '-----------------------------------------------------------------------------------------------------------
            '螺栓组、前端盖与基座
            'GB_T93_6 垫圈
            axisName = {"A_27", "A_28", "A_29", "A_30"}
            For z = 0 To axisName.Count - 1
                If read("material_model5") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
                ElseIf read("material_model5") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
                ElseIf read("material_model5") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
                End If '"E:\works\Creo\standard_part\washers\gb_t93_20"
                modelItems = listModelItem(m1, "FEATURE")
                a = {84, 84, 1819}
                aa = {modelItems.Item(36).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 73, 10, 0)
                a = {modelItems.Item(8).Id， 84}
                aa = {modelItems.Item(36).Id}
                constraints = 轴约束(asmcomp_2, a, aa, axisName(z), "A_1")
                constraints.Clear()
            Next
            aaa = {36, 37, 38, 39}
            aaaa = {40, 41, 42, 43}
            For z = 0 To aaa.Count - 1
                If read("material_model3") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
                ElseIf read("material_model3") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
                ElseIf read("material_model3") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
                End If '"E:\works\Creo\standard_part\bolt\M20\gbt5783_m20x60"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(aaa(z)).Id}
                aa = {modelItems.Item(aaaa(z)).Id}
                idc = {24, 15}
                idb = {16, 47}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            Next
            If read2("bracket_type") = 2 Then
                If read5("type") = 1 Then
                    '-----------------------------------------------------------------------------------------------------------
                    ' 励磁机与凸起后端盖
                    asmcomp_2 = 插入零件_2(assembly, 0, read（"ex_stator_path"）) ' "E:\works\Creo\parts\exciter_stator_core_winding\1\5sb-681-001"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(9).Id}
                    aa = {modelItems.Item(44).Id, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 8405, 70, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints = 轴约束(asmcomp_2, a, aa, "A_65", "A_14")
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    If read("material_model5") = "1" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
                    ElseIf read("material_model5") = "2" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
                    ElseIf read("material_model5") = "3" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
                    End If ' "E:\works\Creo\standard_part\washers\gb_t93_10"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(44).Id, 84, 84}
                    aa = {modelItems.Item(45).Id}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 65, 10, 0)
                    constraints.Clear()
                Else
                    asmcomp_2 = 插入零件_2(assembly, 0, read（"ex_stator_path"）)    '"E:\works\Creo\parts\exciter_stator_core_winding\2\5sb-681-002"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(9).Id}
                    aa = {modelItems.Item(44).Id, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 8405, 69, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints = 轴约束(asmcomp_2, a, aa, "A_65", "A_14")
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    If read("material_model5") = "1" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-200hv-316l")
                    ElseIf read("material_model5") = "2" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-镀锌")
                    ElseIf read("material_model5") = "3" Then
                        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part5") + "-300hv-达克罗")
                    End If ' "E:\works\Creo\standard_part\washers\gb_t93_10"
                    modelItems = listModelItem(m1, "FEATURE")
                    a = {modelItems.Item(44).Id, 84, 84}
                    aa = {modelItems.Item(45).Id}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_3", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 64, 10, 0)
                    constraints.Clear()
                End If
                'GB_T848_10 垫圈

                If read("material_model4") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
                ElseIf read("material_model4") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
                ElseIf read("material_model4") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
                End If '"E:\works\Creo\standard_part\washers\gb_t848_10"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(45).Id}
                aa = {modelItems.Item(46).Id}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                'GB_T5782_M10×100 螺栓
                If read("material_model3") = "1" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
                ElseIf read("material_model3") = "2" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
                ElseIf read("material_model3") = "3" Then
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
                End If '"E:\works\Creo\standard_part\bolt\M10\gbt5782_m10x100"
                modelItems = listModelItem(m1, "FEATURE")
                a = {modelItems.Item(46).Id}
                aa = {modelItems.Item(47).Id}
                idc = {16, 7}
                idb = {16, 47}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
                modelItems = listModelItem(m1, "FEATURE")
                For z = 45 To 47
                    参考阵列(modelItems, z)
                Next
            End If
            modelItems = listModelItem(m1, "FEATURE")
            For z = 13 To 18
                参考阵列(modelItems, z)
            Next
        End If
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)
        添加bom新内容(ItemString, m1)
        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If
        'Dim inspect As String
        'inspect = 干涉检查(m1)
        '创建文本(imgPath, inspect)

        ExportJpg(imgPath, imageName)
        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图2(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图2(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图2(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图2(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图2(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        view2Ds.Item(1).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        If read2("bracket_type") = 1 Then
            If read("type") = 1 Then '单支撑 有支架
                刨视图("view_1", "XSEC0001", "halfPlane", 43 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (37 + StringNumber / 4).ToString + "`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (39 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (48 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (55 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(8)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 40 + StringNumber / 4) '双支撑 有支架
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node34" + (34 + ItemString.Length / 4).ToString + "`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                            "~ Activate `main_dlg_cur` `page_Annotate_control_btn` 1;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node36" + (36 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node45" + (45 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node52" + (52 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(8)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            End If
        Else
            If read("type") = 1 Then '单支撑 无支架
                刨视图("view_1", "XSEC0001", "halfPlane", 47 + StringNumber / 4)
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (41 + StringNumber / 4).ToString + "`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                            "~ Activate `main_dlg_cur` `page_Annotate_control_btn` 1;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (43 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (50 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (57 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")

                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(8)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
                '选中球标(m2, 8, 9)
                '选中球标(m2, 9, 8)
                '选中球标(m2, 10, 8)
                '选中球标(m2, 11, 8)
            Else
                刨视图("view_1", "XSEC0001", "halfPlane", 44 + StringNumber / 4) '双支撑 无支架
                加入球标()
                AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node38" + (38 + StringNumber / 4).ToString + "`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                            "~ Activate `main_dlg_cur` `page_Annotate_control_btn` 1;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                            "~ Activate `show_model_annotations` `psh_ok`;")

                AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node40" + (40 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node47" + (47 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node54" + (54 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")

                selBuffer.Clear()
                modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
                note_Item_1 = modelItems.Item(8)
                note_Item_2 = modelItems.Item(9)
                note_Item_3 = modelItems.Item(10)
                note_Item_4 = modelItems.Item(11)
                compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
                compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
                compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
                compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
                ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
                selBuffer.AddSelection(compSelect_1)
                selBuffer.AddSelection(compSelect_2)
                selBuffer.AddSelection(compSelect_3)
                selBuffer.AddSelection(compSelect_4)
                AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
                AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                                    "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                    "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")
            End If
        End If

        移动视图("general", "view_1", 312, 360)
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 235, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        smodel = m2.Descr
        smodel.Path = imgPath$
        m2.Backup(smodel)
        '零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), imgPath$ + "\" + read("stator_code") + ".drw.1")
        '零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), imgPath$ + "\" + read("rotor_code") + ".drw.1")

        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", imgPath$ + "\" + read("junction_box_name") + ".drw.1")
        '零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_path") + "_MX.xlsx", imgPath$ + "\" + read("junction_box_name") + "_MX.xlsx")
        '零件工程图转移(Replace(read("junction_box_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        'If read("ex_stator_path") <> "0" Then
        '    零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), imgPath$ + "\" + read("ex_stator_code") + ".drw.1")
        '    零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        'End If
        'If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), imgPath$ + "\" + read("front_cover_code") + ".drw.1")
        'ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), imgPath$ + "\" + read("front_cover_code") + ".drw.1")
        'End If
        'If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), imgPath$ + "\" + read("rear_cover_ccode") + ".drw.1")
        'ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
        '    零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), imgPath$ + "\" + read("rear_cover_code") + ".drw.1")
        'End If
        '零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), imgPath$ + "\" + read("round_mask_code") + ".drw.1")
        'If read("strip_mask1_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask1_code") + ".drw.1")
        'End If
        'If read("strip_mask2_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask2_code") + ".drw.1")
        'End If
        'If read("strip_mask_path") <> "0" Then
        '    零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), imgPath$ + "\" + read("strip_mask_code") + ".drw.1")
        'End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)
        tms = 图样目录表(imgPath$， read("code"))
        tjys = 通借用表(imgPath$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(imgPath$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(imgPath$， read("code"))
        End If
        导入表(imgPath$, read("CODE"), read("MARK"), read("CODE"))

        If read("ex_stator_path") <> "0" Then
            If Dir(imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(imgPath$ + "\" + read("CODE") + "_MX" + ".xlsx", imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("ex_stator_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        Else
            明细表合并(imgPath$ + "\" + read("CODE") + "_MX" + ".xlsx", imgPath$ + "\" + read("stator_code") + "_MX" + ".xlsx", imgPath$ + "\" + read("rotor_code") + "_MX" + ".xlsx") '+ read("junction_box_code") + "_MX" + ".xlsx"
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            装配体图纸转移(imgPath$， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If

        endApp()
        If read("isopen") = "1" Then
            openModel("drw", imgPath + "\" + read("CODE"))
        End If
        read.Close()
        mysqlcom.Dispose()
        mysqlcon.Close()
        mysqlcon.Dispose()
        Return boms


    End Function
    Public Sub creo_generator_assembly_400(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "stator_assembly", read("stator_id"))
        mysql_new2(localhost$, "creo", "main_frame", read1("main_frame_id"))
        mysql_new3(localhost$, "creo", "ex_sta_co_win_asm", read1("exciter_stator_core_winding_id"))
        mysql_new4(localhost$, "creo", "ex_sta_co_asm", read3("exciter_stator_core_id"))
        mysql_new5(localhost$, "creo", "exciter_stator", read4("exciter_stator_id"))
        Dim a, aa, aaa, aaaa, axisName, ida, idb, idc As Double()
        m1 = openModel("asm", "E:\works\creo\template\start_asm")
        m1 = activateModel("start_asm", 0)
        partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        '-----------------------------------------------------------------------------------------------------------
        '定子
        If read2("bracket_type") = 1 Then
            componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
        Else
            If read5("type") = 1 Then
                componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
            Else
                componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
            End If
        End If
        '-----------------------------------------------------------------------------------------------------------
        '转子
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))
        If read("type") = 1 Then '单支撑               "E:\works\Creo\parts\rotor\single\rotor"
            a = {84, 87, 84, 84}
            aa = {87, 80, 84, 80}
        ElseIf read("type") = 2 Then '双支撑            "E:\works\Creo\parts\rotor\double\123"
            a = {84, 87, 84, 84}
            aa = {87, 84, 84, 80}
        End If
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '前端盖
        asmcomp_2 = 插入零件_1(assembly, 1, read("front_cover_path"))
        a = {84, 84, 83}
        aa = {88}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 73, 417, 0)
        a = {84, 84}
        aa = {88}
        If read("type") = 1 Then '单支撑               "E:\works\Creo\template\front_cover\8ly_013_400"
            constraints = 轴约束(asmcomp_2, a, aa, "AA_24", "A_28")
        ElseIf read("type") = 2 Then '双支撑           "E:\works\Creo\template\front_cover\8ly_013_401"
            constraints = 轴约束(asmcomp_2, a, aa, "AA_24", "A_16")
        End If
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '后端盖
        If read5("type") = 0 Then
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))     '"E:\works\Creo\template\rear_cover\8ly_014_401"
        Else
            asmcomp_2 = 插入零件_1(assembly, 1, read("rear_cover_path"))     '"E:\works\Creo\template\rear_cover\8ly_014_400"
        End If
        a = {84, 84}
        aa = {89}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_28", "A_51")
        a = {84, 84, 90}
        aa = {89}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 70, 118, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '后端盖与防护罩
        asmcomp_2 = 插入零件_1(assembly, 1, read("round_mask_path"))   '  "E:\works\Creo\template\mask\round_mask\400"
        a = {89}
        aa = {90}
        constraints = 面面约束(asmcomp_2, a, aa, 240, 130, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 轴约束(asmcomp_2, a, aa, "A_36", "A_2")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '前端盖与防护罩
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
        a = {88}
        aa = {91}
        If read("type") = 1 Then '单支撑     401       "E:\works\Creo\template\mask\strip_mask\401"
            idc = {90, 3882, 4175}
            idb = {1243, 1426, 1432}
        ElseIf read("type") = 2 Then '双支撑     411       "E:\works\Creo\template\mask\strip_mask\411"
            idc = {90, 9504, 9775}
            idb = {1243, 1440, 1448}
        End If
        ida = {0, 0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask_path"))
        a = {88}
        aa = {92}
        If read("type") = 1 Then '单支撑     401          "E:\works\Creo\template\mask\strip_mask\401"
            idc = {102, 4681, 4436}
            idb = {1243, 1426, 1432}
        ElseIf read("type") = 2 Then '双支撑     411         "E:\works\Creo\template\mask\strip_mask\411"
            idc = {102, 10211, 10448}
            idb = {1243, 1440, 1448}
        End If
        ida = {0, 0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask1_path"))
        a = {88}
        aa = {93}
        constraints = 面面约束(asmcomp_2, a, aa, 96, 1454, 0)
        If read("type") = 1 Then '单支撑     402        "E:\works\Creo\template\mask\strip_mask\402"
            constraints = 装配约束(asmcomp_2, a, aa, 0, 1458, 1, 1, "DTM3", "", 2)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "A_56", "DTM1", 9)
        ElseIf read("type") = 2 Then '双支撑     412     "E:\works\Creo\template\mask\strip_mask\412"
            constraints = 装配约束(asmcomp_2, a, aa, 0, 1458, 1, 1, "DTM5", "", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "A_58", "DTM1", 9)
        End If
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '接线盒与基座
        asmcomp_2 = 插入零件_1(assembly, 0, "E: \works\creo\box_assembly\400\3sb-676-001")  '"E:\works\Creo\template\box\3sb-676-001"
        MkDir("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString)
        box_改名("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString, "E:\works\creo\box_assembly\400\3sb-676-001", read("junction_box_name"))
        m1 = activateModel("start_asm", 0)
        modelItems = listModelItem(m1, "FEATURE")
        a = {84, 84, 1546}
        aa = {94, 89}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "TOP", "FRONT", 0)
        a = {84, 84, 1546}
        aa = {94, 81}
        idc = {469, 475}
        idb = {325, 3450}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '防护罩与基座
        asmcomp_2 = 插入零件_1(assembly, 1, read("strip_mask2_path"))   '"E:\works\Creo\template\mask\strip_mask\403"
        a = {84, 84, 1546}
        aa = {95}
        constraints = 面面约束(asmcomp_2, a, aa, 469, 1507, 2)
        a = {84, 84}
        aa = {95}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "AA_48", "DTM1", 9)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 1456, 1, 1, "ADTM2", "", 2)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '螺栓组、前端盖与基座
        'GB_T93_14 垫圈
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part1"))
        a = {84, 84}
        aa = {96}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_20", "A_1")
        a = {84, 84, 83}
        aa = {96}
        constraints = 面面约束(asmcomp_2, a, aa, 70, 10, 0)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'GB_T848_14 垫圈
        asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part1"))
        a = {96}
        aa = {105}
        idc = {24, 15}
        idb = {24, 15}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'GB_T5782_M14×55 螺栓
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bolt\M14\gbt5782_m" + read("standard_part1"))   '"E:\works\Creo\standard_part\bolt\M14\gbt5782_m14x55"
        a = {105}
        aa = {114}
        idc = {24, 10}
        idb = {16, 47}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        '----------------------------------------------------------------------------------------------------------- 
        ' 前端盖、防护罩与螺钉组
        'GB_T93_5 垫圈
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part2"))    ' "E:\works\Creo\standard_part\washers\gb_t93_5"
        a = {88}
        aa = {123}
        If read("type") = 1 Then '单支撑
            constraints = 轴约束(asmcomp_2, a, aa, "A_32", "A_1")
        ElseIf read("type") = 2 Then '双支撑
            constraints = 轴约束(asmcomp_2, a, aa, "A_45", "A_1")
        End If
        a = {91}
        aa = {123}
        constraints = 面面约束(asmcomp_2, a, aa, 1137, 10, 0)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part2"))     '   "E:\works\Creo\standard_part\washers\gb_t93_5"
        a = {88}
        aa = {130}
        If read("type") = 1 Then '单支撑
            constraints = 轴约束(asmcomp_2, a, aa, "A_38", "A_1")
        ElseIf read("type") = 2 Then '双支撑
            constraints = 轴约束(asmcomp_2, a, aa, "A_51", "A_1")
        End If
        a = {92}
        aa = {130}
        constraints = 面面约束(asmcomp_2, a, aa, 1137, 10, 0)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'GB_T848_6 垫圈
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part2"))            '"E:\works\Creo\standard_part\washers\gb_t848_5"
        a = {123}
        aa = {137}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 10, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part2"))                 '"E:\works\Creo\standard_part\washers\gb_t848_5"
        a = {130}
        aa = {144}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 10, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'M5×12 螺钉
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part2"))                      '"E:\works\Creo\standard_part\screw\gbt67_m5x12"
        'm2 = activateModel("gbt67_m" + read("standard_part2"), 1)
        'setParamValue(m2, "d42", read("screw"), "浮点型")
        'm2.Rename("gbt67_m" + read("standard_part2") + "x" + read("screw"), True)
        'Threading.Thread.Sleep(2000)
        'closeWindow(m2)
        'm1 = activateModel("transition", 0)
        a = {137}
        aa = {151}
        idc = {24, 15}
        idb = {16, 18}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part2"))                    '"E:\works\Creo\standard_part\screw\gbt67_m5x12"
        a = {144}
        aa = {158}
        idc = {24, 15}
        idb = {16, 18}
        ida = {0, 0}
        constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'GB_T93_5 垫圈
        If read("type") = 1 Then '单支撑
            aaa = {6084, 5347, 5091, 5899}
        ElseIf read("type") = 2 Then '双支撑
            aaa = {10907, 10731}
        End If
        For z = 0 To aaa.Count - 1
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part2"))                ' "E:\works\Creo\standard_part\washers\gb_t93_5"
            a = {88}
            aa = {165}
            constraints = 面面约束(asmcomp_2, a, aa, aaa(z), 24, 0)
            a = {93}
            aa = {165}
            If read("type") = 1 Then '单支撑
                If z <= 1 Then
                    constraints = 面面约束(asmcomp_2, a, aa, 1507, 15, 7)
                Else
                    constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
                End If
            ElseIf read("type") = 2 Then '双支撑
                If z = 0 Then
                    constraints = 面面约束(asmcomp_2, a, aa, 1507, 15, 7)
                Else
                    constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
                End If
            End If
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            Pattern(17)
        Next
        'GB_T848_5 垫圈
        If read("type") = 1 Then '单支撑
            aaa = {165, 168, 171, 174}
            aaaa = {177, 180, 183, 186}
        ElseIf read("type") = 2 Then '双支撑
            aaa = {165, 168}
            aaaa = {171, 174}
        End If
        For z = 0 To aaa.Count - 1
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part2"))                    '"E:\works\Creo\standard_part\washers\gb_t848_5"
            a = {aaa(z)}
            aa = {aaaa(z)}
            If read("type") = 1 Then '单支撑
                If z <= 1 Then
                    constraints = 面面约束(asmcomp_2, a, aa, 10, 10, 0)
                Else
                    constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                End If
            ElseIf read("type") = 2 Then '双支撑
                If z = 0 Then
                    constraints = 面面约束(asmcomp_2, a, aa, 10, 10, 0)
                Else
                    constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                End If
            End If
        Next
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        Threading.Thread.Sleep(1000)
        Pattern(17)
        'M5×12 螺钉
        If read("type") = 1 Then '单支撑
            aaa = {177, 180, 183, 186}
            aaaa = {189, 192, 195, 198}
        ElseIf read("type") = 2 Then '双支撑
            aaa = {171, 174}
            aaaa = {177, 180}
        End If
        For z = 0 To aaa.Count - 1
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\screw\gbt67_m" + read("standard_part2"))      '"E:\works\Creo\standard_part\screw\gbt67_m5x12"
            a = {aaa(z)}
            aa = {aaaa(z)}
            If read("type") = 1 Then '单支撑
                If z <= 1 Then
                    idc = {24, 15}
                Else
                    idc = {24, 10}
                End If
            ElseIf read("type") = 2 Then '双支撑
                If z = 0 Then
                    idc = {24, 15}
                Else
                    idc = {24, 10}
                End If
            End If
            idb = {16, 18}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            Pattern(17)
        Next
        '-----------------------------------------------------------------------------------------------------------
        ' 基座与防护罩
        ' GB_T93_5 垫圈
        If read("type") = 1 Then    '单支撑
            axisName = {"AA_43", "AA_46"}
            For z = 0 To axisName.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb_t93_" + read("standard_part3"))                   '"E:\works\creo\standard_part\washers\gb_t93_5"
                a = {84, 84}
                aa = {201}
                constraints = 轴约束(asmcomp_2, a, aa, axisName(z), "A_1")
                a = {95}
                aa = {201}
                constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
                constraints.Clear()
                Threading.Thread.Sleep(1000)
                Pattern(17)
            Next
            'GB_T848_5 垫圈
            aaa = {201, 205}
            aaaa = {209, 213}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part3"))             '"E:\works\Creo\standard_part\washers\gb_t848_5"
                a = {aaa(z)}
                aa = {aaaa(z)}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                Threading.Thread.Sleep(1000)
                Pattern(17)
            Next
            'M5×12 螺钉
            aaa = {209, 213}
            aaaa = {217, 221}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part3"))                   ' "E:\works\Creo\standard_part\screw\gbt67_m5x12"
                a = {aaa(z)}
                aa = {aaaa(z)}
                idc = {24, 10}
                idb = {16, 18}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
                Threading.Thread.Sleep(1000)
                Pattern(17)
            Next
        ElseIf read("type") = 2 Then  '双支撑
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb_t93_" + read("standard_part3"))         ' "E:\works\Creo\standard_part\washers\gb_t93_5"
            a = {84, 84}
            aa = {183}
            constraints = 轴约束(asmcomp_2, a, aa, "AA_43", "A_1")
            a = {95}
            aa = {183}
            constraints = 面面约束(asmcomp_2, a, aa, 1507, 10, 7)
            'constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "DTM1", 5)
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node17`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
            AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Open `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Close `main_dlg_cur` `maindashInst0.ui_pat_type`; ~ Select `main_dlg_cur` `maindashInst0.ui_pat_type` 1 `ui_pat_type_dir`;")
            AC.Session.RunMacro("8 ~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node7`; ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER`  `main_dlg_w1:PHTLeft.AssyTree:<NULL>`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `maindashInst0.ui_pat_dir_1_flip`;")
            AC.Session.RunMacro("8 ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
            setParamValue(m1, "d86", "797.2", "浮点型") '圆筒直径+2*防护罩厚度 !!!!!!!!!!!!!!!!!!!!!!!
            Threading.Thread.Sleep(1000)
            Pattern(33)
            'GB_T848_5 垫圈
            aaa = {183, 188, 191, 185, 189, 192}
            aaaa = {193, 194, 195, 196, 197, 198}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part3"))                '"E:\works\Creo\standard_part\washers\gb_t848_5"
                a = {aaa(z)}
                aa = {aaaa(z)}
                If z <= 2 Then
                    constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                Else
                    constraints = 面面约束(asmcomp_2, a, aa, 10, 10, 0)
                End If
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
            Next
            'M5×12 螺钉
            aaa = {193, 194, 195, 196, 197, 198}
            aaaa = {199, 200, 201, 202, 203, 204}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part3"))          ' "E:\works\Creo\standard_part\screw\gbt67_m5x12"
                a = {aaa(z)}
                aa = {aaaa(z)}
                If z <= 2 Then
                    idc = {24, 10}
                Else
                    idc = {24, 15}
                End If
                idb = {16, 18}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            Next
        End If
        '-----------------------------------------------------------------------------------------------------------
        ' 后端盖与防护罩连接
        'GB_T93_M5 垫圈
        If read("type") = 1 Then    '单支撑
            axisName = {"A_2", "A_17"}
            For z = 0 To axisName.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part4"))                           '"E:\works\Creo\standard_part\washers\gb_t93_5"
                a = {90}
                aa = {225}
                constraints = 面面约束(asmcomp_2, a, aa, 142, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, axisName(z), "A_1")
                constraints.Clear()
                Threading.Thread.Sleep(3000)
                Pattern(17)
            Next
            'GB_T848_M5 垫圈
            aaa = {225, 234}
            aaaa = {242, 251}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part4"))            '"E:\works\Creo\standard_part\washers\gb_t848_5"
                a = {aaa(z)}
                aa = {aaaa(z)}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                Threading.Thread.Sleep(3000)
                Pattern(17)
            Next
            'M5×12 螺钉
            aaa = {242, 251}
            aaaa = {259, 268}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part4"))         '"E:\works\Creo\standard_part\screw\gbt67_m5x12"
                a = {aaa(z)}
                aa = {aaaa(z)}
                idc = {24, 10}
                idb = {16, 18}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
                Threading.Thread.Sleep(1000)
                Pattern(17)
            Next
        ElseIf read("type") = 2 Then  '双支撑              
            'GB_T93_M5 垫圈
            axisName = {"A_2", "A_17"}
            For z = 0 To axisName.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part4"))                ' "E:\works\Creo\standard_part\washers\gb_t93_5"
                a = {90}
                aa = {205}
                constraints = 面面约束(asmcomp_2, a, aa, 142, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, axisName(z), "A_1")
                constraints.Clear()
                Threading.Thread.Sleep(3000)
                Pattern(45)
            Next
            'GB_T848_M5 垫圈
            aaa = {205, 214}
            aaaa = {222, 231}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part4"))                    '"E:\works\Creo\standard_part\washers\gb_t848_5"
                a = {aaa(z)}
                aa = {aaaa(z)}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 15, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                Threading.Thread.Sleep(3000)
                Pattern(45)
            Next
            'M5×12 螺钉
            aaa = {222, 231}
            aaaa = {239, 248}
            For z = 0 To aaa.Count - 1
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\gbt67_m" + read("standard_part4"))                        '"E:\works\Creo\standard_part\screw\gbt67_m5x12"
                a = {aaa(z)}
                aa = {aaaa(z)}
                idc = {24, 10}
                idb = {16, 18}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
                Threading.Thread.Sleep(1000)
                Pattern(45)
            Next
        End If
        '-----------------------------------------------------------------------------------------------------------
        ' 后端盖与基座连接
        'GB_T93_M14 垫圈
        If read("type") = 1 Then    '单支撑
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part5"))                    '"E:\works\Creo\standard_part\washers\gb_t93_14"
            a = {89}
            aa = {276}
            constraints = 面面约束(asmcomp_2, a, aa, 321, 10, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_48", "A_1")
            constraints.Clear()
            Threading.Thread.Sleep(3000)
            Pattern(17)
            'GB_T848_M12 垫圈
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part5"))                              '"E:\works\Creo\standard_part\washers\gb_t848_14"
            a = {276}
            aa = {285}
            idc = {24, 15}
            idb = {24, 10}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            Threading.Thread.Sleep(3000)
            Pattern(17)
            'GB_T5782_M14×50 螺栓
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bolt\M14\gbt5782_m" + read("standard_part5"))                                   '"E:\works\Creo\standard_part\bolt\M14\gbt5782_m14x50"
            a = {285}
            aa = {294}
            idc = {24, 15}
            idb = {16, 47}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            Pattern(17)
        ElseIf read("type") = 2 Then  '双支撑       
            ' 后端盖与基座连接
            'GB_T93_M14 垫圈
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part5"))                                        '"E:\works\Creo\standard_part\washers\gb_t93_14"
            a = {89}
            aa = {256}
            constraints = 面面约束(asmcomp_2, a, aa, 321, 10, 0)
            constraints = 轴约束(asmcomp_2, a, aa, "A_48", "A_1")
            constraints.Clear()
            Threading.Thread.Sleep(3000)
            Pattern(45)
            'GB_T848_M12 垫圈
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part5"))                                       '"E:\works\Creo\standard_part\washers\gb_t848_14"
            a = {256}
            aa = {265}
            idc = {24, 15}
            idb = {24, 10}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            Threading.Thread.Sleep(3000)
            Pattern(45)
            'GB_T5782_M14×50 螺栓
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bolt\M14\gbt5782_m" + read("standard_part5"))                       '"E:\works\Creo\standard_part\bolt\M14\gbt5782_m14x50"
            a = {265}
            aa = {274}
            idc = {24, 15}
            idb = {16, 47}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            Threading.Thread.Sleep(1000)
            Pattern(45)
        End If
        '-----------------------------------------------------------------------------------------------------------
        ' 转子与轴承
        If read("type") = 1 Then  '单支撑
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bearing\gbt276_" + read("bearing1"))                                 '"E:\works\Creo\standard_part\bearing\gbt276_6319"
            a = {87, 83}
            aa = {303}
            idc = {346, 424}
            idb = {205, 233}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\jbt7950_" + read("spring_washer1"))                       ' "E:\works\Creo\standard_part\washers\jbt7950_200"
            a = {303}
            aa = {304}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 励磁机定子、后端盖与M10X100螺栓
            If read2("bracket_type") = 1 Then
                If read5("type") = 1 Then
                    asmcomp_2 = 插入零件_2(assembly, 0, "E:\works\Creo\parts\exciter_stator_core_winding\1\5sb-681-001")
                    a = {89}
                    aa = {305, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 4300, 70, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part6"))   ' "E:\works\Creo\standard_part\washers\gb_t93_10"
                    a = {305, 84, 84}
                    aa = {306}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 65, 10, 0)
                    constraints.Clear()
                Else
                    asmcomp_2 = 插入零件_2(assembly, 0, "E:\works\Creo\parts\exciter_stator_core_winding\2\5sb-681-002")
                    a = {89}
                    aa = {305, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 4300, 69, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part6"))              '"E:\works\Creo\standard_part\washers\gb_t93_10"
                    a = {305, 84, 84}
                    aa = {306}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_3", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 64, 10, 0)
                    constraints.Clear()
                End If
                'GB_T848_10 垫圈
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part6"))                       '"E:\works\Creo\standard_part\washers\gb_t848_10"
                a = {306}
                aa = {307}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                'GB_T5782_M10×100 螺栓
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bolt\M10\gbt5782_m" + read("standard_part6"))                        '"E:\works\Creo\standard_part\bolt\M10\gbt5782_m10x100"
                a = {307}
                aa = {308}
                idc = {26, 15}
                idb = {34, 47}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            End If
        ElseIf read("type") = 2 Then  '双支撑   
            ' 转子与轴承
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bearing\gbt276_" + read("bearing1"))                                 '"E:\works\Creo\standard_part\bearing\gbt276_6319"
            a = {87, 83}
            aa = {283}
            idc = {346, 424}
            idb = {205, 233}
            ida = {0, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
            ' setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\jbt7950_" + read("spring_washer1"))                       ' "E:\works\Creo\standard_part\washers\jbt7950_200"
            a = {283}
            aa = {284}
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "SIDE", "RIGHT", 0)
            constraints = 装配约束(asmcomp_2, a, aa, 185, 0, 1, 1, "", "TOP", 0)

            constraints.Clear()
            asmcomp_2 = 插入零件_2(assembly, 0, "E: \works\Creo\standard_part\bearing\gbt283_" + read("bearing2"))                    '"E:\works\Creo\standard_part\bearing\gbt283_320"
            a = {87, 83}
            aa = {285, 10}
            idc = {178, 170}
            idb = {57, 41}
            ida = {2, 0}
            constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
            constraints.Clear()
            '-----------------------------------------------------------------------------------------------------------
            ' 励磁机定子、后端盖与M10X100螺栓
            If read2("bracket_type") = 1 Then
                If read5("type") = 1 Then
                    asmcomp_2 = 插入零件_2(assembly, 0, "E:\works\Creo\parts\exciter_stator_core_winding\1\5sb-681-001")
                    a = {89}
                    aa = {286, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 4300, 70, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part6"))   ' "E:\works\Creo\standard_part\washers\gb_t93_10"
                    a = {286, 84, 84}
                    aa = {287}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_14", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 65, 10, 0)
                    constraints.Clear()
                Else
                    asmcomp_2 = 插入零件_2(assembly, 0, "E:\works\Creo\parts\exciter_stator_core_winding\2\5sb-681-002")
                    a = {89}
                    aa = {286, 84, 84}
                    constraints = 面面约束(asmcomp_2, a, aa, 4300, 69, 0)
                    constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 4, "A_1", "A_1", 2)
                    constraints.Clear()
                    'gb_t93_10 垫圈
                    asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t93_" + read("standard_part6"))   ' "E:\works\Creo\standard_part\washers\gb_t93_10"
                    a = {286, 84, 84}
                    aa = {287}
                    constraints = 轴约束(asmcomp_2, a, aa, "A_3", "A_1")
                    constraints = 面面约束(asmcomp_2, a, aa, 64, 10, 0)
                    constraints.Clear()
                End If
                'GB_T848_10 垫圈
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t848_" + read("standard_part6"))                       '"E:\works\Creo\standard_part\washers\gb_t848_10"
                a = {287}
                aa = {288}
                constraints = 面面约束(asmcomp_2, a, aa, 15, 10, 0)
                constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
                constraints.Clear()
                'GB_T5782_M10×100 螺栓
                asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bolt\M10\gbt5782_m" + read("standard_part6"))                        '"E:\works\Creo\standard_part\bolt\M10\gbt5782_m10x100"
                a = {288}
                aa = {289}
                idc = {26, 15}
                idb = {34, 47}
                ida = {0, 0}
                constraints = manyID(asmcomp_2, a, aa, idc, idb, ida)
                constraints.Clear()
            End If
        End If

        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)

        添加bom新内容(ItemString, m1)



        m1.Rename("1sb_214_400", True)
        smodel = m1.Descr
        If read("type") = 1 Then  '单支撑
            smodel.Path = "E:\works\Creo\parts\generator_assembly\400\single"
        ElseIf read("type") = 2 Then  '双支撑   
            smodel.Path = "E:\works\Creo\parts\generator_assembly\400\double"
        End If
        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        ExportJpg(path, imageName)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.2, "Z", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 388, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        m1.Rename(read("CODE"), True)
        smodel = m1.Descr
        smodel.Path = path
        m1.Backup(smodel)

        零件工程图转移(Replace(read("stator_path"), "asm.", "drw."), path + "\" + read("stator_code") + ".drw.1")
        零件工程图转移(Replace(read("rotor_path"), "asm.", "drw."), path + "\" + read("rotor_code") + ".drw.1")
        零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + ".drw.1", path + "\" + read("junction_box_name") + ".drw.1")
        零件工程图转移("E:\nginx\html\static\box_assembly\new\" + read("ID").ToString + "\" + read("junction_box_name") + "_MX.xlsx", path + "\" + read("junction_box_name") + "_MX.xlsx")
        If read("ex_stator_path") <> "0" Then
            零件工程图转移(Replace(read("ex_stator_path"), "asm.", "drw."), path + "\" + read("ex_stator_code") + ".drw.1")
            零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        End If
        If Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "asm.1" Then
            零件工程图转移(Replace(read("front_cover_path"), "asm.", "drw."), path + "\" + read("front_cover_code") + ".drw.1")
        ElseIf Left(read("front_cover_path"), Len(read("front_cover_path")) - 5) = "prt.1" Then
            零件工程图转移(Replace(read("front_cover_path"), "prt", "drw"), path + "\" + read("front_cover_code") + ".drw.1")
        End If
        If Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "asm.1" Then
            零件工程图转移(Replace(read("rear_cover_path"), "asm.", "drw."), path + "\" + read("rear_cover_ccode") + ".drw.1")
        ElseIf Left(read("rear_cover_path"), Len(read("rear_cover_path")) - 5) = "prt.1" Then
            零件工程图转移(Replace(read("rear_cover_path"), "prt", "drw"), path + "\" + read("rear_cover_code") + ".drw.1")
        End If
        零件工程图转移(Replace(read("round_mask_path"), "prt", "drw"), path + "\" + read("round_mask_code") + ".drw.1")
        If read("strip_mask1_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask1_path"), "prt", "drw"), path + "\" + read("strip_mask1_code") + ".drw.1")
        End If
        If read("strip_mask2_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask2_path"), "prt", "drw"), path + "\" + read("strip_mask2_code") + ".drw.1")
        End If
        If read("strip_mask_path") <> "0" Then
            零件工程图转移(Replace(read("strip_mask_path"), "prt", "drw"), path + "\" + read("strip_mask_code") + ".drw.1")
        End If
        零件工程图转移(Replace(read("stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("stator_code") + "_MX" + ".xlsx")
        零件工程图转移(Replace(read("rotor_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("rotor_code") + "_MX" + ".xlsx")
        mxs = 明细表(m2)
        tms = 图样目录表(path， read("code"))
        tjys = 通借用表(path， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path， read("code"))
        End If
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        If read("ex_stator_path") <> "0" Then
            If Dir(path + "\" + read("ex_stator_code") + "_MX" + ".xlsx") = "" Then
                零件工程图转移(Replace(read("ex_stator_path"), ".asm.1", "_MX.xlsx"), path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
            End If
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx", path + "\" + read("junction_box_name") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx")
        Else
            明细表合并(path + "\" + read("CODE") + "_MX" + ".xlsx", path + "\" + read("stator_code") + "_MX" + ".xlsx", path + "\" + read("rotor_code") + "_MX" + ".xlsx", path + "\" + read("ex_stator_code") + "_MX" + ".xlsx", path + "\" + read("junction_box_name") + "_MX" + ".xlsx")
        End If
        If read("filepath") <> "" Then
            生成文件夹(read("filepath"), read("CODE"))
            Threading.Thread.Sleep(1500)
            装配体图纸转移(path， read("filepath"), read("CODE"))
            装配体图纸转移("E:\works\creo\tp"， read("filepath"), read("CODE"))
        End If
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Sub creo_generator_assembly_600(localhost$, tabledase$, ID#, path$, imageName$)
        mysql_new(localhost$, tabledase$, ID#)
        mysql_new1(localhost$, "creo", "front_cover", read("front_cover_id"))
        mysql_new2(localhost$, "creo", "rear_cover", read("rear_cover_id"))
        mysql_new3(localhost$, "creo", "rotor_assembly", read("rotor_id"))
        deleteFileChangeModel_new("asm", "E:\works\creo\template\start_asm", "start_asm".Length)
        m1 = activateModel("transition", 0)
        Threading.Thread.Sleep(1000)
        selBuffer = AC.Session.CurrentSelectionBuffer
        selBuffer.Clear()
        ' partValue(m1)
        assembly = CType(m1, IpfcAssembly) '类型转换父类转换为子类
        Dim c, d As Double
        '----------------------------------------------------------------
        '定子
        componentModel_1 = 固定零件(assembly, 0, read("stator_path"))
        '转子
        asmcomp_2 = 插入零件_1(assembly, 0, read("rotor_path"))
        a = {84, 87, 84, 84}
        aa = {87, 80, 84, 80}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "FRONT", "FRONT", 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_2")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '前端盖（单支撑）
        asmcomp_2 = 插入零件_1(assembly, 0, read("front_cover_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        a = {84, 84}
        aa = {c, 84}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 64, 454, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '后端盖
        name = read("rear_cover_path")
        asmcomp_2 = 插入零件_1(assembly, 0, Left(read("rear_cover_path"), name.Length - 6) + ".asm.1")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        a = {84, 84}
        aa = {c, 84}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 67, 240, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '连接环
        asmcomp_2 = 插入零件_2(assembly, 1, read("adapter_ring_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(10).Id
        a = {c, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 67, 64, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        '密封垫与前端盖
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb848_d1")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(11).Id
        m2 = activateModel(read1("bushing_code"), 1)
        DimensValue1 = GetParamValue(m2, "d7") '轴套内径
        DimensValue2 = GetParamValue(m2, "d14") '盖板与轴套装配的尺寸 
        DimensValue3 = GetParamValue(m2, "d13") '密封垫与盖板部分厚度之和
        DimensValue4 = 2 * GetParamValue(m2, "d19") '孔定位直径 
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m2 = activate("gb848_d1", 1)
        addParam(m2, "REMARK", "", "字符串")
        m2.CommonName = "密封垫"
        setParamValue(m2, "d0", DimensValue1, "浮点型")
        setParamValue(m2, "d1", DimensValue2, "浮点型")
        setParamValue(m2, "d2", 2, "浮点型")
        m2.Rename(read("code") + "_02", Nothing)
        RegenerateModel(m2)
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        a = {c, 87}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 233, 2, 0)
        constraints.Clear()
        '盖板与前端盖 
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\gaiban\dj20_014-03")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(12).Id
        m2 = activate("dj20_014-03", 1)
        m2.CommonName = "盖板"
        setParamValue(m2, "d5", DimensValue4 + 15, "浮点型")
        setParamValue(m2, "d7", DimensValue2, "浮点型")
        setParamValue(m2, "d6", DimensValue3 - 2, "浮点型")
        setParamValue(m2, "d11", DimensValue4, "浮点型")
        m2.Rename(read("code") + "_03", Nothing)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(1000)
        closeWindow(m2)
        a = {c, 87}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 303, 147, 0)
        constraints.Clear()
        ' 密封垫圈与前端盖
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb848_d1")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(13).Id
        m2 = activateModel(read1("front_cover_code"), 1)
        DimensValue1 = GetParamValue(m2, "d27") '内径
        DimensValue2 = GetParamValue(m2, "d30") '外径
        DimensValue3 = GetParamValue(m2, "d29") '厚度
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m2 = activate("gb848_d1", 1)
        addParam(m2, "REMARK", "", "字符串")
        m2.CommonName = "315x5.3O型密封圈"
        setParamValue(m2, "d0", DimensValue1, "浮点型")
        setParamValue(m2, "d1", DimensValue2, "浮点型")
        setParamValue(m2, "d2", DimensValue3, "浮点型")
        m2.Rename("GBT3452_1_1992", Nothing)
        RegenerateModel(m2)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        closeWindow(m2)
        a = {c, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 509, 2, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 密封垫与后端盖
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb848_d1")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(14).Id
        m2 = activateModel(read2("bushing_code"), 1)
        DimensValue1 = GetParamValue(m2, "d7") '轴套内径
        DimensValue2 = GetParamValue(m2, "d14") '盖板与轴套装配的尺寸 
        DimensValue3 = GetParamValue(m2, "d13") '密封垫与盖板部分厚度之和
        DimensValue4 = 2 * GetParamValue(m2, "d19") '孔定位直径 
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m2 = activate("gb848_d1", 1)
        addParam(m2, "REMARK", "", "字符串")
        m2.CommonName = "密封垫"
        setParamValue(m2, "d0", DimensValue1, "浮点型")
        setParamValue(m2, "d1", DimensValue2, "浮点型")
        setParamValue(m2, "d2", 2, "浮点型")
        Threading.Thread.Sleep(1000)
        m2.Rename(read("code") + "_11", Nothing)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        a = {c, 87}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 233, 2, 0)
        constraints.Clear()
        ' 盖板与后端盖
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\gaiban\dj20_014-12")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(15).Id
        m2 = activate("dj20_014-12", 1)
        m2.CommonName = "盖板"
        setParamValue(m2, "d5", DimensValue4 + 15, "浮点型")
        setParamValue(m2, "d7", DimensValue2, "浮点型")
        setParamValue(m2, "d6", DimensValue3 - 2, "浮点型")
        setParamValue(m2, "d11", DimensValue4, "浮点型")
        m2.Rename(read("code") + "_12", Nothing)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        a = {c, 87}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 64, 64, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_7", "A_4")
        constraints.Clear()
        ' 3452.1o型密封垫圈与后端盖
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb848_d1")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(16).Id
        m2 = activateModel(read2("rear_cover_code"), 1)
        DimensValue1 = GetParamValue(m2, "d27") '内径
        DimensValue2 = GetParamValue(m2, "d35") '外径
        DimensValue3 = GetParamValue(m2, "d28") '厚度
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m2 = activate("gb848_d1", 1)
        addParam(m2, "REMARK", "", "字符串")
        m2.CommonName = "波形弹簧垫圈"
        setParamValue(m2, "d0", DimensValue1, "浮点型")
        setParamValue(m2, "d1", DimensValue2, "浮点型")
        setParamValue(m2, "d2", DimensValue3, "浮点型")
        m2.Rename("jb336-86", Nothing)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        a = {c, 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 1155, 2, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 防护罩与后端盖
        asmcomp_2 = 插入零件_2(assembly, 0, read("close_mask_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(17).Id

        a = {84, 84}
        aa = {c, 80}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "DTM55", "RIGHT", 0)
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(17).Id
        a = {c, 84}
        aa = {d, 80}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "A_16", "DTM3", 9)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 外罩与机座
        asmcomp_2 = 插入零件_2(assembly, 0, read("cover_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(18).Id

        a = {84, 84}
        aa = {c, 84}
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 4, 1, "A_19", "DTM2", 9)
        constraints = 面面约束(asmcomp_2, a, aa, 70, 677, 0)
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "DTM3", 2)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 机座与吊环螺栓
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\screw\M8\gb825_m8")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(19).Id
        m2 = activate("gb825_m8", 1)
        setParamValue(m2, "d3", read("screw6"), "浮点型")
        m2.Rename("gb5782_m" + read("standard_part6") + "x" + read("screw6"), True)
        m2.CommonName = "吊环螺栓_m" + read("standard_part6") + "x" + read("screw6")
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m1 = activateModel("transition", 0)
        a = {84, 84}
        aa = {c}
        constraints = 面面约束(asmcomp_2, a, aa, 37720, 22, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_18", "A_1")
        constraints = 装配约束(asmcomp_2, a, aa, 0, 0, 1, 1, "RIGHT", "DTM2", 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' GB5782M12螺栓、连接环与前端盖
        ' 93垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part4") + "-200hv-316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part4") + "-300hv-镀锌")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part4") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(10).Id
        d = feats.Item(20).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 189, 10, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_6", "A_1")
        constraints.Clear()
        ' 848垫圈
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-200hv-316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-镀锌")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer4") + "\d" + read("standard_part4") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(20).Id
        d = feats.Item(21).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        ' M12X35’
        If read("material_model4") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole4") + "\" + read("screw_pole4") + "m" + read("standard_part4") + "_" + read("screw_pole_length4") + "-a2-70-316l")
        ElseIf read("material_model4") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole4") + "\" + read("screw_pole4") + "m" + read("standard_part4") + "_" + read("screw_pole_length4") + "-8_8级-镀锌")
        ElseIf read("material_model4") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole4") + "\" + read("screw_pole4") + "m" + read("standard_part4") + "_" + read("screw_pole_length4") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(21).Id
        d = feats.Item(22).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' GB5782M10螺栓、前端盖与机座
        ' 93垫圈
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(8).Id
        d = feats.Item(23).Id
        a = {c, 84}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 186, 10, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_18", "A_1")
        constraints.Clear()
        ' 848垫圈
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-200hv-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer1") + "\d" + read("standard_part1") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(23).Id
        d = feats.Item(24).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        ' M12X35
        If read("material_model1") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-a2-70-316l")
        ElseIf read("material_model1") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-镀锌")
        ElseIf read("material_model1") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part1") + "_" + read("screw_pole_length1") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(24).Id
        d = feats.Item(25).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' GB5782M12螺栓、后端盖与机座
        ' 93垫圈
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-200hv-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part3") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(26).Id
        a = {c， 84}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 158, 10, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_12", "A_1")
        constraints.Clear()
        ' 848垫圈
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-200hv-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-300hv-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer3") + "\d" + read("standard_part3") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(26).Id
        d = feats.Item(27).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        ' M12X35
        If read("material_model3") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-a2-70-316l")
        ElseIf read("material_model3") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-镀锌")
        ElseIf read("material_model3") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole3") + "\" + read("screw_pole3") + "m" + read("standard_part3") + "_" + read("screw_pole_length3") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(27).Id
        d = feats.Item(28).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' GB5782M6螺栓、盖板与前端盖、后端盖
        ' M6X16
        If read("material_model5") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-a2-70-316l")
        ElseIf read("material_model5") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-镀锌")
        ElseIf read("material_model5") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(12).Id
        d = feats.Item(29).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 67, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear() '
        If read("material_model5") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-a2-70-316l")
        ElseIf read("material_model5") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-镀锌")
        ElseIf read("material_model5") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(15).Id
        d = feats.Item(30).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 67, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_4", "A_1")
        constraints.Clear()

        '-----------------------------------------------------------------------------------------------------------
        ' GB5782M6螺栓、后端盖与防护罩
        ' M6X16
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-200hv-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-300hv-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\gb93" + "\gb93d" + read("standard_part2") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(9).Id
        d = feats.Item(31).Id
        T1 = feats.Item(17).Id
        a = {c， 84}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_18", "A_1")
        a = {T1， 80}
        constraints = 装配约束(asmcomp_2, a, aa, 78, 10, 1, 1, "", "", 7)
        constraints.Clear()
        ' 848垫圈

        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-200hv-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-300hv-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\washers\" + read("washer2") + "\d" + read("standard_part2") + "-300hv-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(31).Id
        d = feats.Item(32).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 15, 2, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        ' M12X35
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-a2-70-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-8_8级-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole1") + "\" + read("screw_pole1") + "m" + read("standard_part2") + "_" + read("standard_part2_screw_nail2") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(32).Id
        d = feats.Item(33).Id
        a = {c}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 7, 47, 0)
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 1096平键与轴
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\key\gb_1069")
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(34).Id
        m2 = activateModel(read3("rotor_shaft_code"), 1)
        DimensValue1 = GetParamValue(m2, "d149") '键长
        DimensValue2 = GetParamValue(m2, "d52") '该轴轴径.
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m2 = activate("gb_1069", 1)
        m2.CommonName = "平键14X50"
        标准键数据(DimensValue2)
        setParamValue(m2, "d6", DimensValue1, "浮点型")
        setParamValue(m2, "d5", B / 2, "浮点型")
        setParamValue(m2, "d4", T1 + T2, "浮点型")
        m2.Rename("gb_1069" + "_" + DimensValue1.ToString + "x" + DimensValue2.ToString, True)
        AC.Session.RunMacro("~ Command `ProCmdRegenPart`;")
        Threading.Thread.Sleep(500)
        closeWindow(m2)
        m1 = activateModel("transition", 0)
        AC.Session.RunMacro("~ Command `ProCmdRegenAuto`;")
        a = {c, 83}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 1767, 69, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 1776, 78, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 1774, 76, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 风扇与轴
        asmcomp_2 = 插入零件_2(assembly, 0, read("fan_path"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(35).Id
        a = {c, 83}
        aa = {d, 87}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 1691, 64, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 5783螺栓、风扇轴套
        ' GB6170 M8螺母
        If read("material_model2") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part2") + "-a2-70-316l")
        ElseIf read("material_model2") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part2") + "-8级-镀锌")
        ElseIf read("material_model2") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\nut\gb6170\gb6170m" + read("standard_part2") + "-8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(35).Id
        d = feats.Item(36).Id
        a = {c}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "AA_2", "A_5")
        a = {c, 87}
        constraints = 面面约束(asmcomp_2, a, aa, 303, 312, 3, -28.7)
        constraints.Clear()
        ' GB5783 M8螺栓

        If read("material_model5") = "1" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-a2-70-316l")
        ElseIf read("material_model5") = "2" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-镀锌")
        ElseIf read("material_model5") = "3" Then
            asmcomp_2 = 插入零件_1(assembly, 1, "E:\works\creo\standard_part\bolts\" + read("screw_pole5") + "\" + read("screw_pole5") + "m" + read("standard_part5") + "_" + read("screw_pole_length5") + "-8_8级-达克罗")
        End If
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(37).Id
        d = feats.Item(38).Id
        a = {c}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_5", "A_1")
        constraints = 面面约束(asmcomp_2, a, aa, 312, 47, 0)
        constraints.Clear()
        ' 轴用弹性挡圈垫圈894-45
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\washers\gb_t894_" + read("spring_washer1"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(39).Id
        a = {c, 83}
        aa = {d}
        constraints = 轴约束(asmcomp_2, a, aa, "A_1", "A_3")
        constraints = 面面约束(asmcomp_2, a, aa, 1726, 2, 0)
        constraints.Clear()
        '-----------------------------------------------------------------------------------------------------------
        ' 276-6313轴承与轴
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bearing\gbt276_" + read("bearing1"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(40).Id
        a = {c, 83}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 70, 233, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 110, 201, 0)
        constraints.Clear()
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")
        asmcomp_2 = 插入零件_2(assembly, 1, "E:\works\Creo\standard_part\bearing\gbt276_" + read("bearing2"))
        feats = listModelItem(m1, "FEATURE")
        c = feats.Item(7).Id
        d = feats.Item(41).Id
        a = {c, 83}
        aa = {d}
        constraints = 面面约束(asmcomp_2, a, aa, 70, 233, 0)
        constraints = 面面约束(asmcomp_2, a, aa, 533, 193, 0)
        constraints.Clear()
        'setParamValue(AC.Session.GetModel("gbt276_" + read("bearing1"), 1), "SOURCE", "外购件"， "字符串")
        setParamValue(AC.Session.GetModel("gbt276_" + read("bearing2"), 1), "SOURCE", "外购件"， "字符串")

        feats = listModelItem(m1, "FEATURE")
        For i = 19 To 30
            参考阵列(feats， i)
        Next
        轴阵列(feats， 31)
        For i = 32 To 33
            参考阵列(feats， i)
        Next
        '干涉检查(m1)
        Dim ItemString As String()
        ItemString = Split(read("itemstring"), ";")
        Threading.Thread.Sleep(2000)

        添加bom新内容(ItemString, m1)
        Dim StringNumber As Double
        If ItemString.Length = 1 Then
            StringNumber = ItemString.Length - 1
        Else
            StringNumber = ItemString.Length
        End If

        m1.Rename(read("CODE"), True)
        Dim REQUIREMENT As String()
        REQUIREMENT = Split(read("REQUIREMENT"), ";") '不超过255字符

        Dim inspect As String
        inspect = 干涉检查(m1)
        创建文本(path + "\" + read("CODE") + ".txt", inspect)
        If read("SHEET_SIZE") = "A0" Then
            sheet_size = "asm_a0_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A1" Then
            sheet_size = "asm_a1_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A2" Then
            sheet_size = "asm_a2_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A3" Then
            sheet_size = "asm_a3_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        ElseIf read("SHEET_SIZE") = "A4" Then
            sheet_size = "asm_a4_sb"
            m2 = 工程图(m1, sheet_size, 0.5, "X", 1, 0, 1, REQUIREMENT, {100, 200}, {450, 500}, {0, 0}, {750, 500})
        End If
        drawing = CType(m2, IpfcDrawing)
        view2Ds = listViews(drawing)
        Dim Scale_drw As String()
        Scale_drw = Split(read("PROPORTION"), ":") 'PROPORTION
        view2Ds.Item(0).Scale = Val(Scale_drw(0)) / Val(Scale_drw(1))
        刨视图("view_2", "XSEC0001", "halfPlane", 41 + StringNumber / 4)

        加入球标()
        AC.Session.RunMacro("~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (37 + StringNumber / 4).ToString + "`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;" +
                            "~ Activate `show_model_annotations` `psh_ok`;")

        AC.Session.RunMacro("~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (39 + StringNumber / 4).ToString + "`;" +
                            "~ Expand `main_dlg_cur` `PHTLeft.AssyTree` `node" + (48 + StringNumber / 4).ToString + "`;" +
                            "~ Select `main_dlg_cur` `PHTLeft.AssyTree` 1 `node" + (55 + StringNumber / 4).ToString + "`;" +
                            "~ Command `ProCmdDwgShowAllAnnots` ;" +
                            "~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `name`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `type`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row0` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row1` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row2` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Arm `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Select `show_model_annotations` `tbl_dim` 2 `row3` `show`;~ Trigger `show_model_annotations` `tbl_dim` 2 `` ``;~ Activate `show_model_annotations` `psh_ok`;")
        selBuffer.Clear()
        modelItems = listModelItem(m2, "DTL_SYM_INSTANCE")
        note_Item_1 = modelItems.Item(8)
        note_Item_2 = modelItems.Item(9)
        note_Item_3 = modelItems.Item(10)
        note_Item_4 = modelItems.Item(11)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(note_Item_1, Nothing)
        compSelect_2 = (New CMpfcSelect).CreateModelItemSelection(note_Item_2, Nothing)
        compSelect_3 = (New CMpfcSelect).CreateModelItemSelection(note_Item_3, Nothing)
        compSelect_4 = (New CMpfcSelect).CreateModelItemSelection(note_Item_4, Nothing)
        ' 向选择缓冲区添加某一个选择对象，此方法能达到选择宏录制的效果
        selBuffer.AddSelection(compSelect_1)
        selBuffer.AddSelection(compSelect_2)
        selBuffer.AddSelection(compSelect_3)
        selBuffer.AddSelection(compSelect_4)
        AC.Session.RunMacro("~ Command `ProCmdEditDeleteDwg`;")
        AC.Session.RunMacro("~ Command `ProCmdDwgTblBlnShowView`;" +
                            "~ Select `main_dlg_cur` `DrwAssyTree` 1 `node0:view_2 92 0 2 -1 -1`;" +
                            "~ Trail `MiniToolbar` `MiniToolbar` `UIT_TRANSLUCENT` `NEED_TO_CLOSE`;")

        移动视图("general", "view_1", 218, 355)
        移动视图("general", "view_2", 575, 355)
        添加图幅注释(m2, read("T_MOTOR"))
        'texts = read("T_MOTOR")
        '无引线注释(drawing, texts, 5, 235, 0, 0)
        'modelItems = listModelItem(m2, "DTL_NOTE")
        'note_Item_1 = modelItems.Item(modelItems.Count - 1)
        '修改注释字体大小(modelItems, modelItems.Count - 1, 2)

        smodel = m2.Descr
        smodel.Path = path
        m2.Backup(smodel)

        mxs = 明细表(m2)
        tms = 图样目录表(path$， read("code"))
        tjys = 通借用表(path$， read("code"))
        If 是否外购(sources_mx) = True Then
            wgs = 外购表(path$， read("code"))
        End If
        If 是否标准(sources_mx) = True Then
            bzs = 标准表(path$， read("code"))
        End If
        Threading.Thread.Sleep(1000)
        导入表(path, read("CODE"), read("MARK"), read("CODE"))
        Threading.Thread.Sleep(2000)
        If read("isopen") = "1" Then
            openModel("asm", path + "\" + read("CODE"))
            retrieveModel("drw", path + "\" + read("CODE"))
            activateModel(path + "\" + read("CODE"), 2)
        End If
    End Sub
    Public Function 参考阵列(feats As IpfcModelItems， j#)

        compItem_1 = feats.Item(j)
        compSelect_1 = (New CMpfcSelect).CreateModelItemSelection(compItem_1, Nothing)
        selBuffer.AddSelection(compSelect_1)
        AC.Session.RunMacro("8 ~ Command `ProCmdPattern` ; ~ Activate `main_dlg_cur` `dashInst0.stdbtn_1`;")
        selBuffer.Clear()

    End Function

End Class






